{"version":3,"file":"module.js","mappings":"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","sources":["webpack://victorialogs-datasource/external amd \"@emotion/css\"","webpack://victorialogs-datasource/external amd \"@grafana/data\"","webpack://victorialogs-datasource/external amd \"@grafana/runtime\"","webpack://victorialogs-datasource/external amd \"@grafana/ui\"","webpack://victorialogs-datasource/external amd \"lodash\"","webpack://victorialogs-datasource/external amd \"react\"","webpack://victorialogs-datasource/webpack/bootstrap","webpack://victorialogs-datasource/webpack/runtime/compat get default export","webpack://victorialogs-datasource/webpack/runtime/define property getters","webpack://victorialogs-datasource/webpack/runtime/global","webpack://victorialogs-datasource/webpack/runtime/hasOwnProperty shorthand","webpack://victorialogs-datasource/webpack/runtime/make namespace object","webpack://victorialogs-datasource/../node_modules/react-use/esm/useLatest.js","webpack://victorialogs-datasource/../node_modules/@grafana/e2e-selectors/dist/esm/selectors/components.js","webpack://victorialogs-datasource/../node_modules/@grafana/e2e-selectors/dist/esm/selectors/index.js","webpack://victorialogs-datasource/../node_modules/@grafana/e2e-selectors/dist/esm/selectors/pages.js","webpack://victorialogs-datasource/./components/monaco-query-field/MonacoQueryField.tsx","webpack://victorialogs-datasource/./components/monaco-query-field/MonacoQueryFieldLazy.tsx","webpack://victorialogs-datasource/./components/monaco-query-field/MonacoQueryFieldWrapper.tsx","webpack://victorialogs-datasource/./components/QueryEditor/QueryField.tsx","webpack://victorialogs-datasource/./components/QueryEditor/QueryCodeEditor.tsx","webpack://victorialogs-datasource/./types.ts","webpack://victorialogs-datasource/./components/QueryEditor/QueryEditor.tsx","webpack://victorialogs-datasource/./components/QueryEditor/state.ts","webpack://victorialogs-datasource/./components/QueryEditor/QueryEditorForAlerting.tsx","webpack://victorialogs-datasource/./components/QueryEditor/QueryEditorByApp.tsx","webpack://victorialogs-datasource/./configuration/AlertingSettings.tsx","webpack://victorialogs-datasource/./configuration/HelpfulLinks.tsx","webpack://victorialogs-datasource/./configuration/QuerySettings.tsx","webpack://victorialogs-datasource/./configuration/ConfigEditor.tsx","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/util/isFunction.js","webpack://victorialogs-datasource/../node_modules/tslib/tslib.es6.mjs","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/Subscription.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/config.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/util/noop.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/NotificationFactories.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/util/errorContext.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/Subscriber.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/operators/map.js","webpack://victorialogs-datasource/../node_modules/rxjs/dist/esm5/internal/util/lift.js","webpack://victorialogs-datasource/./getDerivedFields.ts","webpack://victorialogs-datasource/./makeTableFrames.ts","webpack://victorialogs-datasource/../node_modules/@lezer/common/dist/index.js","webpack://victorialogs-datasource/../node_modules/@lezer/lr/dist/index.js","webpack://victorialogs-datasource/../node_modules/@grafana/lezer-logql/index.es.js","webpack://victorialogs-datasource/./queryUtils.ts","webpack://victorialogs-datasource/./backendResultTransformer.ts","webpack://victorialogs-datasource/./responseUtils.ts","webpack://victorialogs-datasource/./languageUtils.ts","webpack://victorialogs-datasource/./modifyQuery.ts","webpack://victorialogs-datasource/./parsingUtils.ts","webpack://victorialogs-datasource/./datasource.ts","webpack://victorialogs-datasource/./module.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__545__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__980__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { useRef } from 'react';\nvar useLatest = function (value) {\n    var ref = useRef(value);\n    ref.current = value;\n    return ref;\n};\nexport default useLatest;\n","const Components = {\n  Breadcrumbs: {\n    breadcrumb: (title) => `data-testid ${title} breadcrumb`\n  },\n  TimePicker: {\n    openButton: \"data-testid TimePicker Open Button\",\n    fromField: \"Time Range from field\",\n    toField: \"Time Range to field\",\n    applyTimeRange: \"data-testid TimePicker submit button\",\n    calendar: {\n      label: \"Time Range calendar\",\n      openButton: \"Open time range calendar\",\n      closeButton: \"Close time range Calendar\"\n    },\n    absoluteTimeRangeTitle: \"data-testid-absolute-time-range-narrow\"\n  },\n  DataSourcePermissions: {\n    form: () => 'form[name=\"addPermission\"]',\n    roleType: \"Role to add new permission to\",\n    rolePicker: \"Built-in role picker\",\n    permissionLevel: \"Permission Level\"\n  },\n  DataSource: {\n    TestData: {\n      QueryTab: {\n        scenarioSelectContainer: \"Test Data Query scenario select container\",\n        scenarioSelect: \"Test Data Query scenario select\",\n        max: \"TestData max\",\n        min: \"TestData min\",\n        noise: \"TestData noise\",\n        seriesCount: \"TestData series count\",\n        spread: \"TestData spread\",\n        startValue: \"TestData start value\",\n        drop: \"TestData drop values\"\n      }\n    },\n    DataSourceHttpSettings: {\n      urlInput: \"Datasource HTTP settings url\"\n    },\n    Jaeger: {\n      traceIDInput: \"Trace ID\"\n    },\n    Prometheus: {\n      configPage: {\n        exemplarsAddButton: \"Add exemplar config button\",\n        internalLinkSwitch: \"Internal link switch\"\n      },\n      exemplarMarker: \"Exemplar marker\"\n    }\n  },\n  Menu: {\n    MenuComponent: (title) => `${title} menu`,\n    MenuGroup: (title) => `${title} menu group`,\n    MenuItem: (title) => `${title} menu item`,\n    SubMenu: {\n      container: \"SubMenu container\",\n      icon: \"SubMenu icon\"\n    }\n  },\n  Panels: {\n    Panel: {\n      title: (title) => `data-testid Panel header ${title}`,\n      headerItems: (item) => `Panel header item ${item}`,\n      menuItems: (item) => `data-testid Panel menu item ${item}`,\n      menu: (title) => `data-testid Panel menu ${title}`,\n      containerByTitle: (title) => `${title} panel`,\n      headerCornerInfo: (mode) => `Panel header ${mode}`,\n      loadingBar: () => `Panel loading bar`,\n      HoverWidget: {\n        container: \"data-testid hover-header-container\",\n        dragIcon: \"data-testid drag-icon\"\n      }\n    },\n    Visualization: {\n      Graph: {\n        container: \"Graph container\",\n        VisualizationTab: {\n          legendSection: \"Legend section\"\n        },\n        Legend: {\n          legendItemAlias: (name) => `gpl alias ${name}`,\n          showLegendSwitch: \"gpl show legend\"\n        },\n        xAxis: {\n          labels: () => \"div.flot-x-axis > div.flot-tick-label\"\n        }\n      },\n      BarGauge: {\n        /**\n         * @deprecated use valueV2 from Grafana 8.3 instead\n         */\n        value: \"Bar gauge value\",\n        valueV2: \"data-testid Bar gauge value\"\n      },\n      PieChart: {\n        svgSlice: \"Pie Chart Slice\"\n      },\n      Text: {\n        container: () => \".markdown-html\"\n      },\n      Table: {\n        header: \"table header\",\n        footer: \"table-footer\"\n      }\n    }\n  },\n  VizLegend: {\n    seriesName: (name) => `VizLegend series ${name}`\n  },\n  Drawer: {\n    General: {\n      title: (title) => `Drawer title ${title}`,\n      expand: \"Drawer expand\",\n      contract: \"Drawer contract\",\n      close: \"Drawer close\",\n      rcContentWrapper: () => \".rc-drawer-content-wrapper\"\n    }\n  },\n  PanelEditor: {\n    General: {\n      content: \"Panel editor content\"\n    },\n    OptionsPane: {\n      content: \"Panel editor option pane content\",\n      select: \"Panel editor option pane select\",\n      fieldLabel: (type) => `${type} field property editor`\n    },\n    // not sure about the naming *DataPane*\n    DataPane: {\n      content: \"Panel editor data pane content\"\n    },\n    applyButton: \"data-testid Apply changes and go back to dashboard\",\n    toggleVizPicker: \"data-testid toggle-viz-picker\",\n    toggleVizOptions: \"data-testid toggle-viz-options\",\n    toggleTableView: \"toggle-table-view\",\n    // [Geomap] Map controls\n    measureButton: \"show measure tools\"\n  },\n  PanelInspector: {\n    Data: {\n      content: \"Panel inspector Data content\"\n    },\n    Stats: {\n      content: \"Panel inspector Stats content\"\n    },\n    Json: {\n      content: \"Panel inspector Json content\"\n    },\n    Query: {\n      content: \"Panel inspector Query content\",\n      refreshButton: \"Panel inspector Query refresh button\",\n      jsonObjectKeys: () => \".json-formatter-key\"\n    }\n  },\n  Tab: {\n    title: (title) => `Tab ${title}`,\n    active: () => '[class*=\"-activeTabStyle\"]'\n  },\n  RefreshPicker: {\n    /**\n     * @deprecated use runButtonV2 from Grafana 8.3 instead\n     */\n    runButton: \"RefreshPicker run button\",\n    /**\n     * @deprecated use intervalButtonV2 from Grafana 8.3 instead\n     */\n    intervalButton: \"RefreshPicker interval button\",\n    runButtonV2: \"data-testid RefreshPicker run button\",\n    intervalButtonV2: \"data-testid RefreshPicker interval button\"\n  },\n  QueryTab: {\n    content: \"Query editor tab content\",\n    queryInspectorButton: \"Query inspector button\",\n    queryHistoryButton: \"Rich history button\",\n    addQuery: \"Query editor add query button\"\n  },\n  QueryHistory: {\n    queryText: \"Query text\"\n  },\n  QueryEditorRows: {\n    rows: \"Query editor row\"\n  },\n  QueryEditorRow: {\n    actionButton: (title) => `${title}`,\n    title: (refId) => `Query editor row title ${refId}`,\n    container: (refId) => `Query editor row ${refId}`\n  },\n  AlertTab: {\n    content: \"Alert editor tab content\"\n  },\n  Alert: {\n    /**\n     * @deprecated use alertV2 from Grafana 8.3 instead\n     */\n    alert: (severity) => `Alert ${severity}`,\n    alertV2: (severity) => `data-testid Alert ${severity}`\n  },\n  TransformTab: {\n    content: \"Transform editor tab content\",\n    newTransform: (name) => `New transform ${name}`,\n    transformationEditor: (name) => `Transformation editor ${name}`,\n    transformationEditorDebugger: (name) => `Transformation editor debugger ${name}`\n  },\n  Transforms: {\n    card: (name) => `New transform ${name}`,\n    Reduce: {\n      modeLabel: \"Transform mode label\",\n      calculationsLabel: \"Transform calculations label\"\n    },\n    SpatialOperations: {\n      actionLabel: \"root Action field property editor\",\n      locationLabel: \"root Location field property editor\",\n      location: {\n        autoOption: \"Auto location option\",\n        coords: {\n          option: \"Coords location option\",\n          latitudeFieldLabel: \"root Latitude field field property editor\",\n          longitudeFieldLabel: \"root Longitude field field property editor\"\n        },\n        geohash: {\n          option: \"Geohash location option\",\n          geohashFieldLabel: \"root Geohash field field property editor\"\n        },\n        lookup: {\n          option: \"Lookup location option\",\n          lookupFieldLabel: \"root Lookup field field property editor\",\n          gazetteerFieldLabel: \"root Gazetteer field property editor\"\n        }\n      }\n    },\n    searchInput: \"search transformations\"\n  },\n  NavBar: {\n    Configuration: {\n      button: \"Configuration\"\n    },\n    Toggle: {\n      button: \"Toggle menu\"\n    },\n    Reporting: {\n      button: \"Reporting\"\n    }\n  },\n  NavMenu: {\n    item: \"data-testid Nav menu item\"\n  },\n  NavToolbar: {\n    container: \"data-testid Nav toolbar\"\n  },\n  PageToolbar: {\n    container: () => \".page-toolbar\",\n    item: (tooltip) => `${tooltip}`,\n    itemButton: (title) => `data-testid ${title}`\n  },\n  QueryEditorToolbarItem: {\n    button: (title) => `QueryEditor toolbar item button ${title}`\n  },\n  BackButton: {\n    backArrow: \"Go Back\"\n  },\n  OptionsGroup: {\n    group: (title) => title ? `Options group ${title}` : \"Options group\",\n    toggle: (title) => title ? `Options group ${title} toggle` : \"Options group toggle\"\n  },\n  PluginVisualization: {\n    item: (title) => `Plugin visualization item ${title}`,\n    current: () => '[class*=\"-currentVisualizationItem\"]'\n  },\n  Select: {\n    option: \"Select option\",\n    input: () => 'input[id*=\"time-options-input\"]',\n    singleValue: () => 'div[class*=\"-singleValue\"]'\n  },\n  FieldConfigEditor: {\n    content: \"Field config editor content\"\n  },\n  OverridesConfigEditor: {\n    content: \"Field overrides editor content\"\n  },\n  FolderPicker: {\n    /**\n     * @deprecated use containerV2 from Grafana 8.3 instead\n     */\n    container: \"Folder picker select container\",\n    containerV2: \"data-testid Folder picker select container\",\n    input: \"Select a folder\"\n  },\n  ReadonlyFolderPicker: {\n    container: \"data-testid Readonly folder picker select container\"\n  },\n  DataSourcePicker: {\n    container: \"data-testid Data source picker select container\",\n    /**\n     * @deprecated use inputV2 instead\n     */\n    input: () => 'input[id=\"data-source-picker\"]',\n    inputV2: \"Select a data source\"\n  },\n  TimeZonePicker: {\n    /**\n     * @deprecated use TimeZonePicker.containerV2 from Grafana 8.3 instead\n     */\n    container: \"Time zone picker select container\",\n    containerV2: \"data-testid Time zone picker select container\"\n  },\n  WeekStartPicker: {\n    /**\n     * @deprecated use WeekStartPicker.containerV2 from Grafana 8.3 instead\n     */\n    container: \"Choose starting day of the week\",\n    containerV2: \"data-testid Choose starting day of the week\",\n    placeholder: \"Choose starting day of the week\"\n  },\n  TraceViewer: {\n    spanBar: \"data-testid SpanBar--wrapper\"\n  },\n  QueryField: { container: \"Query field\" },\n  QueryBuilder: {\n    queryPatterns: \"Query patterns\",\n    labelSelect: \"Select label\",\n    valueSelect: \"Select value\",\n    matchOperatorSelect: \"Select match operator\"\n  },\n  ValuePicker: {\n    button: (name) => `Value picker button ${name}`,\n    select: (name) => `Value picker select ${name}`\n  },\n  Search: {\n    /**\n     * @deprecated use sectionV2 from Grafana 8.3 instead\n     */\n    section: \"Search section\",\n    sectionV2: \"data-testid Search section\",\n    /**\n     * @deprecated use itemsV2 from Grafana 8.3 instead\n     */\n    items: \"Search items\",\n    itemsV2: \"data-testid Search items\",\n    cards: \"data-testid Search cards\",\n    collapseFolder: (sectionId) => `data-testid Collapse folder ${sectionId}`,\n    expandFolder: (sectionId) => `data-testid Expand folder ${sectionId}`,\n    dashboardItem: (item) => `${Components.Search.dashboardItems} ${item}`,\n    dashboardCard: (item) => `data-testid Search card ${item}`,\n    folderHeader: (folderName) => `data-testid Folder header ${folderName}`,\n    folderContent: (folderName) => `data-testid Folder content ${folderName}`,\n    dashboardItems: \"data-testid Dashboard search item\"\n  },\n  DashboardLinks: {\n    container: \"data-testid Dashboard link container\",\n    dropDown: \"data-testid Dashboard link dropdown\",\n    link: \"data-testid Dashboard link\"\n  },\n  LoadingIndicator: {\n    icon: \"Loading indicator\"\n  },\n  CallToActionCard: {\n    /**\n     * @deprecated use buttonV2 from Grafana 8.3 instead\n     */\n    button: (name) => `Call to action button ${name}`,\n    buttonV2: (name) => `data-testid Call to action button ${name}`\n  },\n  DataLinksContextMenu: {\n    singleLink: \"Data link\"\n  },\n  CodeEditor: {\n    container: \"Code editor container\"\n  },\n  DashboardImportPage: {\n    textarea: \"data-testid-import-dashboard-textarea\",\n    submit: \"data-testid-load-dashboard\"\n  },\n  ImportDashboardForm: {\n    name: \"data-testid-import-dashboard-title\",\n    submit: \"data-testid-import-dashboard-submit\"\n  },\n  PanelAlertTabContent: {\n    content: \"Unified alert editor tab content\"\n  },\n  VisualizationPreview: {\n    card: (name) => `data-testid suggestion-${name}`\n  },\n  ColorSwatch: {\n    name: `data-testid-colorswatch`\n  },\n  DashboardRow: {\n    title: (title) => `data-testid dashboard-row-title-${title}`\n  },\n  UserProfile: {\n    profileSaveButton: \"data-testid-user-profile-save\",\n    preferencesSaveButton: \"data-testid-shared-prefs-save\",\n    orgsTable: \"data-testid-user-orgs-table\",\n    sessionsTable: \"data-testid-user-sessions-table\"\n  },\n  FileUpload: {\n    inputField: \"data-testid-file-upload-input-field\",\n    fileNameSpan: \"data-testid-file-upload-file-name\"\n  },\n  DebugOverlay: {\n    wrapper: \"debug-overlay\"\n  },\n  OrgRolePicker: {\n    input: \"Role\"\n  },\n  AnalyticsToolbarButton: {\n    button: \"Dashboard insights\"\n  },\n  Variables: {\n    variableOption: \"data-testid variable-option\"\n  },\n  Annotations: {\n    annotationsTypeInput: \"annotations-type-input\",\n    annotationsChoosePanelInput: \"choose-panels-input\"\n  }\n};\n\nexport { Components };\n//# sourceMappingURL=components.js.map\n","import { Components } from './components.js';\nexport { Components } from './components.js';\nimport { Pages } from './pages.js';\nexport { Pages } from './pages.js';\n\nconst selectors = {\n  pages: Pages,\n  components: Components\n};\n\nexport { selectors };\n//# sourceMappingURL=index.js.map\n","import { Components } from './components.js';\n\nconst Pages = {\n  Login: {\n    url: \"/login\",\n    username: \"Username input field\",\n    password: \"Password input field\",\n    submit: \"Login button\",\n    skip: \"Skip change password button\"\n  },\n  Home: {\n    url: \"/\"\n  },\n  DataSource: {\n    name: \"Data source settings page name input field\",\n    delete: \"Data source settings page Delete button\",\n    readOnly: \"Data source settings page read only message\",\n    saveAndTest: \"data-testid Data source settings page Save and Test button\",\n    alert: \"Data source settings page Alert\"\n  },\n  DataSources: {\n    url: \"/datasources\",\n    dataSources: (dataSourceName) => `Data source list item ${dataSourceName}`\n  },\n  EditDataSource: {\n    url: (dataSourceUid) => `/datasources/edit/${dataSourceUid}`,\n    settings: \"Datasource settings page basic settings\"\n  },\n  AddDataSource: {\n    url: \"/datasources/new\",\n    /** @deprecated Use dataSourcePluginsV2 */\n    dataSourcePlugins: (pluginName) => `Data source plugin item ${pluginName}`,\n    dataSourcePluginsV2: (pluginName) => `Add new data source ${pluginName}`\n  },\n  ConfirmModal: {\n    delete: \"data-testid Confirm Modal Danger Button\"\n  },\n  AddDashboard: {\n    url: \"/dashboard/new\",\n    itemButton: (title) => `data-testid ${title}`,\n    addNewPanel: \"Add new panel\",\n    addNewRow: \"Add new row\",\n    addNewPanelLibrary: \"Add new panel from panel library\"\n  },\n  Dashboard: {\n    url: (uid) => `/d/${uid}`,\n    DashNav: {\n      /**\n       * @deprecated use navV2 from Grafana 8.3 instead\n       */\n      nav: \"Dashboard navigation\",\n      navV2: \"data-testid Dashboard navigation\",\n      publicDashboardTag: \"data-testid public dashboard tag\"\n    },\n    SubMenu: {\n      submenu: \"Dashboard submenu\",\n      submenuItem: \"data-testid template variable\",\n      submenuItemLabels: (item) => `data-testid Dashboard template variables submenu Label ${item}`,\n      submenuItemValueDropDownValueLinkTexts: (item) => `data-testid Dashboard template variables Variable Value DropDown value link text ${item}`,\n      submenuItemValueDropDownDropDown: \"Variable options\",\n      submenuItemValueDropDownOptionTexts: (item) => `data-testid Dashboard template variables Variable Value DropDown option text ${item}`,\n      Annotations: {\n        annotationsWrapper: \"data-testid annotation-wrapper\",\n        annotationLabel: (label) => `data-testid Dashboard annotations submenu Label ${label}`,\n        annotationToggle: (label) => `data-testid Dashboard annotations submenu Toggle ${label}`\n      }\n    },\n    Settings: {\n      Actions: {\n        close: \"data-testid dashboard-settings-close\"\n      },\n      General: {\n        deleteDashBoard: \"Dashboard settings page delete dashboard button\",\n        sectionItems: (item) => `Dashboard settings section item ${item}`,\n        saveDashBoard: \"Dashboard settings aside actions Save button\",\n        saveAsDashBoard: \"Dashboard settings aside actions Save As button\",\n        /**\n         * @deprecated use components.TimeZonePicker.containerV2 from Grafana 8.3 instead\n         */\n        timezone: \"Time zone picker select container\",\n        title: \"Tab General\"\n      },\n      Annotations: {\n        List: {\n          /**\n           * @deprecated use addAnnotationCTAV2 from Grafana 8.3 instead\n           */\n          addAnnotationCTA: Components.CallToActionCard.button(\"Add annotation query\"),\n          addAnnotationCTAV2: Components.CallToActionCard.buttonV2(\"Add annotation query\")\n        },\n        Settings: {\n          name: \"Annotations settings name input\"\n        },\n        NewAnnotation: {\n          panelFilterSelect: \"data-testid annotations-panel-filter\",\n          showInLabel: \"show-in-label\",\n          previewInDashboard: \"data-testid annotations-preview\"\n        }\n      },\n      Variables: {\n        List: {\n          /**\n           * @deprecated use addVariableCTAV2 from Grafana 8.3 instead\n           */\n          addVariableCTA: Components.CallToActionCard.button(\"Add variable\"),\n          addVariableCTAV2: Components.CallToActionCard.buttonV2(\"Add variable\"),\n          newButton: \"Variable editor New variable button\",\n          table: \"Variable editor Table\",\n          tableRowNameFields: (variableName) => `Variable editor Table Name field ${variableName}`,\n          tableRowDefinitionFields: (variableName) => `Variable editor Table Definition field ${variableName}`,\n          tableRowArrowUpButtons: (variableName) => `Variable editor Table ArrowUp button ${variableName}`,\n          tableRowArrowDownButtons: (variableName) => `Variable editor Table ArrowDown button ${variableName}`,\n          tableRowDuplicateButtons: (variableName) => `Variable editor Table Duplicate button ${variableName}`,\n          tableRowRemoveButtons: (variableName) => `Variable editor Table Remove button ${variableName}`\n        },\n        Edit: {\n          General: {\n            headerLink: \"Variable editor Header link\",\n            modeLabelNew: \"Variable editor Header mode New\",\n            /**\n             * @deprecated\n             */\n            modeLabelEdit: \"Variable editor Header mode Edit\",\n            generalNameInput: \"Variable editor Form Name field\",\n            generalNameInputV2: \"data-testid Variable editor Form Name field\",\n            generalTypeSelect: \"Variable editor Form Type select\",\n            generalTypeSelectV2: \"data-testid Variable editor Form Type select\",\n            generalLabelInput: \"Variable editor Form Label field\",\n            generalLabelInputV2: \"data-testid Variable editor Form Label field\",\n            generalHideSelect: \"Variable editor Form Hide select\",\n            generalHideSelectV2: \"data-testid Variable editor Form Hide select\",\n            selectionOptionsMultiSwitch: \"Variable editor Form Multi switch\",\n            selectionOptionsIncludeAllSwitch: \"Variable editor Form IncludeAll switch\",\n            selectionOptionsCustomAllInput: \"Variable editor Form IncludeAll field\",\n            selectionOptionsCustomAllInputV2: \"data-testid Variable editor Form IncludeAll field\",\n            previewOfValuesOption: \"Variable editor Preview of Values option\",\n            submitButton: \"Variable editor Submit button\",\n            applyButton: \"data-testid Variable editor Apply button\"\n          },\n          QueryVariable: {\n            queryOptionsDataSourceSelect: Components.DataSourcePicker.container,\n            queryOptionsRefreshSelect: \"Variable editor Form Query Refresh select\",\n            queryOptionsRefreshSelectV2: \"data-testid Variable editor Form Query Refresh select\",\n            queryOptionsRegExInput: \"Variable editor Form Query RegEx field\",\n            queryOptionsRegExInputV2: \"data-testid Variable editor Form Query RegEx field\",\n            queryOptionsSortSelect: \"Variable editor Form Query Sort select\",\n            queryOptionsSortSelectV2: \"data-testid Variable editor Form Query Sort select\",\n            queryOptionsQueryInput: \"Variable editor Form Default Variable Query Editor textarea\",\n            valueGroupsTagsEnabledSwitch: \"Variable editor Form Query UseTags switch\",\n            valueGroupsTagsTagsQueryInput: \"Variable editor Form Query TagsQuery field\",\n            valueGroupsTagsTagsValuesQueryInput: \"Variable editor Form Query TagsValuesQuery field\"\n          },\n          ConstantVariable: {\n            constantOptionsQueryInput: \"Variable editor Form Constant Query field\",\n            constantOptionsQueryInputV2: \"data-testid Variable editor Form Constant Query field\"\n          },\n          DatasourceVariable: {\n            datasourceSelect: \"data-testid datasource variable datasource type\"\n          },\n          TextBoxVariable: {\n            textBoxOptionsQueryInput: \"Variable editor Form TextBox Query field\",\n            textBoxOptionsQueryInputV2: \"data-testid Variable editor Form TextBox Query field\"\n          },\n          CustomVariable: {\n            customValueInput: \"data-testid custom-variable-input\"\n          },\n          IntervalVariable: {\n            intervalsValueInput: \"data-testid interval variable intervals input\"\n          }\n        }\n      }\n    },\n    Annotations: {\n      marker: \"data-testid annotation-marker\"\n    }\n  },\n  Dashboards: {\n    url: \"/dashboards\",\n    /**\n     * @deprecated use components.Search.dashboardItem from Grafana 8.3 instead\n     */\n    dashboards: (title) => `Dashboard search item ${title}`\n  },\n  SaveDashboardAsModal: {\n    newName: \"Save dashboard title field\",\n    save: \"Save dashboard button\"\n  },\n  SaveDashboardModal: {\n    save: \"Dashboard settings Save Dashboard Modal Save button\",\n    saveVariables: \"Dashboard settings Save Dashboard Modal Save variables checkbox\",\n    saveTimerange: \"Dashboard settings Save Dashboard Modal Save timerange checkbox\"\n  },\n  SharePanelModal: {\n    linkToRenderedImage: \"Link to rendered image\"\n  },\n  ShareDashboardModal: {\n    shareButton: \"Share dashboard or panel\",\n    PublicDashboard: {\n      Tab: \"Tab Public dashboard\",\n      WillBePublicCheckbox: \"data-testid public dashboard will be public checkbox\",\n      LimitedDSCheckbox: \"data-testid public dashboard limited datasources checkbox\",\n      CostIncreaseCheckbox: \"data-testid public dashboard cost may increase checkbox\",\n      PauseSwitch: \"data-testid public dashboard pause switch\",\n      EnableAnnotationsSwitch: \"data-testid public dashboard on off switch for annotations\",\n      CreateButton: \"data-testid public dashboard create button\",\n      DeleteButton: \"data-testid public dashboard delete button\",\n      CopyUrlInput: \"data-testid public dashboard copy url input\",\n      CopyUrlButton: \"data-testid public dashboard copy url button\",\n      TemplateVariablesWarningAlert: \"data-testid public dashboard disabled template variables alert\",\n      UnsupportedDataSourcesWarningAlert: \"data-testid public dashboard unsupported data sources alert\",\n      NoUpsertPermissionsWarningAlert: \"data-testid public dashboard no upsert permissions alert\",\n      EnableTimeRangeSwitch: \"data-testid public dashboard on off switch for time range\",\n      EmailSharingConfiguration: {\n        Container: \"data-testid email sharing config container\",\n        ShareType: \"data-testid public dashboard share type\",\n        EmailSharingInput: \"data-testid public dashboard email sharing input\",\n        EmailSharingInviteButton: \"data-testid public dashboard email sharing invite button\",\n        EmailSharingList: \"data-testid public dashboard email sharing list\",\n        DeleteEmail: \"data-testid public dashboard delete email button\",\n        ReshareLink: \"data-testid public dashboard reshare link button\"\n      }\n    }\n  },\n  PublicDashboard: {\n    page: \"public-dashboard-page\",\n    NotAvailable: {\n      container: \"public-dashboard-not-available\",\n      title: \"public-dashboard-title\",\n      pausedDescription: \"public-dashboard-paused-description\"\n    }\n  },\n  RequestViewAccess: {\n    form: \"request-view-access-form\",\n    recipientInput: \"request-view-access-recipient-input\",\n    submitButton: \"request-view-access-submit-button\"\n  },\n  Explore: {\n    url: \"/explore\",\n    General: {\n      container: \"data-testid Explore\",\n      graph: \"Explore Graph\",\n      table: \"Explore Table\",\n      scrollView: \"data-testid explorer scroll view\"\n    }\n  },\n  SoloPanel: {\n    url: (page) => `/d-solo/${page}`\n  },\n  PluginsList: {\n    page: \"Plugins list page\",\n    list: \"Plugins list\",\n    listItem: \"Plugins list item\",\n    signatureErrorNotice: \"Unsigned plugins notice\"\n  },\n  PluginPage: {\n    page: \"Plugin page\",\n    signatureInfo: \"Plugin signature info\",\n    disabledInfo: \"Plugin disabled info\"\n  },\n  PlaylistForm: {\n    name: \"Playlist name\",\n    interval: \"Playlist interval\",\n    itemDelete: \"Delete playlist item\"\n  },\n  BrowseDashbards: {\n    table: {\n      row: (uid) => `data-testid ${uid} row`,\n      checkbox: (uid) => `data-testid ${uid} checkbox`\n    }\n  },\n  Search: {\n    url: \"/?search=openn\",\n    FolderView: {\n      url: \"/?search=open&layout=folders\"\n    }\n  },\n  PublicDashboards: {\n    ListItem: {\n      linkButton: \"public-dashboard-link-button\",\n      configButton: \"public-dashboard-configuration-button\",\n      trashcanButton: \"public-dashboard-remove-button\"\n    }\n  },\n  UserListPage: {\n    tabs: {\n      allUsers: \"data-testid all-users-tab\",\n      orgUsers: \"data-testid org-users-tab\",\n      publicDashboardsUsers: \"data-testid public-dashboards-users-tab\",\n      users: \"data-testid users-tab\"\n    },\n    org: {\n      url: \"/org/users\"\n    },\n    admin: {\n      url: \"/admin/users\"\n    },\n    publicDashboards: {\n      container: \"data-testid public-dashboards-users-list\"\n    },\n    UserListAdminPage: {\n      container: \"data-testid user-list-admin-page\"\n    },\n    UsersListPage: {\n      container: \"data-testid users-list-page\"\n    },\n    UsersListPublicDashboardsPage: {\n      container: \"data-testid users-list-public-dashboards-page\",\n      DashboardsListModal: {\n        listItem: (uid) => `data-testid dashboards-list-item-${uid}`\n      }\n    }\n  }\n};\n\nexport { Pages };\n//# sourceMappingURL=pages.js.map\n","import { css } from '@emotion/css';\nimport React, { useRef } from 'react';\nimport { useLatest } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { useTheme2, ReactMonacoEditor, monacoTypes } from '@grafana/ui';\n\nimport { Props } from './MonacoQueryFieldProps';\n\nconst options: monacoTypes.editor.IStandaloneEditorConstructionOptions = {\n  codeLens: false,\n  contextmenu: false,\n  // we need `fixedOverflowWidgets` because otherwise in grafana-dashboards\n  // the popup is clipped by the panel-visualizations.\n  fixedOverflowWidgets: true,\n  folding: false,\n  fontSize: 14,\n  lineDecorationsWidth: 8, // used as \"padding-left\"\n  lineNumbers: 'off',\n  minimap: { enabled: false },\n  overviewRulerBorder: false,\n  overviewRulerLanes: 0,\n  padding: {\n    // these numbers were picked so that visually this matches the previous version\n    // of the query-editor the best\n    top: 4,\n    bottom: 5,\n  },\n  renderLineHighlight: 'none',\n  scrollbar: {\n    vertical: 'hidden',\n    verticalScrollbarSize: 8, // used as \"padding-right\"\n    horizontal: 'hidden',\n    horizontalScrollbarSize: 0,\n  },\n  scrollBeyondLastLine: false,\n  suggestFontSize: 12,\n  wordWrap: 'on',\n};\n\n// this number was chosen by testing various values. it might be necessary\n// because of the width of the border, not sure.\n//it needs to do 2 things:\n// 1. when the editor is single-line, it should make the editor height be visually correct\n// 2. when the editor is multi-line, the editor should not be \"scrollable\" (meaning,\n//    you do a scroll-movement in the editor, and it will scroll the content by a couple pixels\n//    up & down. this we want to avoid)\nconst EDITOR_HEIGHT_OFFSET = 2;\n\nconst getStyles = (theme: GrafanaTheme2, placeholder: string) => {\n  return {\n    container: css`\n      border-radius: ${theme.shape.borderRadius()};\n      border: 1px solid ${theme.components.input.borderColor};\n    `,\n    placeholder: css`\n      ::after {\n        content: '${placeholder}';\n        font-family: ${theme.typography.fontFamilyMonospace};\n        opacity: 0.3;\n      }\n    `,\n  };\n};\n\nconst MonacoQueryField = (props: Props) => {\n  // we need only one instance of `overrideServices` during the lifetime of the react component\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { onBlur, onRunQuery, initialValue, placeholder, readOnly } = props;\n\n  const onRunQueryRef = useLatest(onRunQuery);\n  const onBlurRef = useLatest(onBlur);\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, placeholder);\n\n  return (\n    <div\n      aria-label={selectors.components.QueryField.container}\n      className={styles.container}\n      ref={containerRef}\n    >\n      <ReactMonacoEditor\n        options={{\n          ...options,\n          readOnly\n        }}\n        language=\"promql\"\n        value={initialValue}\n        onMount={(editor, monaco) => {\n          // we setup on-blur\n          editor.onDidBlurEditorWidget(() => {\n            onBlurRef.current(editor.getValue());\n          });\n\n          const updateElementHeight = () => {\n            const containerDiv = containerRef.current;\n            if (containerDiv !== null) {\n              const pixelHeight = editor.getContentHeight();\n              containerDiv.style.height = `${pixelHeight + EDITOR_HEIGHT_OFFSET}px`;\n              containerDiv.style.width = '100%';\n              const pixelWidth = containerDiv.clientWidth;\n              editor.layout({ width: pixelWidth, height: pixelHeight });\n            }\n          };\n\n          editor.onDidContentSizeChange(updateElementHeight);\n          updateElementHeight();\n\n          // handle: shift + enter\n          editor.addAction({\n            id: \"execute-shift-enter\",\n            label: \"Execute\",\n            keybindings: [monaco.KeyMod.Shift | monaco.KeyCode.Enter],\n            run: () => onRunQueryRef.current(editor.getValue() || \"\")\n          });\n\n          /* Something in this configuration of monaco doesn't bubble up [mod]+K, which the\n          command palette uses. Pass the event out of monaco manually\n          */\n          editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyK, function () {\n            global.dispatchEvent(new KeyboardEvent('keydown', { key: 'k', metaKey: true }));\n          });\n\n          if (placeholder) {\n            const placeholderDecorators = [\n              {\n                range: new monaco.Range(1, 1, 1, 1),\n                contents: [\n                  { value: \"**bold** _italics_ regular `code`\" }\n                ],\n                options: {\n                  className: styles.placeholder,\n                  isWholeLine: true,\n                },\n              },\n            ];\n\n            let decorators: string[] = [];\n\n            const checkDecorators: () => void = () => {\n              const model = editor.getModel();\n\n              if (!model) {\n                return;\n              }\n\n              const newDecorators = model.getValueLength() === 0 ? placeholderDecorators : [];\n              decorators = model.deltaDecorations(decorators, newDecorators);\n            };\n\n            checkDecorators();\n            editor.onDidChangeModelContent(checkDecorators);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\n// we will lazy-load this module using React.lazy,\n// and that only supports default-exports,\n// so we have to default-export this, even if\n// it is against the style-guidelines.\n\nexport default MonacoQueryField;\n","import React, { Suspense } from 'react';\n\nimport Field from './MonacoQueryField'\nimport { Props } from './MonacoQueryFieldProps';\n\nexport const MonacoQueryFieldLazy = (props: Props) => {\n  return (\n    <Suspense fallback={null}>\n      <Field {...props} />\n    </Suspense>\n  );\n};\n","import React, { useRef } from 'react';\n\nimport { MonacoQueryFieldLazy } from './MonacoQueryFieldLazy';\nimport { Props as MonacoProps } from './MonacoQueryFieldProps';\n\ntype Props = Omit<MonacoProps, 'onRunQuery' | 'onBlur'> & {\n  onChange: (query: string) => void;\n  onRunQuery: () => void;\n  runQueryOnBlur: boolean;\n};\n\nexport const MonacoQueryFieldWrapper = (props: Props) => {\n  const lastRunValueRef = useRef<string | null>(null);\n  const { runQueryOnBlur, onRunQuery, onChange, ...rest } = props;\n\n  const handleRunQuery = (value: string) => {\n    lastRunValueRef.current = value;\n    onChange(value);\n    onRunQuery();\n  };\n\n  const handleBlur = (value: string) => {\n    onChange(value);\n\n    if (runQueryOnBlur) {\n      // run handleRunQuery only if the current value is different from the last-time-executed value\n      if (value !== lastRunValueRef.current) {\n        handleRunQuery(value);\n      }\n    }\n  };\n\n  return <MonacoQueryFieldLazy onRunQuery={handleRunQuery} onBlur={handleBlur} {...rest} />;\n};\n","import React from 'react';\n\nimport { QueryEditorProps } from '@grafana/data';\n\nimport { VictoriaLogsDatasource } from \"../../datasource\";\nimport { Options, Query } from \"../../types\";\nimport { MonacoQueryFieldWrapper } from \"../monaco-query-field/MonacoQueryFieldWrapper\";\n\nexport interface QueryFieldProps extends QueryEditorProps<VictoriaLogsDatasource, Query, Options> {\n  ExtraFieldElement?: React.ReactNode;\n  'data-testid'?: string;\n}\n\nconst QueryField: React.FC<QueryFieldProps> = (props) => {\n  const {\n    ExtraFieldElement,\n    query,\n    // datasource,\n    history,\n    onRunQuery,\n    // range,\n    onChange,\n    'data-testid': dataTestId\n  } = props;\n  // const [labelsLoaded, setLabelsLoaded] = useState(false);\n\n  // Replace componentDidUpdate logic if needed\n\n  const onChangeQuery = (value: string) => {\n    if (onChange) {\n      const nextQuery = { ...query, expr: value };\n      onChange(nextQuery);\n\n      // if (override && onRunQuery) {\n      //   onRunQuery();\n      // }\n    }\n  };\n\n  return (\n    <>\n      <div\n        className=\"gf-form-inline gf-form-inline--xs-view-flex-column flex-grow-1\"\n        data-testid={dataTestId}\n      >\n        <div className=\"gf-form--grow flex-shrink-1 min-width-15\">\n          <MonacoQueryFieldWrapper\n            runQueryOnBlur={false}\n            history={history ?? []}\n            onChange={onChangeQuery}\n            onRunQuery={onRunQuery}\n            initialValue={query.expr ?? ''}\n            placeholder=\"Enter a LogsQL query…\"\n          />\n        </div>\n      </div>\n      {ExtraFieldElement}\n    </>\n  );\n};\n\nexport default QueryField;\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { VictoriaLogsQueryEditorProps } from \"../../types\";\n\nimport QueryField from \"./QueryField\";\n\ntype Props = VictoriaLogsQueryEditorProps & {\n  showExplain: boolean;\n};\n\nconst QueryCodeEditor = (props: Props) => {\n  const { query, datasource, range, onRunQuery, onChange, data, app, history } = props;\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.wrapper}>\n      <QueryField\n        datasource={datasource}\n        query={query}\n        range={range}\n        onRunQuery={onRunQuery}\n        onChange={onChange}\n        history={history}\n        data={data}\n        app={app}\n      />\n    </div>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      max-width: 100%;\n    `,\n    buttonGroup: css`\n      border: 1px solid ${theme.colors.border.medium};\n      border-top: none;\n      padding: ${theme.spacing(0.5, 0.5, 0.5, 0.5)};\n      margin-bottom: ${theme.spacing(0.5)};\n      display: flex;\n      flex-grow: 1;\n      justify-content: end;\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    hint: css`\n      color: ${theme.colors.text.disabled};\n      white-space: nowrap;\n      cursor: help;\n    `,\n  };\n};\n\nexport default QueryCodeEditor\n","import { DataFrame, DataSourceJsonData, KeyValue, QueryEditorProps } from '@grafana/data';\nimport { DataQuery } from '@grafana/schema';\n\nimport { VictoriaLogsDatasource } from \"./datasource\";\n\nexport interface Options extends DataSourceJsonData {\n  maxLines?: string;\n  // derivedFields?: DerivedFieldConfig[];\n  // alertmanager?: string;\n  // keepCookies?: string[];\n  // predefinedOperations?: string;\n}\n\nexport enum QueryDirection {\n  Backward = 'backward',\n  Forward = 'forward',\n}\n\nexport enum SupportingQueryType {\n  DataSample = 'dataSample',\n  LogsSample = 'logsSample',\n  LogsVolume = 'logsVolume',\n}\n\nexport enum QueryType {\n  Instant = 'instant',\n  Range = 'range',\n  Stream = 'stream',\n}\n\nexport interface QueryFromSchema extends DataQuery {\n  expr: string;\n  legendFormat?: string;\n  maxLines?: number;\n  step?: string;\n}\n\nexport interface Query extends QueryFromSchema {\n  direction?: QueryDirection;\n  supportingQueryType?: SupportingQueryType;\n  queryType?: QueryType;\n}\n\nexport type VictoriaLogsQueryEditorProps = QueryEditorProps<VictoriaLogsDatasource, Query, Options>;\n\nexport type DerivedFieldConfig = {\n  matcherRegex: string;\n  name: string;\n  url?: string;\n  urlDisplayLabel?: string;\n  datasourceUid?: string;\n  matcherType?: 'label' | 'regex';\n};\n\nexport interface QueryFilterOptions extends KeyValue<string> {\n}\n\nexport enum FilterActionType {\n  FILTER_FOR = 'FILTER_FOR',\n  FILTER_OUT = 'FILTER_OUT',\n}\n\nexport interface ToggleFilterAction {\n  type: FilterActionType;\n  options: QueryFilterOptions;\n  frame?: DataFrame;\n}\n\n","import { css } from \"@emotion/css\";\nimport { isEqual } from 'lodash';\nimport React, { useEffect, useState } from 'react';\n\nimport { CoreApp, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { Button, useStyles2 } from '@grafana/ui';\n\nimport { Query, VictoriaLogsQueryEditorProps } from \"../../types\";\n\nimport QueryCodeEditor from \"./QueryCodeEditor\";\nimport { getQueryWithDefaults } from \"./state\";\n\nconst QueryEditor = React.memo<VictoriaLogsQueryEditorProps>((props) => {\n  const styles = useStyles2(getStyles);\n\n  const { onChange, onRunQuery, data, app, queries } = props;\n  const [dataIsStale, setDataIsStale] = useState(false);\n\n  const query = getQueryWithDefaults(props.query);\n\n  useEffect(() => {\n    setDataIsStale(false);\n  }, [data]);\n\n  const onChangeInternal = (query: Query) => {\n    if (!isEqual(query, props.query)) {\n      setDataIsStale(true);\n    }\n    onChange(query);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className=\"flex-grow-1\">\n        <QueryCodeEditor {...props} query={query} onChange={onChangeInternal} showExplain={true}/>\n      </div>\n      <div>\n        {app !== CoreApp.Explore && app !== CoreApp.Correlations && (\n          <Button\n            variant={dataIsStale ? 'primary' : 'secondary'}\n            size=\"sm\"\n            onClick={onRunQuery}\n            icon={data?.state === LoadingState.Loading ? 'fa fa-spinner' : undefined}\n            disabled={data?.state === LoadingState.Loading}\n          >\n            {queries && queries.length > 1 ? `Run queries` : `Run query`}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n});\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      display: flex;\n      align-items: flex-start;\n      gap: ${theme.spacing(1)};\n    `\n  };\n};\n\nQueryEditor.displayName = 'QueryEditor';\nexport default QueryEditor\n","import { Query, QueryType } from \"../../types\";\n\nexport function getQueryWithDefaults(query: Query): Query {\n  let result = query;\n\n  if (query.expr == null) {\n    result = { ...result, expr: '' };\n  }\n\n  if (query.queryType == null) {\n    result = { ...result, queryType: QueryType.Range };\n  }\n\n  return result;\n}\n","import React from 'react';\n\nimport { VictoriaLogsQueryEditorProps } from \"../../types\";\n\nconst QueryEditorForAlerting = (props: VictoriaLogsQueryEditorProps) => {\n\n  return (\n    <div>QueryEditorForAlerting</div>\n  );\n}\n\nexport default QueryEditorForAlerting\n","import React, { memo } from 'react';\n\nimport { CoreApp } from '@grafana/data';\n\nimport { VictoriaLogsQueryEditorProps } from '../../types';\n\nimport QueryEditor from './QueryEditor';\nimport QueryEditorForAlerting from './QueryEditorForAlerting';\n\nconst QueryEditorByApp = (props: VictoriaLogsQueryEditorProps) => {\n  const { app } = props;\n\n  switch (app) {\n    case CoreApp.CloudAlerting:\n      return <QueryEditorForAlerting {...props} />;\n    default:\n      return <QueryEditor {...props} />;\n  }\n}\n\nexport default memo(QueryEditorByApp);\n","import React from 'react';\n\nimport { DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { InlineField, InlineSwitch } from '@grafana/ui';\n\nexport function AlertingSettings({\n  options,\n  onOptionsChange,\n}: Pick<DataSourcePluginOptionsEditorProps, 'options' | 'onOptionsChange'>) {\n  return (\n    <div>\n      <InlineField\n        labelWidth={29}\n        label=\"Manage alert rules in Alerting UI\"\n        disabled={options.readOnly}\n        tooltip=\"Manage alert rules for this data source. To manage other alerting resources, add an Alertmanager data source.\"\n      >\n        <InlineSwitch\n          value={options.jsonData.manageAlerts !== false}\n          onChange={(event) =>\n            onOptionsChange({\n              ...options,\n              jsonData: { ...options.jsonData, manageAlerts: event!.currentTarget.checked },\n            })\n          }\n        />\n      </InlineField>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst tips = [\n  {\n    title: \"Datasource\",\n    url: \"https://github.com/VictoriaMetrics/victorialogs-datasource\",\n  },\n  {\n    title: \"VictoriaLogs\",\n    url: \"https://docs.victoriametrics.com/victorialogs/\",\n  },\n  {\n    title: \"LogsQL\",\n    url: \"https://docs.victoriametrics.com/victorialogs/logsql/\",\n  },\n  {\n    title: \"VictoriaMetrics\",\n    url: \"https://victoriametrics.com/\",\n  }\n]\n\nexport const HelpfulLinks = () => (\n  <>\n    <h3 className=\"page-heading\">Helpful links</h3>\n    <div className=\"gf-form-group gf-form-inline markdown-html\">\n      {tips.map(t => (\n        <a key={t.url}  className=\"gf-form-label gf-form-label--dashlink\"\n           href={t.url}\n           target=\"_blank\"\n           rel=\"docs noreferrer\">\n          {t.title}\n        </a>\n      ))}\n    </div>\n  </>\n)\n","import React from 'react';\n\nimport { InlineField, Input } from '@grafana/ui';\n\ntype Props = {\n  maxLines: string;\n  onMaxLinedChange: (value: string) => void;\n};\n\nexport const QuerySettings = (props: Props) => {\n  const { maxLines, onMaxLinedChange } = props;\n  return (\n    <div>\n      <InlineField\n        label=\"Maximum lines\"\n        labelWidth={22}\n        tooltip={\n          <>\n            VictoriaLogs queries must contain a limit of the maximum number of lines returned (default: 1000). Increase this\n            limit to have a bigger result set for ad-hoc analysis. Decrease this limit if your browser becomes sluggish\n            when displaying the log results.\n          </>\n        }\n      >\n        <Input\n          type=\"number\"\n          value={maxLines}\n          onChange={(event: React.FormEvent<HTMLInputElement>) => onMaxLinedChange(event.currentTarget.value)}\n          width={16}\n          placeholder=\"1000\"\n          spellCheck={false}\n        />\n      </InlineField>\n\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { DataSourceHttpSettings } from \"@grafana/ui\";\n\nimport { Options } from '../types';\n\nimport { AlertingSettings } from './AlertingSettings';\nimport { HelpfulLinks } from \"./HelpfulLinks\";\nimport { QuerySettings } from './QuerySettings';\n\nexport type Props = DataSourcePluginOptionsEditorProps<Options>;\n\nconst makeJsonUpdater = <T extends any>(field: keyof Options) =>\n  (options: DataSourceSettings<Options>, value: T): DataSourceSettings<Options> => ({\n    ...options,\n    jsonData: {\n      ...options.jsonData,\n      [field]: value,\n    },\n  })\n\nconst setMaxLines = makeJsonUpdater('maxLines');\n\nconst ConfigEditor = (props: Props) => {\n  const { options, onOptionsChange } = props;\n\n  return (\n    <>\n      <HelpfulLinks/>\n      <DataSourceHttpSettings\n        defaultUrl=\"http://localhost:8428\"\n        dataSourceConfig={options}\n        onChange={onOptionsChange}\n        sigV4AuthToggleEnabled={config.sigV4AuthEnabled}\n      />\n      <AlertingSettings options={options} onOptionsChange={onOptionsChange}/>\n      <QuerySettings\n        maxLines={options.jsonData.maxLines || ''}\n        onMaxLinedChange={(value) => onOptionsChange(setMaxLines(options, value))}\n      />\n    </>\n  );\n};\n\nexport default ConfigEditor;\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n};\n","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialFinalizer = this.initialTeardown;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _finalizers = this._finalizers;\n            if (_finalizers) {\n                this._finalizers = null;\n                try {\n                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n                        var finalizer = _finalizers_1_1.value;\n                        try {\n                            execFinalizer(finalizer);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _finalizers = this._finalizers;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","export var COMPLETE_NOTIFICATION = (function () { return createNotification('C', undefined, undefined); })();\nexport function errorNotification(error) {\n    return createNotification('E', undefined, error);\n}\nexport function nextNotification(value) {\n    return createNotification('N', value, undefined);\n}\nexport function createNotification(kind, value, error) {\n    return {\n        kind: kind,\n        value: value,\n        error: error,\n    };\n}\n//# sourceMappingURL=NotificationFactories.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","import { __extends } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nvar ConsumerObserver = (function () {\n    function ConsumerObserver(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    ConsumerObserver.prototype.next = function (value) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    ConsumerObserver.prototype.error = function (err) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    };\n    ConsumerObserver.prototype.complete = function () {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    return ConsumerObserver;\n}());\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        _this.destination = new ConsumerObserver(partialObserver);\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { groupBy } from 'lodash';\n\nimport { FieldType, DataFrame, DataLink, Field } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\n\nimport { DerivedFieldConfig } from './types';\n\nexport function getDerivedFields(dataFrame: DataFrame, derivedFieldConfigs: DerivedFieldConfig[]): Field[] {\n  if (!derivedFieldConfigs.length) {\n    return [];\n  }\n  const derivedFieldsGrouped = groupBy(derivedFieldConfigs, 'name');\n\n  const newFields = Object.values(derivedFieldsGrouped).map(fieldFromDerivedFieldConfig);\n\n  // line-field is the first string-field\n  // NOTE: we should create some common log-frame-extra-string-field code somewhere\n  const lineField = dataFrame.fields.find((f) => f.type === FieldType.string);\n\n  if (lineField === undefined) {\n    // if this is happening, something went wrong, let's raise an error\n    throw new Error('invalid logs-dataframe, string-field missing');\n  }\n\n  const labelFields = dataFrame.fields.find((f) => f.type === FieldType.other && f.name === 'labels');\n\n  for (let i = 0; i < lineField.values.length; i++) {\n    for (const field of newFields) {\n      // `matcherRegex` can be either a RegExp that is used to extract the value from the log line, or it can be a label key to derive the field from the labels\n      if (derivedFieldsGrouped[field.name][0].matcherType === 'label' && labelFields) {\n        const label = labelFields.values[i];\n        if (label) {\n          // Find the key that matches both, the `matcherRegex` and the label key\n          const intersectingKey = Object.keys(label).find(\n            (key) => derivedFieldsGrouped[field.name][0].matcherRegex === key\n          );\n\n          if (intersectingKey) {\n            field.values.push(label[intersectingKey]);\n            continue;\n          }\n        }\n        field.values.push(null);\n      } else if (\n        derivedFieldsGrouped[field.name][0].matcherType === 'regex' ||\n        derivedFieldsGrouped[field.name][0].matcherType === undefined\n      ) {\n        // `matcherRegex` will actually be used as a RegExp here\n        const line = lineField.values[i];\n        const logMatch = line.match(derivedFieldsGrouped[field.name][0].matcherRegex);\n\n        if (logMatch && logMatch[1]) {\n          field.values.push(logMatch[1]);\n          continue;\n        }\n\n        field.values.push(null);\n      } else {\n        field.values.push(null);\n      }\n    }\n  }\n\n  return newFields;\n}\n\n\nfunction fieldFromDerivedFieldConfig(derivedFieldConfigs: DerivedFieldConfig[]): Field {\n  const dataSourceSrv = getDataSourceSrv();\n\n  const dataLinks = derivedFieldConfigs.reduce<DataLink[]>((acc, derivedFieldConfig) => {\n    // Having field.datasourceUid means it is an internal link.\n    if (derivedFieldConfig.datasourceUid) {\n      const dsSettings = dataSourceSrv.getInstanceSettings(derivedFieldConfig.datasourceUid);\n      const queryType = (type: string | undefined): string | undefined => {\n        switch (type) {\n          case 'tempo':\n            return 'traceql';\n          case 'grafana-x-ray-datasource':\n            return 'getTrace';\n          default:\n            return undefined;\n        }\n      };\n\n      acc.push({\n        // Will be filled out later\n        title: derivedFieldConfig.urlDisplayLabel || '',\n        url: '',\n        // This is hardcoded for Jaeger or Zipkin not way right now to specify datasource specific query object\n        internal: {\n          query: { query: derivedFieldConfig.url, queryType: queryType(dsSettings?.type) },\n          datasourceUid: derivedFieldConfig.datasourceUid,\n          datasourceName: dsSettings?.name ?? 'Data source not found',\n        },\n      });\n    } else if (derivedFieldConfig.url) {\n      acc.push({\n        // We do not know what title to give here so we count on presentation layer to create a title from metadata.\n        title: derivedFieldConfig.urlDisplayLabel || '',\n        // This is hardcoded for Jaeger or Zipkin not way right now to specify datasource specific query object\n        url: derivedFieldConfig.url,\n      });\n    }\n    return acc;\n  }, []);\n\n  return {\n    name: derivedFieldConfigs[0].name,\n    type: FieldType.string,\n    config: {\n      links: dataLinks,\n    },\n    // We are adding values later on\n    values: [],\n  };\n}\n","import { groupBy } from \"lodash\";\n\nimport { DataFrame, Field, FieldType } from \"@grafana/data\";\n\ntype NumberField = Field<number, number[]>;\ntype StringField = Field<string, string[]>;\n\nexport function makeTableFrames(instantMetricFrames: DataFrame[]): DataFrame[] {\n  // first we remove frames that have no refId\n  // (we will group them by refId, so we need it to be set)\n  const framesWithRefId = instantMetricFrames.filter((f) => f.refId !== undefined);\n\n  const framesByRefId = groupBy(framesWithRefId, (frame) => frame.refId);\n\n  return Object.entries(framesByRefId).map(([refId, frames]) => makeTableFrame(frames, refId));\n}\n\nfunction makeTableFrame(instantMetricFrames: DataFrame[], refId: string): DataFrame {\n  const tableTimeField: NumberField = { name: 'Time', config: {}, values: [], type: FieldType.time };\n  const tableValueField: NumberField = {\n    name: `Value #${refId}`,\n    config: {},\n    values: [],\n    type: FieldType.number,\n  };\n\n  // Sort metric labels, create columns for them and record their index\n  const allLabelNames = new Set(\n    instantMetricFrames.map((frame) => frame.fields.map((field) => Object.keys(field.labels ?? {})).flat()).flat()\n  );\n\n  const sortedLabelNames = Array.from(allLabelNames).sort();\n\n  const labelFields: StringField[] = sortedLabelNames.map((labelName) => ({\n    name: labelName,\n    config: { filterable: true },\n    values: [],\n    type: FieldType.string,\n  }));\n\n  instantMetricFrames.forEach((frame) => {\n    const timeField = frame.fields.find((field) => field.type === FieldType.time);\n    const valueField = frame.fields.find((field) => field.type === FieldType.number);\n    if (timeField == null || valueField == null) {\n      return;\n    }\n\n    const timeArray = timeField.values;\n    const valueArray = valueField.values;\n\n    for (let x of timeArray) {\n      tableTimeField.values.push(x);\n    }\n\n    for (let x of valueArray) {\n      tableValueField.values.push(x);\n    }\n\n    const labels = valueField.labels ?? {};\n\n    for (let f of labelFields) {\n      const text = labels[f.name] ?? '';\n      // we insert the labels as many times as we have values\n      for (let i = 0; i < valueArray.length; i++) {\n        f.values.push(text);\n      }\n    }\n  });\n\n  return {\n    fields: [tableTimeField, ...labelFields, tableValueField],\n    refId,\n    meta: { preferredVisualisationType: 'table' },\n    length: tableTimeField.values.length,\n  };\n}\n","/**\nThe default maximum length of a `TreeBuffer` node.\n*/\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/**\nEach [node type](#common.NodeType) or [individual tree](#common.Tree)\ncan have metadata associated with it in props. Instances of this\nclass represent prop names.\n*/\nclass NodeProp {\n    /**\n    Create a new node prop type.\n    */\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /**\n    This is meant to be used with\n    [`NodeSet.extend`](#common.NodeSet.extend) or\n    [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    prop values for each node type in the set. Takes a [match\n    object](#common.NodeType^match) or function that returns undefined\n    if the node type doesn't get this prop, and the prop's value if\n    it does.\n    */\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/**\nProp that is used to describe matching delimiters. For opening\ndelimiters, this holds an array of node names (written as a\nspace-separated string when declaring this prop in a grammar)\nfor the node types of closing delimiters that match it.\n*/\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nThe inverse of [`closedBy`](#common.NodeProp^closedBy). This is\nattached to closing delimiters, holding an array of node names\nof types of matching opening delimiters.\n*/\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nUsed to assign node types to groups (for example, all node\ntypes that represent an expression could be tagged with an\n`\"Expression\"` group).\n*/\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nAttached to nodes to indicate these should be\n[displayed](https://codemirror.net/docs/ref/#language.syntaxTree)\nin a bidirectional text isolate, so that direction-neutral\ncharacters on their sides don't incorrectly get associated with\nsurrounding text. You'll generally want to set this for nodes\nthat contain arbitrary text, like strings and comments, and for\nnodes that appear _inside_ arbitrary text, like HTML tags. When\nnot given a value, in a grammar declaration, defaults to\n`\"auto\"`.\n*/\nNodeProp.isolate = new NodeProp({ deserialize: value => {\n        if (value && value != \"rtl\" && value != \"ltr\" && value != \"auto\")\n            throw new RangeError(\"Invalid value for isolate: \" + value);\n        return value || \"auto\";\n    } });\n/**\nThe hash of the [context](#lr.ContextTracker.constructor)\nthat the node was parsed in, if any. Used to limit reuse of\ncontextual nodes.\n*/\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/**\nThe distance beyond the end of the node that the tokenizer\nlooked ahead for any of the tokens inside the node. (The LR\nparser only stores this when it is larger than 25, for\nefficiency reasons.)\n*/\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/**\nThis per-node prop is used to replace a given node, or part of a\nnode, with another tree. This is useful to include trees from\ndifferent languages in mixed-language parsers.\n*/\nNodeProp.mounted = new NodeProp({ perNode: true });\n/**\nA mounted tree, which can be [stored](#common.NodeProp^mounted) on\na tree node to indicate that parts of its content are\nrepresented by another tree.\n*/\nclass MountedTree {\n    constructor(\n    /**\n    The inner tree.\n    */\n    tree, \n    /**\n    If this is null, this tree replaces the entire node (it will\n    be included in the regular iteration instead of its host\n    node). If not, only the given ranges are considered to be\n    covered by this tree. This is used for trees that are mixed in\n    a way that isn't strictly hierarchical. Such mounted trees are\n    only entered by [`resolveInner`](#common.Tree.resolveInner)\n    and [`enter`](#common.SyntaxNode.enter).\n    */\n    overlay, \n    /**\n    The parser used to create this subtree.\n    */\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n    /**\n    @internal\n    */\n    static get(tree) {\n        return tree && tree.props && tree.props[NodeProp.mounted.id];\n    }\n}\nconst noProps = Object.create(null);\n/**\nEach node in a syntax tree has a node type associated with it.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the node type. Not necessarily unique, but if the\n    grammar was written properly, different node types with the\n    same name within a node set should play the same semantic\n    role.\n    */\n    name, \n    /**\n    @internal\n    */\n    props, \n    /**\n    The id of this node in its set. Corresponds to the term ids\n    used in the parser.\n    */\n    id, \n    /**\n    @internal\n    */\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    /**\n    Define a node type.\n    */\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* NodeFlag.Top */ : 0) | (spec.skipped ? 2 /* NodeFlag.Skipped */ : 0) |\n            (spec.error ? 4 /* NodeFlag.Error */ : 0) | (spec.name == null ? 8 /* NodeFlag.Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /**\n    Retrieves a node prop for this type. Will return `undefined` if\n    the prop isn't present on this node.\n    */\n    prop(prop) { return this.props[prop.id]; }\n    /**\n    True when this is the top node of a grammar.\n    */\n    get isTop() { return (this.flags & 1 /* NodeFlag.Top */) > 0; }\n    /**\n    True when this node is produced by a skip rule.\n    */\n    get isSkipped() { return (this.flags & 2 /* NodeFlag.Skipped */) > 0; }\n    /**\n    Indicates whether this is an error node.\n    */\n    get isError() { return (this.flags & 4 /* NodeFlag.Error */) > 0; }\n    /**\n    When true, this node type doesn't correspond to a user-declared\n    named node, for example because it is used to cache repetition.\n    */\n    get isAnonymous() { return (this.flags & 8 /* NodeFlag.Anonymous */) > 0; }\n    /**\n    Returns true when this node's name or one of its\n    [groups](#common.NodeProp^group) matches the given string.\n    */\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /**\n    Create a function from node types to arbitrary values by\n    specifying an object whose property names are node or\n    [group](#common.NodeProp^group) names. Often useful with\n    [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    names, separated by spaces, in a single property name to map\n    multiple node names to a single value.\n    */\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/**\nAn empty dummy node type to use when no actual type is available.\n*/\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* NodeFlag.Anonymous */);\n/**\nA node set holds a collection of node types. It is used to\ncompactly represent trees by storing their type ids, rather than a\nfull pointer to the type object, in a numeric array. Each parser\n[has](#lr.LRParser.nodeSet) a node set, and [tree\nbuffers](#common.TreeBuffer) can only store collections of nodes\nfrom the same set. A set can have a maximum of 2**16 (65536) node\ntypes in it, so that the ids fit into 16-bit typed array slots.\n*/\nclass NodeSet {\n    /**\n    Create a set with the given types. The `id` property of each\n    type should correspond to its position within the array.\n    */\n    constructor(\n    /**\n    The node types in this set, by id.\n    */\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /**\n    Create a copy of this set with some node properties added. The\n    arguments to this method can be created with\n    [`NodeProp.add`](#common.NodeProp.add).\n    */\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/**\nOptions that control iteration. Can be combined with the `|`\noperator to enable multiple ones.\n*/\nvar IterMode;\n(function (IterMode) {\n    /**\n    When enabled, iteration will only visit [`Tree`](#common.Tree)\n    objects, not nodes packed into\n    [`TreeBuffer`](#common.TreeBuffer)s.\n    */\n    IterMode[IterMode[\"ExcludeBuffers\"] = 1] = \"ExcludeBuffers\";\n    /**\n    Enable this to make iteration include anonymous nodes (such as\n    the nodes that wrap repeated grammar constructs into a balanced\n    tree).\n    */\n    IterMode[IterMode[\"IncludeAnonymous\"] = 2] = \"IncludeAnonymous\";\n    /**\n    By default, regular [mounted](#common.NodeProp^mounted) nodes\n    replace their base node in iteration. Enable this to ignore them\n    instead.\n    */\n    IterMode[IterMode[\"IgnoreMounts\"] = 4] = \"IgnoreMounts\";\n    /**\n    This option only applies in\n    [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n    library to not enter mounted overlays if one covers the given\n    position.\n    */\n    IterMode[IterMode[\"IgnoreOverlays\"] = 8] = \"IgnoreOverlays\";\n})(IterMode || (IterMode = {}));\n/**\nA piece of syntax tree. There are two ways to approach these\ntrees: the way they are actually stored in memory, and the\nconvenient way.\n\nSyntax trees are stored as a tree of `Tree` and `TreeBuffer`\nobjects. By packing detail information into `TreeBuffer` leaf\nnodes, the representation is made a lot more memory-efficient.\n\nHowever, when you want to actually work with tree nodes, this\nrepresentation is very awkward, so most client code will want to\nuse the [`TreeCursor`](#common.TreeCursor) or\n[`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\na view on some part of this data structure, and can be used to\nmove around to adjacent nodes.\n*/\nclass Tree {\n    /**\n    Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    */\n    constructor(\n    /**\n    The type of the top node.\n    */\n    type, \n    /**\n    This node's child nodes.\n    */\n    children, \n    /**\n    The positions (offsets relative to the start of this tree) of\n    the children.\n    */\n    positions, \n    /**\n    The total length of this tree\n    */\n    length, \n    /**\n    Per-node [node props](#common.NodeProp) to associate with this node.\n    */\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /**\n        @internal\n        */\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let mounted = MountedTree.get(this);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) positioned at the top of\n    the tree. Mode can be used to [control](#common.IterMode) which\n    nodes the cursor visits.\n    */\n    cursor(mode = 0) {\n        return new TreeCursor(this.topNode, mode);\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) pointing into this tree\n    at the given position and side (see\n    [`moveTo`](#common.TreeCursor.moveTo).\n    */\n    cursorAt(pos, side = 0, mode = 0) {\n        let scope = CachedNode.get(this) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        cursor.moveTo(pos, side);\n        CachedNode.set(this, cursor._tree);\n        return cursor;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) object for the top of the\n    tree.\n    */\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /**\n    Get the [syntax node](#common.SyntaxNode) at the given position.\n    If `side` is -1, this will move into nodes that end at the\n    position. If 1, it'll move into nodes that start at the\n    position. With 0, it'll only enter nodes that cover the position\n    from both sides.\n    \n    Note that this will not enter\n    [overlays](#common.MountedTree.overlay), and you often want\n    [`resolveInner`](#common.Tree.resolveInner) instead.\n    */\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /**\n    Like [`resolve`](#common.Tree.resolve), but will enter\n    [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    pointing into the innermost overlaid tree at the given position\n    (with parent links going through all parent structure, including\n    the host trees).\n    */\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /**\n    In some situations, it can be useful to iterate through all\n    nodes around a position, including those in overlays that don't\n    directly cover the position. This method gives you an iterator\n    that will produce all nodes, from small to big, around the given\n    position.\n    */\n    resolveStack(pos, side = 0) {\n        return stackIterator(this, pos, side);\n    }\n    /**\n    Iterate over the tree and its children, calling `enter` for any\n    node that touches the `from`/`to` region (if given) before\n    running over such a node's children, and `leave` (if given) when\n    leaving the node. When `enter` returns `false`, that node will\n    not have its children iterated over (or `leave` called).\n    */\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        let mode = spec.mode || 0, anon = (mode & IterMode.IncludeAnonymous) > 0;\n        for (let c = this.cursor(mode | IterMode.IncludeAnonymous);;) {\n            let entered = false;\n            if (c.from <= to && c.to >= from && (!anon && c.type.isAnonymous || enter(c) !== false)) {\n                if (c.firstChild())\n                    continue;\n                entered = true;\n            }\n            for (;;) {\n                if (entered && leave && (anon || !c.type.isAnonymous))\n                    leave(c);\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                entered = true;\n            }\n        }\n    }\n    /**\n    Get the value of the given [node prop](#common.NodeProp) for this\n    node. Works with both per-node and per-type props.\n    */\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /**\n    Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    format that can be passed to the [`Tree`](#common.Tree)\n    constructor.\n    */\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /**\n    Balance the direct children of this tree, producing a copy of\n    which may have children grouped into subtrees with type\n    [`NodeType.none`](#common.NodeType^none).\n    */\n    balance(config = {}) {\n        return this.children.length <= 8 /* Balance.BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /**\n    Build a tree from a postfix-ordered buffer of node information,\n    or a cursor over such a buffer.\n    */\n    static build(data) { return buildTree(data); }\n}\n/**\nThe empty tree\n*/\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/**\nTree buffers contain (type, start, end, endIndex) quads for each\nnode. In such a buffer, nodes are stored in prefix order (parents\nbefore children, with the endIndex of the parent indicating which\nchildren belong to it).\n*/\nclass TreeBuffer {\n    /**\n    Create a tree buffer.\n    */\n    constructor(\n    /**\n    The buffer's content.\n    */\n    buffer, \n    /**\n    The total length of the group of nodes in the buffer.\n    */\n    length, \n    /**\n    The node set used in this buffer.\n    */\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /**\n    @internal\n    */\n    get type() { return NodeType.none; }\n    /**\n    @internal\n    */\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /**\n    @internal\n    */\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /**\n    @internal\n    */\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /**\n    @internal\n    */\n    slice(startI, endI, from) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI), len = 0;\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            let to = copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n            len = Math.max(len, to);\n        }\n        return new TreeBuffer(copy, len, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Side.Before */: return from < pos;\n        case -1 /* Side.AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Side.Around */: return from < pos && to > pos;\n        case 1 /* Side.AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* Side.After */: return to > pos;\n        case 4 /* Side.DontCare */: return true;\n    }\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    let mode = overlays ? 0 : IterMode.IgnoreOverlays;\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, mode);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass BaseNode {\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    matchContext(context) {\n        return matchNodeContext(this, context);\n    }\n    enterUnfinishedNodesBefore(pos) {\n        let scan = this.childBefore(pos), node = this;\n        while (scan) {\n            let last = scan.lastChild;\n            if (!last || last.to != scan.to)\n                break;\n            if (last.type.isError && last.from == last.to) {\n                node = scan;\n                scan = last.prevSibling;\n            }\n            else {\n                scan = last;\n            }\n        }\n        return node;\n    }\n    get node() { return this; }\n    get next() { return this.parent; }\n}\nclass TreeNode extends BaseNode {\n    constructor(_tree, from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        super();\n        this._tree = _tree;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this._tree.type; }\n    get name() { return this._tree.type.name; }\n    get to() { return this.from + this._tree.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & IterMode.ExcludeBuffers)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & IterMode.IgnoreMounts) && (mounted = MountedTree.get(next)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent._tree.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        let mounted;\n        if (!(mode & IterMode.IgnoreOverlays) && (mounted = MountedTree.get(this._tree)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, mode);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get tree() { return this._tree; }\n    toTree() { return this._tree; }\n    /**\n    @internal\n    */\n    toString() { return this._tree.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor(), result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        for (let found = false; !found;) {\n            found = cur.type.is(before);\n            if (!cur.nextSibling())\n                return result;\n        }\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nfunction matchNodeContext(node, context, i = context.length - 1) {\n    for (let p = node.parent; i >= 0; p = p.parent) {\n        if (!p)\n            return false;\n        if (!p.type.isAnonymous) {\n            if (context[i] && context[i] != p.name)\n                return false;\n            i--;\n        }\n    }\n    return true;\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode extends BaseNode {\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    constructor(context, _parent, index) {\n        super();\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        if (mode & IterMode.ExcludeBuffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* Side.DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n    }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1];\n            children.push(buffer.slice(startI, endI, from));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.context.buffer.childString(this.index); }\n}\nfunction iterStack(heads) {\n    if (!heads.length)\n        return null;\n    let pick = 0, picked = heads[0];\n    for (let i = 1; i < heads.length; i++) {\n        let node = heads[i];\n        if (node.from > picked.from || node.to < picked.to) {\n            picked = node;\n            pick = i;\n        }\n    }\n    let next = picked instanceof TreeNode && picked.index < 0 ? null : picked.parent;\n    let newHeads = heads.slice();\n    if (next)\n        newHeads[pick] = next;\n    else\n        newHeads.splice(pick, 1);\n    return new StackIterator(newHeads, picked);\n}\nclass StackIterator {\n    constructor(heads, node) {\n        this.heads = heads;\n        this.node = node;\n    }\n    get next() { return iterStack(this.heads); }\n}\nfunction stackIterator(tree, pos, side) {\n    let inner = tree.resolveInner(pos, side), layers = null;\n    for (let scan = inner instanceof TreeNode ? inner : inner.context.parent; scan; scan = scan.parent) {\n        if (scan.index < 0) { // This is an overlay root\n            let parent = scan.parent;\n            (layers || (layers = [inner])).push(parent.resolve(pos, side));\n            scan = parent;\n        }\n        else {\n            let mount = MountedTree.get(scan.tree);\n            // Relevant overlay branching off\n            if (mount && mount.overlay && mount.overlay[0].from <= pos && mount.overlay[mount.overlay.length - 1].to >= pos) {\n                let root = new TreeNode(mount.tree, mount.overlay[0].from + scan.from, -1, scan);\n                (layers || (layers = [inner])).push(resolveNode(root, pos, side, false));\n            }\n        }\n    }\n    return layers ? iterStack(layers) : inner;\n}\n/**\nA tree cursor object focuses on a given node in a syntax tree, and\nallows you to move to adjacent nodes.\n*/\nclass TreeCursor {\n    /**\n    Shorthand for `.type.name`.\n    */\n    get name() { return this.type.name; }\n    /**\n    @internal\n    */\n    constructor(node, \n    /**\n    @internal\n    */\n    mode = 0) {\n        this.mode = mode;\n        /**\n        @internal\n        */\n        this.buffer = null;\n        this.stack = [];\n        /**\n        @internal\n        */\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    /**\n    @internal\n    */\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /**\n    @internal\n    */\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /**\n    Move the cursor to this node's first child. When this returns\n    false, the node has no child, and the cursor has not been moved.\n    */\n    firstChild() { return this.enterChild(1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to this node's last child.\n    */\n    lastChild() { return this.enterChild(-1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to the first child that ends after `pos`.\n    */\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* Side.After */); }\n    /**\n    Move to the last child that starts before `pos`.\n    */\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Side.Before */); }\n    /**\n    Move the cursor to the child around `pos`. If side is -1 the\n    child may end at that position, when 1 it may start there. This\n    will also enter [overlaid](#common.MountedTree.overlay)\n    [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    set to false.\n    */\n    enter(pos, side, mode = this.mode) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, mode));\n        return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);\n    }\n    /**\n    Move to the node's parent node, if this isn't the top node.\n    */\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /**\n    @internal\n    */\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode)) : false;\n    }\n    /**\n    Move to this node's next sibling, if any.\n    */\n    nextSibling() { return this.sibling(1); }\n    /**\n    Move to this node's previous sibling, if any.\n    */\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {\n                    let child = parent._tree.children[i];\n                    if ((this.mode & IterMode.IncludeAnonymous) ||\n                        child instanceof TreeBuffer ||\n                        !child.type.isAnonymous ||\n                        hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* Side.DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /**\n    Move to the next node in a\n    [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n    traversal, going from a node to its first child or, if the\n    current node is empty or `enter` is false, its next sibling or\n    the next sibling of the first parent node that has one.\n    */\n    next(enter = true) { return this.move(1, enter); }\n    /**\n    Move to the next node in a last-to-first pre-order traveral. A\n    node is followed by its last child or, if it has none, its\n    previous sibling or the previous sibling of the first parent\n    node that has one.\n    */\n    prev(enter = true) { return this.move(-1, enter); }\n    /**\n    Move the cursor to the innermost node that covers `pos`. If\n    `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    it will enter nodes that start at `pos`.\n    */\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    position.\n    */\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /**\n    Get the [tree](#common.Tree) that represents the current node, if\n    any. Will return null when the node is in a [tree\n    buffer](#common.TreeBuffer).\n    */\n    get tree() {\n        return this.buffer ? null : this._tree._tree;\n    }\n    /**\n    Iterate over the current node and all its descendants, calling\n    `enter` when entering a node and `leave`, if given, when leaving\n    one. When `enter` returns `false`, any children of that node are\n    skipped, and `leave` isn't called for it.\n    */\n    iterate(enter, leave) {\n        for (let depth = 0;;) {\n            let mustLeave = false;\n            if (this.type.isAnonymous || enter(this) !== false) {\n                if (this.firstChild()) {\n                    depth++;\n                    continue;\n                }\n                if (!this.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(this);\n                mustLeave = this.type.isAnonymous;\n                if (this.nextSibling())\n                    break;\n                if (!depth)\n                    return;\n                this.parent();\n                depth--;\n                mustLeave = true;\n            }\n        }\n    }\n    /**\n    Test whether the current node matches a given context—a sequence\n    of direct parent node names. Empty strings in the context array\n    are treated as wildcards.\n    */\n    matchContext(context) {\n        if (!this.buffer)\n            return matchNodeContext(this.node, context);\n        let { buffer } = this.buffer, { types } = buffer.set;\n        for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {\n            if (d < 0)\n                return matchNodeContext(this.node, context, i);\n            let type = types[buffer.buffer[this.stack[d]]];\n            if (!type.isAnonymous) {\n                if (context[i] && context[i] != type.name)\n                    return false;\n                i--;\n            }\n        }\n        return true;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat, depth) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* SpecialRecord.Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* SpecialRecord.ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* SpecialRecord.LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else if (depth > 2500 /* CutOff.Depth */) {\n                    takeFlatNode(start, endPos, localChildren, localPositions);\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat, depth + 1);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function takeFlatNode(parentStart, minPos, children, positions) {\n        let nodes = []; // Temporary, inverted array of leaf nodes found, with absolute positions\n        let nodeCount = 0, stopAt = -1;\n        while (cursor.pos > minPos) {\n            let { id, start, end, size } = cursor;\n            if (size > 4) { // Not a leaf\n                cursor.next();\n            }\n            else if (stopAt > -1 && start < stopAt) {\n                break;\n            }\n            else {\n                if (stopAt < 0)\n                    stopAt = end - maxBufferLength;\n                nodes.push(id, start, end);\n                nodeCount++;\n                cursor.next();\n            }\n        }\n        if (nodeCount) {\n            let buffer = new Uint16Array(nodeCount * 4);\n            let start = nodes[nodes.length - 2];\n            for (let i = nodes.length - 3, j = 0; i >= 0; i -= 3) {\n                buffer[j++] = nodes[i];\n                buffer[j++] = nodes[i + 1] - start;\n                buffer[j++] = nodes[i + 2] - start;\n                buffer[j++] = j;\n            }\n            children.push(new TreeBuffer(buffer, nodes[2] - start, nodeSet));\n            positions.push(start - parentStart);\n        }\n    }\n    function makeBalanced(type) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead = 0, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* SpecialRecord.ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* SpecialRecord.ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* SpecialRecord.LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1, 0);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* Balance.BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n/**\nProvides a way to associate values with pieces of trees. As long\nas that part of the tree is reused, the associated values can be\nretrieved from an updated tree.\n*/\nclass NodeWeakMap {\n    constructor() {\n        this.map = new WeakMap();\n    }\n    setBuffer(buffer, index, value) {\n        let inner = this.map.get(buffer);\n        if (!inner)\n            this.map.set(buffer, inner = new Map);\n        inner.set(index, value);\n    }\n    getBuffer(buffer, index) {\n        let inner = this.map.get(buffer);\n        return inner && inner.get(index);\n    }\n    /**\n    Set the value for this syntax node.\n    */\n    set(node, value) {\n        if (node instanceof BufferNode)\n            this.setBuffer(node.context.buffer, node.index, value);\n        else if (node instanceof TreeNode)\n            this.map.set(node.tree, value);\n    }\n    /**\n    Retrieve value for this syntax node, if it exists in the map.\n    */\n    get(node) {\n        return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)\n            : node instanceof TreeNode ? this.map.get(node.tree) : undefined;\n    }\n    /**\n    Set the value for the node that a cursor currently points to.\n    */\n    cursorSet(cursor, value) {\n        if (cursor.buffer)\n            this.setBuffer(cursor.buffer.buffer, cursor.index, value);\n        else\n            this.map.set(cursor.tree, value);\n    }\n    /**\n    Retrieve the value for the node that a cursor currently points\n    to.\n    */\n    cursorGet(cursor) {\n        return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);\n    }\n}\n\n/**\nTree fragments are used during [incremental\nparsing](#common.Parser.startParse) to track parts of old trees\nthat can be reused in a new parse. An array of fragments is used\nto track regions of an old tree whose nodes might be reused in new\nparses. Use the static\n[`applyChanges`](#common.TreeFragment^applyChanges) method to\nupdate fragments for document changes.\n*/\nclass TreeFragment {\n    /**\n    Construct a tree fragment. You'll usually want to use\n    [`addTree`](#common.TreeFragment^addTree) and\n    [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n    calling this directly.\n    */\n    constructor(\n    /**\n    The start of the unchanged range pointed to by this fragment.\n    This refers to an offset in the _updated_ document (as opposed\n    to the original tree).\n    */\n    from, \n    /**\n    The end of the unchanged range.\n    */\n    to, \n    /**\n    The tree that this fragment is based on.\n    */\n    tree, \n    /**\n    The offset between the fragment's tree and the document that\n    this fragment can be used against. Add this when going from\n    document to tree positions, subtract it to go from tree to\n    document positions.\n    */\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Open.Start */ : 0) | (openEnd ? 2 /* Open.End */ : 0);\n    }\n    /**\n    Whether the start of the fragment represents the start of a\n    parse, or the end of a change. (In the second case, it may not\n    be safe to reuse some nodes at the start, depending on the\n    parsing algorithm.)\n    */\n    get openStart() { return (this.open & 1 /* Open.Start */) > 0; }\n    /**\n    Whether the end of the fragment represents the end of a\n    full-document parse, or the start of a change.\n    */\n    get openEnd() { return (this.open & 2 /* Open.End */) > 0; }\n    /**\n    Create a set of fragments from a freshly parsed tree, or update\n    an existing set of fragments by replacing the ones that overlap\n    with a tree with content from the new tree. When `partial` is\n    true, the parse is treated as incomplete, and the resulting\n    fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    true.\n    */\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /**\n    Apply a set of edits to an array of fragments, removing or\n    splitting fragments as necessary to remove edited ranges, and\n    adjusting offsets for fragments that moved.\n    */\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/**\nA superclass that parsers should extend.\n*/\nclass Parser {\n    /**\n    Start a parse, returning a [partial parse](#common.PartialParse)\n    object. [`fragments`](#common.TreeFragment) can be passed in to\n    make the parse incremental.\n    \n    By default, the entire input is parsed. You can pass `ranges`,\n    which should be a sorted array of non-empty, non-overlapping\n    ranges, to parse only those ranges. The tree returned in that\n    case will start at `ranges[0].from`.\n    */\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /**\n    Run a full parse, returning the resulting tree.\n    */\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/**\nCreate a parse wrapper that, after the inner parse completes,\nscans its tree for mixed language regions with the `nest`\nfunction, runs the resulting [inner parses](#common.NestedParse),\nand then [mounts](#common.NodeProp^mounted) their results onto the\ntree.\n*/\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, from) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.from = from;\n    }\n}\nfunction checkRanges(ranges) {\n    if (!ranges.length || ranges.some(r => r.from >= r.to))\n        throw new RangeError(\"Invalid inner parse ranges given: \" + JSON.stringify(ranges));\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n        scan: for (let nest, isCovered;;) {\n            let enter = true, range;\n            if (this.stoppedAt != null && cursor.from >= this.stoppedAt) {\n                enter = false;\n            }\n            else if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to && !overlay.ranges.some(r => r.from < to && r.to > from))\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Cover.Full */;\n            }\n            else if (!cursor.type.isAnonymous && (nest = this.nest(cursor, this.input)) &&\n                (cursor.from < cursor.to || !nest.overlay)) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay ||\n                        (cursor.from < cursor.to ? [new Range(cursor.from, cursor.to)] : []));\n                    if (ranges.length)\n                        checkRanges(ranges);\n                    if (ranges.length || !nest.overlay)\n                        this.inner.push(new InnerParse(nest.parser, ranges.length ? nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges)\n                            : nest.parser.startParse(\"\"), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges.length ? ranges[0].from : cursor.from));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to)\n                    overlay.ranges.push(range);\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length) {\n                            checkRanges(ranges);\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges[0].from));\n                        }\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Cover.Full */ : 1 /* Cover.Partial */;\n    }\n    return 0 /* Cover.None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1];\n        nodes.push(buf.slice(startI, endI, from));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, stack = [];\n    let buffer = node.context.buffer;\n    // Scan up to the nearest tree\n    do {\n        stack.push(cursor.index);\n        cursor.parent();\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let base = cursor.tree, i = base.children.indexOf(buffer);\n    let buf = base.children[i], b = buf.buffer, newStack = [i];\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length, stackPos) {\n        let targetI = stack[stackPos];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, targetI, children, positions, innerOffset);\n        let from = b[targetI + 1], to = b[targetI + 2];\n        newStack.push(children.length);\n        let child = stackPos\n            ? split(targetI + 4, b[targetI + 3], buf.set.types[b[targetI]], from, to - from, stackPos - 1)\n            : node.toTree();\n        children.push(child);\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[targetI + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length, stack.length - 1);\n    // Move the cursor back to the target node\n    for (let index of newStack) {\n        let tree = cursor.tree.children[index], pos = cursor.tree.positions[index];\n        cursor.yield(new TreeNode(tree, pos + cursor.from, index, cursor._tree));\n    }\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.cursor(IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, IterMode.IgnoreOverlays | IterMode.ExcludeBuffers)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos || frag.openStart, frag.to <= end || frag.openEnd));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos || frag.openStart, frag.to <= endPos || frag.openEnd));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, IterMode, MountedTree, NodeProp, NodeSet, NodeType, NodeWeakMap, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n","import { Parser, NodeProp, NodeSet, NodeType, DefaultBufferLength, Tree, IterMode } from '@lezer/common';\n\n/**\nA parse stack. These are used internally by the parser to track\nparsing progress. They also provide some properties and methods\nthat external code such as a tokenizer can use to get information\nabout the parse state.\n*/\nclass Stack {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The parse that this stack is part of @internal\n    */\n    p, \n    /**\n    Holds state, input pos, buffer index triplets for all but the\n    top state @internal\n    */\n    stack, \n    /**\n    The current parse state @internal\n    */\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /**\n    @internal\n    */\n    reducePos, \n    /**\n    The input position up to which this stack has parsed.\n    */\n    pos, \n    /**\n    The dynamic score of the stack, including dynamic precedence\n    and error-recovery penalties\n    @internal\n    */\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /**\n    @internal\n    */\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /**\n    @internal\n    */\n    bufferBase, \n    /**\n    @internal\n    */\n    curContext, \n    /**\n    @internal\n    */\n    lookAhead = 0, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /**\n    @internal\n    */\n    parent) {\n        this.p = p;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.curContext = curContext;\n        this.lookAhead = lookAhead;\n        this.parent = parent;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /**\n    @internal\n    */\n    static start(p, state, pos = 0) {\n        let cx = p.parser.context;\n        return new Stack(p, [], state, pos, pos, 0, [], 0, cx ? new StackContext(cx, cx.start) : null, 0, null);\n    }\n    /**\n    The stack's current [context](#lr.ContextTracker) value, if\n    any. Its type will depend on the context tracker's type\n    parameter, or it will be `null` if there is no context\n    tracker.\n    */\n    get context() { return this.curContext ? this.curContext.context : null; }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /**\n    @internal\n    */\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /**\n    @internal\n    */\n    reduce(action) {\n        var _a;\n        let depth = action >> 19 /* Action.ReduceDepthShift */, type = action & 65535 /* Action.ValueMask */;\n        let { parser } = this.p;\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, 4, true);\n            this.reduceContext(type, this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* Action.StayFlag */ ? 6 : 0);\n        let start = base ? this.stack[base - 2] : this.p.ranges[0].from, size = this.reducePos - start;\n        // This is a kludge to try and detect overly deep left-associative\n        // trees, which will not increase the parse stack depth and thus\n        // won't be caught by the regular stack-depth limit check.\n        if (size >= 2000 /* Recover.MinBigReduction */ && !((_a = this.p.parser.nodeSet.types[type]) === null || _a === void 0 ? void 0 : _a.isAnonymous)) {\n            if (start == this.p.lastBigReductionStart) {\n                this.p.bigReductionCount++;\n                this.p.lastBigReductionSize = size;\n            }\n            else if (this.p.lastBigReductionSize < size) {\n                this.p.bigReductionCount = 1;\n                this.p.lastBigReductionStart = start;\n                this.p.lastBigReductionSize = size;\n            }\n        }\n        let bufferBase = base ? this.stack[base - 1] : 0, count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* Action.RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* StateFlag.Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* Action.StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n        this.reduceContext(type, start);\n    }\n    // Shift a value into the buffer\n    /**\n    @internal\n    */\n    storeNode(term, start, end, size = 4, isReduce = false) {\n        if (term == 0 /* Term.Err */ &&\n            (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {\n            // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Term.Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!isReduce || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Term.Err */)\n                while (index > 0 && this.buffer[index - 2] > end) {\n                    // Move this record forward\n                    this.buffer[index] = this.buffer[index - 4];\n                    this.buffer[index + 1] = this.buffer[index - 3];\n                    this.buffer[index + 2] = this.buffer[index - 2];\n                    this.buffer[index + 3] = this.buffer[index - 1];\n                    index -= 4;\n                    if (size > 4)\n                        size -= 4;\n                }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /**\n    @internal\n    */\n    shift(action, type, start, end) {\n        if (action & 131072 /* Action.GotoFlag */) {\n            this.pushState(action & 65535 /* Action.ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* Action.StayFlag */) == 0) { // Regular shift\n            let nextState = action, { parser } = this.p;\n            if (end > this.pos || type <= parser.maxNode) {\n                this.pos = end;\n                if (!parser.stateFlag(nextState, 1 /* StateFlag.Skipped */))\n                    this.reducePos = end;\n            }\n            this.pushState(nextState, start);\n            this.shiftContext(type, start);\n            if (type <= parser.maxNode)\n                this.buffer.push(type, start, end, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            this.pos = end;\n            this.shiftContext(type, start);\n            if (type <= this.p.parser.maxNode)\n                this.buffer.push(type, start, end, 4);\n        }\n    }\n    // Apply an action\n    /**\n    @internal\n    */\n    apply(action, next, nextStart, nextEnd) {\n        if (action & 65536 /* Action.ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextStart, nextEnd);\n    }\n    // Add a prebuilt (reused) node into the buffer.\n    /**\n    @internal\n    */\n    useNode(value, next) {\n        let index = this.p.reused.length - 1;\n        if (index < 0 || this.p.reused[index] != value) {\n            this.p.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size == -1 means this is a reused value */);\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reuse(this.curContext.context, value, this, this.p.stream.reset(this.pos - value.length)));\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /**\n    @internal\n    */\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, this.curContext, this.lookAhead, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /**\n    @internal\n    */\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.p.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd, 4);\n        this.storeNode(0 /* Term.Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 190 /* Recover.Delete */;\n    }\n    /**\n    Check if the given term would be able to be shifted (optionally\n    after some reductions) on this stack. This can be useful for\n    external tokenizers that want to make sure they only provide a\n    given token when it applies.\n    */\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.p.parser.stateSlot(sim.state, 4 /* ParseState.DefaultReduce */) || this.p.parser.hasAction(sim.state, term);\n            if (action == 0)\n                return false;\n            if ((action & 65536 /* Action.ReduceFlag */) == 0)\n                return true;\n            sim.reduce(action);\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /**\n    @internal\n    */\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* Recover.MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.p.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* Recover.MaxNext */ << 1 || this.stack.length >= 120 /* Recover.DampenInsertStackDepth */) {\n            let best = [];\n            for (let i = 0, s; i < nextStates.length; i += 2) {\n                if ((s = nextStates[i + 1]) != this.state && this.p.parser.hasAction(s, next))\n                    best.push(nextStates[i], s);\n            }\n            if (this.stack.length < 120 /* Recover.DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* Recover.MaxNext */ << 1 && i < nextStates.length; i += 2) {\n                    let s = nextStates[i + 1];\n                    if (!best.some((v, i) => (i & 1) && v == s))\n                        best.push(nextStates[i], s);\n                }\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* Recover.MaxNext */; i += 2) {\n            let s = nextStates[i + 1];\n            if (s == this.state)\n                continue;\n            let stack = this.split();\n            stack.pushState(s, this.pos);\n            stack.storeNode(0 /* Term.Err */, stack.pos, stack.pos, 4, true);\n            stack.shiftContext(nextStates[i], this.pos);\n            stack.reducePos = this.pos;\n            stack.score -= 200 /* Recover.Insert */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /**\n    @internal\n    */\n    forceReduce() {\n        let { parser } = this.p;\n        let reduce = parser.stateSlot(this.state, 5 /* ParseState.ForcedReduce */);\n        if ((reduce & 65536 /* Action.ReduceFlag */) == 0)\n            return false;\n        if (!parser.validAction(this.state, reduce)) {\n            let depth = reduce >> 19 /* Action.ReduceDepthShift */, term = reduce & 65535 /* Action.ValueMask */;\n            let target = this.stack.length - depth * 3;\n            if (target < 0 || parser.getGoto(this.stack[target], term, false) < 0) {\n                let backup = this.findForcedReduction();\n                if (backup == null)\n                    return false;\n                reduce = backup;\n            }\n            this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n            this.score -= 100 /* Recover.Reduce */;\n        }\n        this.reducePos = this.pos;\n        this.reduce(reduce);\n        return true;\n    }\n    /**\n    Try to scan through the automaton to find some kind of reduction\n    that can be applied. Used when the regular ForcedReduce field\n    isn't a valid action. @internal\n    */\n    findForcedReduction() {\n        let { parser } = this.p, seen = [];\n        let explore = (state, depth) => {\n            if (seen.includes(state))\n                return;\n            seen.push(state);\n            return parser.allActions(state, (action) => {\n                if (action & (262144 /* Action.StayFlag */ | 131072 /* Action.GotoFlag */)) ;\n                else if (action & 65536 /* Action.ReduceFlag */) {\n                    let rDepth = (action >> 19 /* Action.ReduceDepthShift */) - depth;\n                    if (rDepth > 1) {\n                        let term = action & 65535 /* Action.ValueMask */, target = this.stack.length - rDepth * 3;\n                        if (target >= 0 && parser.getGoto(this.stack[target], term, false) >= 0)\n                            return (rDepth << 19 /* Action.ReduceDepthShift */) | 65536 /* Action.ReduceFlag */ | term;\n                    }\n                }\n                else {\n                    let found = explore(action, depth + 1);\n                    if (found != null)\n                        return found;\n                }\n            });\n        };\n        return explore(this.state, 0);\n    }\n    /**\n    @internal\n    */\n    forceAll() {\n        while (!this.p.parser.stateFlag(this.state, 2 /* StateFlag.Accepting */)) {\n            if (!this.forceReduce()) {\n                this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n                break;\n            }\n        }\n        return this;\n    }\n    /**\n    Check whether this state has no further actions (assumed to be a direct descendant of the\n    top state, since any other states must be able to continue\n    somehow). @internal\n    */\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.p;\n        return parser.data[parser.stateSlot(this.state, 1 /* ParseState.Actions */)] == 65535 /* Seq.End */ &&\n            !parser.stateSlot(this.state, 4 /* ParseState.DefaultReduce */);\n    }\n    /**\n    Restart the stack (put it back in its start state). Only safe\n    when this.stack.length == 3 (state is directly below the top\n    state). @internal\n    */\n    restart() {\n        this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /**\n    @internal\n    */\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /**\n    Get the parser used by this stack.\n    */\n    get parser() { return this.p.parser; }\n    /**\n    Test whether a given dialect (by numeric ID, as exported from\n    the terms file) is enabled.\n    */\n    dialectEnabled(dialectID) { return this.p.parser.dialect.flags[dialectID]; }\n    shiftContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.shift(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    reduceContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reduce(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    /**\n    @internal\n    */\n    emitContext() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -3)\n            this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);\n    }\n    /**\n    @internal\n    */\n    emitLookAhead() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -4)\n            this.buffer.push(this.lookAhead, this.pos, this.pos, -4);\n    }\n    updateContext(context) {\n        if (context != this.curContext.context) {\n            let newCx = new StackContext(this.curContext.tracker, context);\n            if (newCx.hash != this.curContext.hash)\n                this.emitContext();\n            this.curContext = newCx;\n        }\n    }\n    /**\n    @internal\n    */\n    setLookAhead(lookAhead) {\n        if (lookAhead > this.lookAhead) {\n            this.emitLookAhead();\n            this.lookAhead = lookAhead;\n        }\n    }\n    /**\n    @internal\n    */\n    close() {\n        if (this.curContext && this.curContext.tracker.strict)\n            this.emitContext();\n        if (this.lookAhead > 0)\n            this.emitLookAhead();\n    }\n}\nclass StackContext {\n    constructor(tracker, context) {\n        this.tracker = tracker;\n        this.context = context;\n        this.hash = tracker.strict ? tracker.hash(context) : 0;\n    }\n}\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(start) {\n        this.start = start;\n        this.state = start.state;\n        this.stack = start.stack;\n        this.base = this.stack.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* Action.ValueMask */, depth = action >> 19 /* Action.ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.stack == this.start.stack)\n                this.stack = this.stack.slice();\n            this.stack.push(this.state, 0, 0);\n            this.base += 3;\n        }\n        else {\n            this.base -= (depth - 1) * 3;\n        }\n        let goto = this.start.p.parser.getGoto(this.stack[this.base - 3], term, true);\n        this.state = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack, pos = stack.bufferBase + stack.buffer.length) {\n        return new StackBufferCursor(stack, pos, pos - stack.bufferBase);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* Encode.BigValCode */) {\n                value = 65535 /* Encode.BigVal */;\n                break;\n            }\n            if (next >= 92 /* Encode.Gap2 */)\n                next--;\n            if (next >= 34 /* Encode.Gap1 */)\n                next--;\n            let digit = next - 32 /* Encode.Start */;\n            if (digit >= 46 /* Encode.Base */) {\n                digit -= 46 /* Encode.Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Encode.Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\nclass CachedToken {\n    constructor() {\n        this.start = -1;\n        this.value = -1;\n        this.end = -1;\n        this.extended = -1;\n        this.lookAhead = 0;\n        this.mask = 0;\n        this.context = 0;\n    }\n}\nconst nullToken = new CachedToken;\n/**\n[Tokenizers](#lr.ExternalTokenizer) interact with the input\nthrough this interface. It presents the input as a stream of\ncharacters, tracking lookahead and hiding the complexity of\n[ranges](#common.Parser.parse^ranges) from tokenizer code.\n*/\nclass InputStream {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    input, \n    /**\n    @internal\n    */\n    ranges) {\n        this.input = input;\n        this.ranges = ranges;\n        /**\n        @internal\n        */\n        this.chunk = \"\";\n        /**\n        @internal\n        */\n        this.chunkOff = 0;\n        /**\n        Backup chunk\n        */\n        this.chunk2 = \"\";\n        this.chunk2Pos = 0;\n        /**\n        The character code of the next code unit in the input, or -1\n        when the stream is at the end of the input.\n        */\n        this.next = -1;\n        /**\n        @internal\n        */\n        this.token = nullToken;\n        this.rangeIndex = 0;\n        this.pos = this.chunkPos = ranges[0].from;\n        this.range = ranges[0];\n        this.end = ranges[ranges.length - 1].to;\n        this.readNext();\n    }\n    /**\n    @internal\n    */\n    resolveOffset(offset, assoc) {\n        let range = this.range, index = this.rangeIndex;\n        let pos = this.pos + offset;\n        while (pos < range.from) {\n            if (!index)\n                return null;\n            let next = this.ranges[--index];\n            pos -= range.from - next.to;\n            range = next;\n        }\n        while (assoc < 0 ? pos > range.to : pos >= range.to) {\n            if (index == this.ranges.length - 1)\n                return null;\n            let next = this.ranges[++index];\n            pos += next.from - range.to;\n            range = next;\n        }\n        return pos;\n    }\n    /**\n    @internal\n    */\n    clipPos(pos) {\n        if (pos >= this.range.from && pos < this.range.to)\n            return pos;\n        for (let range of this.ranges)\n            if (range.to > pos)\n                return Math.max(pos, range.from);\n        return this.end;\n    }\n    /**\n    Look at a code unit near the stream position. `.peek(0)` equals\n    `.next`, `.peek(-1)` gives you the previous character, and so\n    on.\n    \n    Note that looking around during tokenizing creates dependencies\n    on potentially far-away content, which may reduce the\n    effectiveness incremental parsing—when looking forward—or even\n    cause invalid reparses when looking backward more than 25 code\n    units, since the library does not track lookbehind.\n    */\n    peek(offset) {\n        let idx = this.chunkOff + offset, pos, result;\n        if (idx >= 0 && idx < this.chunk.length) {\n            pos = this.pos + offset;\n            result = this.chunk.charCodeAt(idx);\n        }\n        else {\n            let resolved = this.resolveOffset(offset, 1);\n            if (resolved == null)\n                return -1;\n            pos = resolved;\n            if (pos >= this.chunk2Pos && pos < this.chunk2Pos + this.chunk2.length) {\n                result = this.chunk2.charCodeAt(pos - this.chunk2Pos);\n            }\n            else {\n                let i = this.rangeIndex, range = this.range;\n                while (range.to <= pos)\n                    range = this.ranges[++i];\n                this.chunk2 = this.input.chunk(this.chunk2Pos = pos);\n                if (pos + this.chunk2.length > range.to)\n                    this.chunk2 = this.chunk2.slice(0, range.to - pos);\n                result = this.chunk2.charCodeAt(0);\n            }\n        }\n        if (pos >= this.token.lookAhead)\n            this.token.lookAhead = pos + 1;\n        return result;\n    }\n    /**\n    Accept a token. By default, the end of the token is set to the\n    current stream position, but you can pass an offset (relative to\n    the stream position) to change that.\n    */\n    acceptToken(token, endOffset = 0) {\n        let end = endOffset ? this.resolveOffset(endOffset, -1) : this.pos;\n        if (end == null || end < this.token.start)\n            throw new RangeError(\"Token end out of bounds\");\n        this.token.value = token;\n        this.token.end = end;\n    }\n    /**\n    Accept a token ending at a specific given position.\n    */\n    acceptTokenTo(token, endPos) {\n        this.token.value = token;\n        this.token.end = endPos;\n    }\n    getChunk() {\n        if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {\n            let { chunk, chunkPos } = this;\n            this.chunk = this.chunk2;\n            this.chunkPos = this.chunk2Pos;\n            this.chunk2 = chunk;\n            this.chunk2Pos = chunkPos;\n            this.chunkOff = this.pos - this.chunkPos;\n        }\n        else {\n            this.chunk2 = this.chunk;\n            this.chunk2Pos = this.chunkPos;\n            let nextChunk = this.input.chunk(this.pos);\n            let end = this.pos + nextChunk.length;\n            this.chunk = end > this.range.to ? nextChunk.slice(0, this.range.to - this.pos) : nextChunk;\n            this.chunkPos = this.pos;\n            this.chunkOff = 0;\n        }\n    }\n    readNext() {\n        if (this.chunkOff >= this.chunk.length) {\n            this.getChunk();\n            if (this.chunkOff == this.chunk.length)\n                return this.next = -1;\n        }\n        return this.next = this.chunk.charCodeAt(this.chunkOff);\n    }\n    /**\n    Move the stream forward N (defaults to 1) code units. Returns\n    the new value of [`next`](#lr.InputStream.next).\n    */\n    advance(n = 1) {\n        this.chunkOff += n;\n        while (this.pos + n >= this.range.to) {\n            if (this.rangeIndex == this.ranges.length - 1)\n                return this.setDone();\n            n -= this.range.to - this.pos;\n            this.range = this.ranges[++this.rangeIndex];\n            this.pos = this.range.from;\n        }\n        this.pos += n;\n        if (this.pos >= this.token.lookAhead)\n            this.token.lookAhead = this.pos + 1;\n        return this.readNext();\n    }\n    setDone() {\n        this.pos = this.chunkPos = this.end;\n        this.range = this.ranges[this.rangeIndex = this.ranges.length - 1];\n        this.chunk = \"\";\n        return this.next = -1;\n    }\n    /**\n    @internal\n    */\n    reset(pos, token) {\n        if (token) {\n            this.token = token;\n            token.start = pos;\n            token.lookAhead = pos + 1;\n            token.value = token.extended = -1;\n        }\n        else {\n            this.token = nullToken;\n        }\n        if (this.pos != pos) {\n            this.pos = pos;\n            if (pos == this.end) {\n                this.setDone();\n                return this;\n            }\n            while (pos < this.range.from)\n                this.range = this.ranges[--this.rangeIndex];\n            while (pos >= this.range.to)\n                this.range = this.ranges[++this.rangeIndex];\n            if (pos >= this.chunkPos && pos < this.chunkPos + this.chunk.length) {\n                this.chunkOff = pos - this.chunkPos;\n            }\n            else {\n                this.chunk = \"\";\n                this.chunkOff = 0;\n            }\n            this.readNext();\n        }\n        return this;\n    }\n    /**\n    @internal\n    */\n    read(from, to) {\n        if (from >= this.chunkPos && to <= this.chunkPos + this.chunk.length)\n            return this.chunk.slice(from - this.chunkPos, to - this.chunkPos);\n        if (from >= this.chunk2Pos && to <= this.chunk2Pos + this.chunk2.length)\n            return this.chunk2.slice(from - this.chunk2Pos, to - this.chunk2Pos);\n        if (from >= this.range.from && to <= this.range.to)\n            return this.input.read(from, to);\n        let result = \"\";\n        for (let r of this.ranges) {\n            if (r.from >= to)\n                break;\n            if (r.to > from)\n                result += this.input.read(Math.max(r.from, from), Math.min(r.to, to));\n        }\n        return result;\n    }\n}\n/**\n@internal\n*/\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, stack) {\n        let { parser } = stack.p;\n        readToken(this.data, input, stack, this.id, parser.data, parser.tokenPrecTable);\n    }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/**\n@hide\n*/\nclass LocalTokenGroup {\n    constructor(data, precTable, elseToken) {\n        this.precTable = precTable;\n        this.elseToken = elseToken;\n        this.data = typeof data == \"string\" ? decodeArray(data) : data;\n    }\n    token(input, stack) {\n        let start = input.pos, skipped = 0;\n        for (;;) {\n            let atEof = input.next < 0, nextPos = input.resolveOffset(1, 1);\n            readToken(this.data, input, stack, 0, this.data, this.precTable);\n            if (input.token.value > -1)\n                break;\n            if (this.elseToken == null)\n                return;\n            if (!atEof)\n                skipped++;\n            if (nextPos == null)\n                break;\n            input.reset(nextPos, input.token);\n        }\n        if (skipped) {\n            input.reset(start, input.token);\n            input.acceptToken(this.elseToken, skipped);\n        }\n    }\n}\nLocalTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/**\n`@external tokens` declarations in the grammar should resolve to\nan instance of this class.\n*/\nclass ExternalTokenizer {\n    /**\n    Create a tokenizer. The first argument is the function that,\n    given an input stream, scans for the types of tokens it\n    recognizes at the stream's position, and calls\n    [`acceptToken`](#lr.InputStream.acceptToken) when it finds\n    one.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `input.token` when it matches a token.\nfunction readToken(data, input, stack, group, precTable, precOffset) {\n    let state = 0, groupMask = 1 << group, { dialect } = stack.p.parser;\n    scan: for (;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (input.token.value == -1 || input.token.value == term ||\n                        overrides(term, input.token.value, precTable, precOffset))) {\n                    input.acceptToken(term);\n                    break;\n                }\n            }\n        let next = input.next, low = 0, high = data[state + 2];\n        // Special case for EOF\n        if (input.next < 0 && high > low && data[accEnd + high * 3 - 3] == 65535 /* Seq.End */) {\n            state = data[accEnd + high * 3 - 1];\n            continue scan;\n        }\n        // Do a binary search on the state's edges\n        for (; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1] || 0x10000;\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                input.advance();\n                continue scan;\n            }\n        }\n        break;\n    }\n}\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* Seq.End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction overrides(token, prev, tableData, tableOffset) {\n    let iPrev = findOffset(tableData, tableOffset, prev);\n    return iPrev < 0 || findOffset(tableData, tableOffset, token) < iPrev;\n}\n\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && process.env && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.cursor(IterMode.IncludeAnonymous);\n    cursor.moveTo(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to < pos : cursor.from > pos) && !cursor.type.isError)\n                    return side < 0 ? Math.max(0, Math.min(cursor.to - 1, pos - 25 /* Safety.Margin */))\n                        : Math.min(tree.length, Math.max(cursor.from + 1, pos + 25 /* Safety.Margin */));\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nclass FragmentCursor {\n    constructor(fragments, nodeSet) {\n        this.fragments = fragments;\n        this.nodeSet = nodeSet;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            if (next instanceof Tree) {\n                if (start == pos) {\n                    if (start < this.safeFrom)\n                        return null;\n                    let end = start + next.length;\n                    if (end <= this.safeTo) {\n                        let lookAhead = next.prop(NodeProp.lookAhead);\n                        if (!lookAhead || end + lookAhead < this.fragment.to)\n                            return next;\n                    }\n                }\n                this.index[last]++;\n                if (start + next.length >= Math.max(this.safeFrom, pos)) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n            else {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n        }\n    }\n}\nclass TokenCache {\n    constructor(parser, stream) {\n        this.stream = stream;\n        this.tokens = [];\n        this.mainToken = null;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.p, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* ParseState.TokenizerMask */);\n        let context = stack.curContext ? stack.curContext.hash : 0;\n        let lookAhead = 0;\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask || token.context != context) {\n                this.updateCachedToken(token, tokenizer, stack);\n                token.mask = mask;\n                token.context = context;\n            }\n            if (token.lookAhead > token.end + 25 /* Safety.Margin */)\n                lookAhead = Math.max(token.lookAhead, lookAhead);\n            if (token.value != 0 /* Term.Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (lookAhead)\n            stack.setLookAhead(lookAhead);\n        if (!main && stack.pos == this.stream.end) {\n            main = new CachedToken;\n            main.value = stack.p.parser.eofTerm;\n            main.start = main.end = stack.pos;\n            actionIndex = this.addActions(stack, main.value, main.end, actionIndex);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    getMainToken(stack) {\n        if (this.mainToken)\n            return this.mainToken;\n        let main = new CachedToken, { pos, p } = stack;\n        main.start = pos;\n        main.end = Math.min(pos + 1, p.stream.end);\n        main.value = pos == p.stream.end ? p.parser.eofTerm : 0 /* Term.Err */;\n        return main;\n    }\n    updateCachedToken(token, tokenizer, stack) {\n        let start = this.stream.clipPos(stack.pos);\n        tokenizer.token(this.stream.reset(start, token), stack);\n        if (token.value > -1) {\n            let { parser } = stack.p;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](this.stream.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.p.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize.Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else {\n            token.value = 0 /* Term.Err */;\n            token.end = this.stream.clipPos(start + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.p, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */);; i += 3) {\n                if (data[i] == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Seq.Other */)\n                            index = this.putAction(pair(data, i + 2), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nclass Parse {\n    constructor(parser, input, fragments, ranges) {\n        this.parser = parser;\n        this.input = input;\n        this.ranges = ranges;\n        this.recovering = 0;\n        this.nextStackID = 0x2654; // ♔, ♕, ♖, ♗, ♘, ♙, ♠, ♡, ♢, ♣, ♤, ♥, ♦, ♧\n        this.minStackPos = 0;\n        this.reused = [];\n        this.stoppedAt = null;\n        this.lastBigReductionStart = -1;\n        this.lastBigReductionSize = 0;\n        this.bigReductionCount = 0;\n        this.stream = new InputStream(input, ranges);\n        this.tokens = new TokenCache(parser, this.stream);\n        this.topTerm = parser.top[1];\n        let { from } = ranges[0];\n        this.stacks = [Stack.start(this, parser.top[0], from)];\n        this.fragments = fragments.length && this.stream.end - from > parser.bufferLength * 4\n            ? new FragmentCursor(fragments, parser.nodeSet) : null;\n    }\n    get parsedPos() {\n        return this.minStackPos;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        let stacks = this.stacks, pos = this.minStackPos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        // If a large amount of reductions happened with the same start\n        // position, force the stack out of that production in order to\n        // avoid creating a tree too deep to recurse through.\n        // (This is an ugly kludge, because unfortunately there is no\n        // straightforward, cheap way to check for this happening, due to\n        // the history of reductions only being available in an\n        // expensive-to-access format in the stack buffers.)\n        if (this.bigReductionCount > 300 /* Rec.MaxLeftAssociativeReductionCount */ && stacks.length == 1) {\n            let [s] = stacks;\n            while (s.forceReduce() && s.stack.length && s.stack[s.stack.length - 2] >= this.lastBigReductionStart) { }\n            this.bigReductionCount = this.lastBigReductionSize = 0;\n        }\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i];\n            for (;;) {\n                this.tokens.mainToken = null;\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.getMainToken(stack);\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished) {\n                if (verbose)\n                    console.log(\"Finish with \" + this.stackID(finished));\n                return this.stackToTree(finished);\n            }\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : \"none\"));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Rec.Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.stoppedAt != null && stopped[0].pos > this.stoppedAt ? stopped[0]\n                : this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished) {\n                if (verbose)\n                    console.log(\"Force-finish \" + this.stackID(finished));\n                return this.stackToTree(finished.forceAll());\n            }\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* Rec.MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 500 /* Rec.MinBufferLengthPrune */ && other.buffer.length > 500 /* Rec.MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n            if (newStacks.length > 12 /* Rec.MaxStackCount */)\n                newStacks.splice(12 /* Rec.MaxStackCount */, newStacks.length - 12 /* Rec.MaxStackCount */);\n        }\n        this.minStackPos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.minStackPos)\n                this.minStackPos = newStacks[i].pos;\n        return null;\n    }\n    stopAt(pos) {\n        if (this.stoppedAt != null && this.stoppedAt < pos)\n            throw new RangeError(\"Can't move stoppedAt forward\");\n        this.stoppedAt = pos;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.stoppedAt != null && start > this.stoppedAt)\n            return stack.forceReduce() ? stack : null;\n        if (this.fragments) {\n            let strictCx = stack.curContext && stack.curContext.tracker.strict, cxHash = strictCx ? stack.curContext.hash : 0;\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length && (!strictCx || (cached.prop(NodeProp.contextHash) || 0) == cxHash)) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof Tree && cached.positions[0] == 0)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* ParseState.DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* Action.ValueMask */)})`);\n            return true;\n        }\n        if (stack.stack.length >= 8400 /* Rec.CutDepth */) {\n            while (stack.stack.length > 6000 /* Rec.CutTo */ && stack.forceReduce()) { }\n        }\n        let actions = this.tokens.getActions(stack);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            let main = this.tokens.mainToken;\n            localStack.apply(action, term, main ? main.start : localStack.pos, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* Action.ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* Action.ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done)\n                    continue;\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* Rec.ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done)\n                    break;\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.stream.end > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Term.Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        return finished;\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack) {\n        stack.close();\n        return Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.ranges[0].from,\n            length: stack.pos - this.ranges[0].from,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\nconst id = x => x;\n/**\nContext trackers are used to track stateful context (such as\nindentation in the Python grammar, or parent elements in the XML\ngrammar) needed by external tokenizers. You declare them in a\ngrammar file as `@context exportName from \"module\"`.\n\nContext values should be immutable, and can be updated (replaced)\non shift or reduce actions.\n\nThe export used in a `@context` declaration should be of this\ntype.\n*/\nclass ContextTracker {\n    /**\n    Define a context tracker.\n    */\n    constructor(spec) {\n        this.start = spec.start;\n        this.shift = spec.shift || id;\n        this.reduce = spec.reduce || id;\n        this.reuse = spec.reuse || id;\n        this.hash = spec.hash || (() => 0);\n        this.strict = spec.strict !== false;\n    }\n}\n/**\nHolds the parse tables for a given grammar, as generated by\n`lezer-generator`, and provides [methods](#common.Parser) to parse\ncontent with.\n*/\nclass LRParser extends Parser {\n    /**\n    @internal\n    */\n    constructor(spec) {\n        super();\n        /**\n        @internal\n        */\n        this.wrappers = [];\n        if (spec.version != 14 /* File.Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${14 /* File.Version */})`);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                if (typeof prop == \"string\")\n                    prop = NodeProp[prop];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.nodeSet = new NodeSet(nodeNames.map((name, i) => NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        if (spec.propSources)\n            this.nodeSet = this.nodeSet.extend(...spec.propSources);\n        this.strict = false;\n        this.bufferLength = DefaultBufferLength;\n        let tokenArray = decodeArray(spec.tokenData);\n        this.context = spec.context;\n        this.specializerSpecs = spec.specialized || [];\n        this.specialized = new Uint16Array(this.specializerSpecs.length);\n        for (let i = 0; i < this.specializerSpecs.length; i++)\n            this.specialized[i] = this.specializerSpecs[i].term;\n        this.specializers = this.specializerSpecs.map(getSpecializer);\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    createParse(input, fragments, ranges) {\n        let parse = new Parse(this, input, fragments, ranges);\n        for (let w of this.wrappers)\n            parse = w(parse, input, fragments, ranges);\n        return parse;\n    }\n    /**\n    Get a goto table entry @internal\n    */\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /**\n    Check if this state has an action for a given terminal @internal\n    */\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Seq.Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Term.Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /**\n    @internal\n    */\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* ParseState.Size */) + slot];\n    }\n    /**\n    @internal\n    */\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* ParseState.Flags */) & flag) > 0;\n    }\n    /**\n    @internal\n    */\n    validAction(state, action) {\n        return !!this.allActions(state, a => a == action ? true : null);\n    }\n    /**\n    @internal\n    */\n    allActions(state, action) {\n        let deflt = this.stateSlot(state, 4 /* ParseState.DefaultReduce */);\n        let result = deflt ? action(deflt) : undefined;\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */); result == null; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            result = action(pair(this.data, i + 1));\n        }\n        return result;\n    }\n    /**\n    Get the states that can follow this one through shift actions or\n    goto jumps. @internal\n    */\n    nextStates(state) {\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* Action.ReduceFlag */ >> 16)) == 0) {\n                let value = this.data[i + 1];\n                if (!result.some((v, i) => (i & 1) && v == value))\n                    result.push(this.data[i], value);\n            }\n        }\n        return result;\n    }\n    /**\n    Configure the parser. Returns a new parser instance that has the\n    given settings modified. Settings not provided in `config` are\n    kept from the original parser.\n    */\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(LRParser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.specializers) {\n            copy.specializers = this.specializers.slice();\n            copy.specializerSpecs = this.specializerSpecs.map((s, i) => {\n                let found = config.specializers.find(r => r.from == s.external);\n                if (!found)\n                    return s;\n                let spec = Object.assign(Object.assign({}, s), { external: found.to });\n                copy.specializers[i] = getSpecializer(spec);\n                return spec;\n            });\n        }\n        if (config.contextTracker)\n            copy.context = config.contextTracker;\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.wrap)\n            copy.wrappers = copy.wrappers.concat(config.wrap);\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /**\n    Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)\n    are registered for this parser.\n    */\n    hasWrappers() {\n        return this.wrappers.length > 0;\n    }\n    /**\n    Returns the name associated with a given term. This will only\n    work for all terms when the parser was generated with the\n    `--names` option. By default, only the names of tagged terms are\n    stored.\n    */\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /**\n    The eof term id is always allocated directly after the node\n    types. @internal\n    */\n    get eofTerm() { return this.maxNode + 1; }\n    /**\n    The type of top node produced by the parser.\n    */\n    get topNode() { return this.nodeSet.types[this.top[1]]; }\n    /**\n    @internal\n    */\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /**\n    @internal\n    */\n    parseDialect(dialect) {\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* Seq.End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return new Dialect(dialect, flags, disabled);\n    }\n    /**\n    Used by the output of the parser generator. Not available to\n    user code. @hide\n    */\n    static deserialize(spec) {\n        return new LRParser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        let stopped = stack.p.stoppedAt;\n        if ((stack.pos == stack.p.stream.end || stopped != null && stack.pos > stopped) &&\n            stack.p.parser.stateFlag(stack.state, 2 /* StateFlag.Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\nfunction getSpecializer(spec) {\n    if (spec.external) {\n        let mask = spec.extend ? 1 /* Specialize.Extend */ : 0 /* Specialize.Specialize */;\n        return (value, stack) => (spec.external(value, stack) << 1) | mask;\n    }\n    return spec.get;\n}\n\nexport { ContextTracker, ExternalTokenizer, InputStream, LRParser, LocalTokenGroup, Stack };\n","import { LRParser } from '@lezer/lr';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst Json$1 = 1,\n  Logfmt$1 = 2,\n  Unpack$1 = 3,\n  Pattern$1 = 4,\n  Regexp$1 = 5,\n  Unwrap$1 = 6,\n  Ip$1 = 7,\n  LabelFormat$1 = 8,\n  LineFormat$1 = 9,\n  LabelReplace$1 = 10,\n  Vector$1 = 11,\n  Offset$1 = 12,\n  Bool$1 = 13,\n  On$1 = 14,\n  Ignoring$1 = 15,\n  GroupLeft$1 = 16,\n  GroupRight$1 = 17,\n  Decolorize$1 = 18,\n  Drop$1 = 19,\n  Keep$1 = 20,\n  By$1 = 21,\n  Without$1 = 22,\n  And$1 = 23,\n  Or$1 = 24,\n  Unless$1 = 25,\n  Sum$1 = 26,\n  Avg$1 = 27,\n  Count$1 = 28,\n  Max$1 = 29,\n  Min$1 = 30,\n  Stddev$1 = 31,\n  Stdvar$1 = 32,\n  Bottomk$1 = 33,\n  Topk$1 = 34,\n  Sort$1 = 35,\n  Sort_Desc$1 = 36,\n  MetricExpr$1 = 93;\n\nconst keywordTokens = {\n  json: Json$1,\n  logfmt: Logfmt$1,\n  unpack: Unpack$1,\n  pattern: Pattern$1,\n  regexp: Regexp$1,\n  ip: Ip$1,\n  label_format: LabelFormat$1,\n  line_format: LineFormat$1,\n  label_replace: LabelReplace$1,\n  vector: Vector$1,\n  offset: Offset$1,\n  bool: Bool$1,\n  on: On$1,\n  ignoring: Ignoring$1,\n  group_left: GroupLeft$1,\n  group_right: GroupRight$1,\n  unwrap: Unwrap$1,\n  decolorize: Decolorize$1,\n  drop: Drop$1,\n  keep: Keep$1,\n};\n\nconst specializeIdentifier = (value) => {\n  return keywordTokens[value.toLowerCase()] || -1;\n};\n\nconst contextualKeywordTokens = {\n  by: By$1,\n  without: Without$1,\n  and: And$1,\n  or: Or$1,\n  unless: Unless$1,\n  sum: Sum$1,\n  avg: Avg$1,\n  count: Count$1,\n  max: Max$1,\n  min: Min$1,\n  stddev: Stddev$1,\n  stdvar: Stdvar$1,\n  bottomk: Bottomk$1,\n  topk: Topk$1,\n  sort: Sort$1,\n  sort_desc: Sort_Desc$1,\n};\n\nconst extendIdentifier = (value) => {\n  return contextualKeywordTokens[value.toLowerCase()] || -1;\n};\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Identifier = {__proto__:null,count_over_time:295, rate:297, rate_counter:299, bytes_over_time:301, bytes_rate:303, avg_over_time:305, sum_over_time:307, min_over_time:309, max_over_time:311, stddev_over_time:313, stdvar_over_time:315, quantile_over_time:317, first_over_time:319, last_over_time:321, absent_over_time:323, bytes:329, duration:331, duration_seconds:333};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"EnOYQPOOO#cQPO'#DVO$rQPO'#DUOYQPO'#DUOOQO'#E_'#E_O%PQPO'#E^OOQO'#Ez'#EzO%UQPO'#EyQ%aQPOOOOQO'#FY'#FYO&bQPO'#FYO&gQPO'#FZO&lQPO'#F[OOQO'#E]'#E]OOQO'#DT'#DTOOQO'#E`'#E`OOQO'#Ea'#EaOOQO'#Eb'#EbOOQO'#Ec'#EcOOQO'#Ed'#EdOOQO'#Ee'#EeOOQO'#Ef'#EfOOQO'#Eg'#EgOOQO'#Eh'#EhOOQO'#Ei'#EiOOQO'#Ej'#EjOOQO'#Ek'#EkOOQO'#El'#ElOOQO'#Em'#EmOOQO'#En'#EnO&qQPO'#DXOOQO'#DW'#DWO'PQPO,59qOOQO'#Dd'#DdO'XQPO'#DcO'aQPO'#DbO(zQPO'#DaO*eQPO'#DaOOQO'#D`'#D`O,gQPO,59pO-uQPO,59pO-|QPO,5:wO.TQPO,5:xO.`QPO'#EwO0kQPO,5;eO0rQPO,5;eO0wQPO,5;gO0wQPO,5;gO0wQPO,5;gO0wQPO,5;gO0wQPO,5;gO0wQPO,5;gOOQO,5;t,5;tOYQPO,5;uO3ZQPO,5;vO3`QPO,59sO#cQPO,59rOOQO1G/]1G/]OOQO'#Dg'#DgO3eQPO,59}O5OQPO,59}O5TQPO,59|OOQO,59|,59|O5]QPO'#DXO5zQPO'#DjO7kQPO'#DmO9XQPO'#DmOOQO'#Dm'#DmOOQO'#Dt'#DtOOQO'#Dr'#DrO+TQPO'#DrO9^QPO,59{O:wQPO'#EQO:|QPO'#EROOQO'#EU'#EUO;RQPO'#EVO;WQPO'#EYOOQO,59{,59{OOQO,59z,59zOOQO1G/[1G/[OOQO1G0c1G0cO;]QPO'#EoO.WQPO'#EoO;qQPO1G0dO;vQPO1G0dO;{QPO,5;cO<TQPO1G1PO=`QPO1G1PO=gQPO1G1PO=nQPO'#E}O?|QPO'#E|O@WQPO'#E|OYQPO1G1ROYQPO1G1ROYQPO1G1ROYQPO1G1ROYQPO1G1ROYQPO1G1RO@bQPO1G1aO@iQPO1G1bOOQO1G/_1G/_OOQO1G/^1G/^O5TQPO1G/iO@nQPO1G/iO@sQPO'#DhOB^QPO'#DhOOQO1G/h1G/hOBcQPO,59sOBiQPO,5:aOOQO'#Dk'#DkOBtQPO,5:UODeQPO'#DpOOQO'#Do'#DoOFRQPO,5:]OGlQPO,5:YOOQO,5:X,5:XOIVQPO,5:^O+TQPO,5:^O+TQPO,5:^OOQO,5:l,5:lOIeQPO'#ETOOQO'#ES'#ESOIjQPO,5:mOKTQPO'#EXOOQO'#EX'#EXOOQO'#EW'#EWOLtQPO,5:qON_QPO'#E[OOQO'#E['#E[OOQO'#EZ'#EZO!!OQPO,5:tO!#iQPO'#DaO;]QPO,5;ZO!#pQPO'#EpO!#uQPO,5;ZO!$`QPO,5;ZO!$jQPO,5;ZO!$qQPO,5;ZO!$vQPO7+&OO.WQPO7+&OOOQO'#Ex'#ExO!&WQPO1G0}OOQO1G0}1G0}O!&`QPO7+&kOYQPO7+&kO!'pQPO7+&kO!'wQPO7+&kO!(OQQO'#FOOOQO,5;i,5;iO!*^QPO,5;hO!*eQPO,5;hO!+vQPO7+&mO!+}QPO7+&mOOQO7+&m7+&mO!,[QPO7+&mO!,cQPO7+&mO!-hQPO7+&mO!-xQPO7+&{OOQO7+&|7+&|OOQO7+%T7+%TO!-}QPO7+%TO5TQPO,5:SO!.SQPO,5:SO!.XQPO1G/yOOQO1G/{1G/{OOQO1G0S1G0SOOQO1G0U1G0UOOQO,5:V,5:VO!.^QPO1G/wO!/wQPO,5:[O!/|QPO,5:ZOOQO1G/x1G/xO!0RQPO1G/xO!1lQPO,5:oO:|QPO,5:nO;RQPO,5:rO;WQPO,5:uO!1tQPO,5;^O!#uQPO1G0uO!2SQPO1G0uO!2[QPO,5;[O+TQPO,5;^O!2aQPO1G0uO!2hQPO'#EqO!2mQPO1G0uO!2aQPO1G0uO!2uQPO1G0uO!2|QPO1G0uO;lQPO1G0uOOQO1G0u1G0uOOQO<<Ij<<IjO!3XQPO<<IjO!3^QPO,5;dOOQO7+&i7+&iOOQO<<JV<<JVO!3cQPO<<JVOYQPO<<JVOOQO'#FQ'#FQO!3jQPO,5;jOOQO'#FP'#FPOOQO,5;j,5;jOOQO1G1S1G1SO!3rQPO1G1SO!5{QPO<<JgOOQO<<Ho<<HoOOQO1G/n1G/nO!6QQPO1G/nO!6VQPO7+%eOOQO1G/v1G/vOOQO1G/u1G/uOOQO1G0Z1G0ZOOQO1G0Y1G0YOOQO1G0^1G0^OOQO1G0a1G0aOOQO'#Es'#EsOOQO1G0x1G0xO!6[QPO1G0xOOQO'#Et'#EtOOQO'#Eu'#EuOOQO'#Ev'#EvOOQO7+&a7+&aOOQO1G0v1G0vO!6aQPO1G0xO!6uQPO7+&aOOQO,5;],5;]O!6}QPO7+&aO;lQPO7+&aO!7UQPO7+&aO!7aQPOAN?UOOQO1G1O1G1OO!8qQPOAN?qO!:RQPOAN?qO!:YQQO1G1UOOQO1G1U1G1UOOQO7+&n7+&nO!:bQPOAN@ROOQO7+%Y7+%YO!:gQPO<<IPO!:lQPO7+&dO!:qQPO<<I{O!:yQPO<<I{O!;RQPO'#ErO!;WQPO<<I{OOQOG24pG24pOOQOG25]G25]OOQO1G1V1G1VOOQO7+&p7+&pO!;`QPOG25mOOQOAN>kAN>kO!;eQPO<<JOOOQOAN?gAN?gO!;jQPOAN?gO!;rQPOLD+XOOQOAN?jAN?jOOQO,5:m,5:mO!;wQPO!$'NsO!;|QPO!)9D_O!<RQPO!.K9yOOQO!4//e!4//eO:|QPO'#ERO!<WQPO'#DaO!=OQPO,59pO!=YQPO'#DUOYQPO1G1ROYQPO1G1ROYQPO1G1ROYQPO1G1ROYQPO1G1ROYQPO1G1RO0wQPO,5;gO0wQPO,5;gO0wQPO,5;gO0wQPO,5;gO0wQPO,5;gO0wQPO,5;gO!>eQPO7+&mO!>lQPO7+&mO!>yQPO7+&mO!@RQPO7+&mO!@YQPO7+&mO!?QQPO'#E{\",\n  stateData: \"!@g~O$ROSuOS~OYZOZ[OjUOkUOlUOmUOnUOoUOpUOqUOrUOsUOtUO!sXO#vYO#wYO$SPO$VRO$X_O$Y`O$ZaO$[bO$]cO$^dO$_eO$`fO$agO$bhO$ciO$djO$ekO$flO$gmO~O|nO~O!PqO!RqO!XqO!YqOgxXhxXixX!jxX!lxX!mxX!nxX!oxX#vxX#wxX#xxX#yxX#zxX#{xX~O!]uO$PxX$WxX~P#hO$VzO~Oe{Of{O$V|O~Og!POh!OOi!PO!P!TO!j!TO!l!TO!m!TO!n!TO!o!TO#v!QO#w!QO#x!RO#y!RO#z!RO#{!SO~O!s!UO~O$V!VO~O$V!WO~O}!XO!P!XO!Q!XO!R!XO~O$T!YO$U!ZO~OV![O!O!]O~Oh!_Og!UXi!UX!P!UX!R!UX!X!UX!Y!UX!]!UX!j!UX!l!UX!m!UX!n!UX!o!UX#v!UX#w!UX#x!UX#y!UX#z!UX#{!UX$P!UX$W!UX$h!UX$T!UX~O!PqO!RqO!XqO!YqOg!TXh!TXi!TX!]!TX!j!TX!l!TX!m!TX!n!TX!o!TX#v!TX#w!TX#x!TX#y!TX#z!TX#{!TX$P!TX$W!TX$h!TX$T!TX~OP!cOQ!bOR!eOS!dOT!dOW!kOX!jOb!lOc!mOd!nO|!aO$V!hO~O!PqO!RqO!XqO!YqOgxahxaixa!jxa!lxa!mxa!nxa!oxa#vxa#wxa#xxa#yxa#zxa#{xa~O!]uO$Pxa$Wxa~P+]OgwXhwXiwX!PwX!jwX!lwX!mwX!nwX!owX#vwX#wwX#xwX#ywX#zwX#{wX~O$W!qO~P,tO$W!rO~P,tO!s!vO$SPO$V!tO~O$V!wO~OYZOZ[OjUOkUOlUOmUOnUOoUOpUOqUOrUOsUOtUO#vYO#wYO$SPO$VRO$X_O$Y`O$ZaO$[bO$]cO$^dO$_eO$`fO$agO$bhO$ciO$djO$ekO$flO$gmO~O!s!yO~P.eO$V!zO~O]!}O^!{O_!{OY#pPZ#pPj#pPk#pPl#pPm#pPn#pPo#pPp#pPq#pPr#pPs#pPt#pP!s#pP#v#pP#w#pP$S#pP$V#pP$X#pP$Y#pP$Z#pP$[#pP$]#pP$^#pP$_#pP$`#pP$a#pP$b#pP$c#pP$d#pP$e#pP$f#pP$g#pP~O!s#VO~O!O#WO~Oh#YOg!Vai!Va!P!Va!R!Va!X!Va!Y!Va!]!Va!j!Va!l!Va!m!Va!n!Va!o!Va#v!Va#w!Va#x!Va#y!Va#z!Va#{!Va$P!Va$W!Va$h!Va$T!Va~O$V#ZO~OV![O!O#[O~O}#_O!P#_O!Q!XO!R!XO!j#`O!l#`O!m#`O!n#`O!o#`O~O|#cO!`#aOg!^Xh!^Xi!^X!P!^X!R!^X!X!^X!Y!^X!]!^X!j!^X!l!^X!m!^X!n!^X!o!^X#v!^X#w!^X#x!^X#y!^X#z!^X#{!^X$P!^X$W!^X$h!^X$T!^X~O|#cOg!aXh!aXi!aX!P!aX!R!aX!X!aX!Y!aX!]!aX!j!aX!l!aX!m!aX!n!aX!o!aX#v!aX#w!aX#x!aX#y!aX#z!aX#{!aX$P!aX$W!aX$h!aX$T!aX~O!O#gO~Og#iOh#jO$T#iOi!Ta!P!Ta!R!Ta!X!Ta!Y!Ta!]!Ta!j!Ta!l!Ta!m!Ta!n!Ta!o!Ta#v!Ta#w!Ta#x!Ta#y!Ta#z!Ta#{!Ta$P!Ta$W!Ta$h!Ta~O!O#kO~O|#lO~O|#oO~O|#sO~O!PqO!RqO!XqO!YqO!]#wO$h#yO~O$W$OO~O$T$PO~O|$QO$W$SO~O$W$TO~P,tOg#|Xh#|Xi#|X!P#|X!j#|X!l#|X!m#|X!n#|X!o#|X#v#|X#w#|X#x#|X#y#|X#z#|X#{#|X$W#|X~O$T$UO~P<[O!s$WO~P.eO$V$XO~OY#pXZ#pXj#pXk#pXl#pXm#pXn#pXo#pXp#pXq#pXr#pXs#pXt#pX!s#pX#v#pX#w#pX$S#pX$V#pX$X#pX$Y#pX$Z#pX$[#pX$]#pX$^#pX$_#pX$`#pX$a#pX$b#pX$c#pX$d#pX$e#pX$f#pX$g#pX~O`$ZOa$ZO~P=sO^!{O_!{O~P=sO$T$cO~P,tO$W$dO~O!O$fO~Oh$gOg![Xi![X!P![X!R![X!X![X!Y![X!]![X!j![X!l![X!m![X!n![X!o![X#v![X#w![X#x![X#y![X#z![X#{![X$P![X$W![X$h![X$T![X~O$V$hO~OV$iO!O#WO!k$jO!q$kO!s$lO~O|#cO!`$mOg!^ah!^ai!^a!P!^a!R!^a!X!^a!Y!^a!]!^a!j!^a!l!^a!m!^a!n!^a!o!^a#v!^a#w!^a#x!^a#y!^a#z!^a#{!^a$P!^a$W!^a$h!^a$T!^a~O}$oOg!dXh!dXi!dX!P!dX!R!dX!X!dX!Y!dX!]!dX!j!dX!l!dX!m!dX!n!dX!o!dX#v!dX#w!dX#x!dX#y!dX#z!dX#{!dX$P!dX$T!dX$W!dX$h!dX~O$T$pOg!eah!eai!ea!P!ea!R!ea!X!ea!Y!ea!]!ea!j!ea!l!ea!m!ea!n!ea!o!ea#v!ea#w!ea#x!ea#y!ea#z!ea#{!ea$P!ea$W!ea$h!ea~O$T$pOg!bah!bai!ba!P!ba!R!ba!X!ba!Y!ba!]!ba!j!ba!l!ba!m!ba!n!ba!o!ba#v!ba#w!ba#x!ba#y!ba#z!ba#{!ba$P!ba$W!ba$h!ba~Og#iOh#jO$T#iO$W$qO~O}$sO~O$T$tOg!uah!uai!ua!P!ua!R!ua!X!ua!Y!ua!]!ua!j!ua!l!ua!m!ua!n!ua!o!ua#v!ua#w!ua#x!ua#y!ua#z!ua#{!ua$P!ua$W!ua$h!ua~O}!XO!P!XO!Q!XO!R!XOg!{Xh!{Xi!{X!X!{X!Y!{X!]!{X!j!{X!l!{X!m!{X!n!{X!o!{X#v!{X#w!{X#x!{X#y!{X#z!{X#{!{X$P!{X$T!{X$W!{X$h!{X~O$T$uOg!yah!yai!ya!P!ya!R!ya!X!ya!Y!ya!]!ya!j!ya!l!ya!m!ya!n!ya!o!ya#v!ya#w!ya#x!ya#y!ya#z!ya#{!ya$P!ya$W!ya$h!ya~O}!XO!P!XO!Q!XO!R!XOg#OXh#OXi#OX!X#OX!Y#OX!]#OX!j#OX!l#OX!m#OX!n#OX!o#OX#v#OX#w#OX#x#OX#y#OX#z#OX#{#OX$P#OX$T#OX$W#OX$h#OX~O$T$vOg!|ah!|ai!|a!P!|a!R!|a!X!|a!Y!|a!]!|a!j!|a!l!|a!m!|a!n!|a!o!|a#v!|a#w!|a#x!|a#y!|a#z!|a#{!|a$P!|a$W!|a$h!|a~OU$wO~P*eO!k$zO~O!]${O$h#yO~O!PqO!RqO!XqO!YqO!]#wO~O[$}O$W#ca~P!#}O$W%SO~P;]O$W%TO~Oe{Of{Og#Qqh#Qqi#Qq!P#Qq!j#Qq!l#Qq!m#Qq!n#Qq!o#Qq#v#Qq#w#Qq#x#Qq#y#Qq#z#Qq#{#Qq$P#Qq$W#Qq$T#Qq~O$T%WO$W%XO~Oe{Of{Og#mqh#mqi#mq!P#mq!j#mq!l#mq!m#mq!n#mq!o#mq#v#mq#w#mq#x#mq#y#mq#z#mq#{#mq$P#mq$W#mq$T#mq~O$W%YO~P,tO$T%[O~P<[O#u%]O$W%`O~OY#paZ#paj#pak#pal#pam#pan#pao#pap#paq#par#pas#pat#pa!s#pa#v#pa#w#pa$S#pa$X#pa$Y#pa$Z#pa$[#pa$]#pa$^#pa$_#pa$`#pa$a#pa$b#pa$c#pa$d#pa$e#pa$f#pa$g#pa~O$V$XO~P!(WO`%bOa%bO$V#pa~P!(WOg!POi!PO!P!TO!j!TO!l!TO!m!TO!n!TO!o!TO#v!QO#w!QO#x#oq#y#oq#z#oq#{#oq$P#oq$W#oq~Oh#oq~P!*rOg#oqh#oqi#oq~P!*xOh!OO~P!*rO$P#oq$W#oq~P%aOg#oqh#oqi#oq!P#oq!j#oq!l#oq!m#oq!n#oq!o#oq#x#oq#y#oq#z#oq#{#oq~O#v!QO#w!QO$P#oq$W#oq~P!,mO!O%cO~O$W%dO~O!O%fO~O$V%gO~O$T$pOg!eih!eii!ei!P!ei!R!ei!X!ei!Y!ei!]!ei!j!ei!l!ei!m!ei!n!ei!o!ei#v!ei#w!ei#x!ei#y!ei#z!ei#{!ei$P!ei$W!ei$h!ei~O!O%hO~O|#cO~Og#iO$T#iOh!fii!fi!P!fi!R!fi!X!fi!Y!fi!]!fi!j!fi!l!fi!m!fi!n!fi!o!fi#v!fi#w!fi#x!fi#y!fi#z!fi#{!fi$P!fi$W!fi$h!fi~O|%jO!O%jO~O|%oO$j%qO$k%rO$l%sO~O[$}O$W#ci~O$i%uO~O$W#ci~P!#}O!k%xO~O!]${O$W#ci~O$W%zO~P;]O!]${O$W%zO$h#yO~O$W%|O~O|%}O~O$W&OO~P,tO$T&QO$W&RO~O$V$XOY#piZ#pij#pik#pil#pim#pin#pio#pip#piq#pir#pis#pit#pi!s#pi#v#pi#w#pi$S#pi$X#pi$Y#pi$Z#pi$[#pi$]#pi$^#pi$_#pi$`#pi$a#pi$b#pi$c#pi$d#pi$e#pi$f#pi$g#pi~O$T&TO~O$W&UO~O!O&VO~O$V&WO~Og#iOh#jO$T#iO!]#fi$h#fi$W#fi~O!]${O$W#cq~O$W#cq~P!#}O[$}O!]&ZO$W#cq~Oe{Of{Og#Q!Rh#Q!Ri#Q!R!P#Q!R!j#Q!R!l#Q!R!m#Q!R!n#Q!R!o#Q!R#v#Q!R#w#Q!R#x#Q!R#y#Q!R#z#Q!R#{#Q!R$P#Q!R$W#Q!R$T#Q!R~Oe{Of{Og#m!Rh#m!Ri#m!R!P#m!R!j#m!R!l#m!R!m#m!R!n#m!R!o#m!R#v#m!R#w#m!R#x#m!R#y#m!R#z#m!R#{#m!R$P#m!R$W#m!R$T#m!R~O$W&^O~P,tO#u%]O$W&`O~O!O&aO~O$W&bO~O|&cO~O!]${O$W#cy~O[$}O$W#cy~OU$wO~O!]&ZO$W#cy~O$T&fO~O$W&gO~O!]${O$W#c!R~O!O&iO~O$T&jO~O!O&kO~O$W&lO~OP!cOQ!bOR!eOS!dOT!dOW&mOX!jOb!lOc!mOd!nO|!aO$V!hO~O!]&nO$Txa~P+]O!]&nO$TxX~P#hOg&xOi&xO!P&|O!j&|O!l&|O!m&|O!n&|O!o&|O#v&yO#w&yO#x#oq#y#oq#z#oq#{#oq$T#oq~Oh#oq~P!=dOg#oqh#oqi#oq~P!=jOh&wO~P!=dOg&xOh&wOi&xO!P&|O!j&|O!l&|O!m&|O!n&|O!o&|O#v&yO#w&yO#x&zO#y&zO#z&zO#{&{O~O$T#oq~P!?QO#v&yO#w&yO$T#oq~P!,mO\",\n  goto: \"0v$PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP$Q%P%h&W&ZPPPPPP&r'U'f't(VPP(f(nP(w(|P(w(w)P)Y(w)b)s)s)|PPPPPP)|P)sP(w(w*V*](w(w*d*g(w*m*p*v+i,O,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,z-T-h-t.^.a.a.a.d.s+i.v+i/]0R0d0m0pPPPPPPP+i+i+i[WOR|!z$U%[Q$]#OQ$^#PS$_#Q&sQ$`#RQ$a#SQ$b#TQ&}&qQ'O&rQ'P&tQ'Q&uQ'R&vR'S!Vt^O|!V!z#O#P#Q#R#S#T$U%[&q&r&s&t&u&vRxRjQOR|!V!z#O#P#Q#R#S#T$U%[S!sz$PQ#|!t]&p&q&r&s&t&u&vRpPQoP^!gu!h#i#j#w${&nQ#X!YS#p!m$uT#t!n$vQwQQ#x!sQ$|#{Q%Q#|Q%y%PR&o&p[vQ!s#{#|%P&p]!pw#x$|%Q%y&oitQw!s#x#{#|$|%P%Q%y&o&phsQw!s#x#{#|$|%P%Q%y&o&pR!`tkrQtw!s#x#{#|$|%P%Q%y&o&pQ!^rV#]!_#Y$gQ#^!_Q$e#YR%e$gV!ou#w&nR#b!bQ#e!bQ#f!cR$n#bU#d!b!c#bR%i$pU!iu#w&nQ#h!hQ$q#iQ$r#jR%v${_!gu!h#i#j#w${&n_!fu!h#i#j#w${&nQ#n!kR&h&mS#m!k&mR%k$tR#r!mQ#q!mR%l$uR#v!nQ#u!nR%m$vj^O#O#P#Q#R#S#T&q&r&s&t&u&vQyRQ!x|Q#U!VQ$V!zQ%Z$UR&P%[w]OR|!V!z#O#P#Q#R#S#T$U%[&q&r&s&t&u&vwTOR|!V!z#O#P#Q#R#S#T$U%[&q&r&s&t&u&vwSOR|!V!z#O#P#Q#R#S#T$U%[&q&r&s&t&u&vQ!uzQ#}!tR%V$PS#{!s#|W$y#x#z%Q%RQ%t$xQ%{%SR&Y%zQ%P#{Q%t$yQ&[%{R&d&YQ#z!sS$x#x%QQ%O#{Q%R#|S%w$|%PS&X%y%{R&e&[R%p$wR%n$wQ}VQ%U$OQ%Y$TQ&]%|R&^&OR$R!wwVOR|!V!z#O#P#Q#R#S#T$U%[&q&r&s&t&u&vQ#O!OQ#P!PQ#Q!QQ#R!RQ#S!SQ#T!TQ&q&wQ&r&xQ&s&yQ&t&zQ&u&{R&v&|h!|!O!P!Q!R!S!T&w&x&y&z&{&|R$[!}Q$Y!{Q%a$ZR&S%bR%^$XQ%_$XR&_&Q\",\n  nodeNames: \"⚠ Json Logfmt Unpack Pattern Regexp Unwrap Ip LabelFormat LineFormat LabelReplace Vector Offset Bool On Ignoring GroupLeft GroupRight Decolorize Drop Keep By Without And Or Unless Sum Avg Count Max Min Stddev Stdvar Bottomk Topk Sort Sort_Desc LineComment LogQL Expr LogExpr Selector Matchers Matcher Identifier Eq String Neq Re Nre PipelineExpr PipelineStage LineFilters LineFilter Filter PipeExact PipeMatch FilterOp OrFilter Pipe LogfmtParser LogfmtParserFlags ParserFlag LabelParser JsonExpressionParser LabelExtractionExpressionList LabelExtractionExpression LogfmtExpressionParser LabelFilter IpLabelFilter UnitFilter DurationFilter Gtr Duration Gte Lss Lte Eql BytesFilter Bytes NumberFilter Number LineFormatExpr LabelFormatExpr LabelsFormat LabelFormatMatcher DecolorizeExpr DropLabelsExpr DropLabels DropLabel KeepLabelsExpr KeepLabels KeepLabel MetricExpr RangeAggregationExpr RangeOp CountOverTime Rate RateCounter BytesOverTime BytesRate AvgOverTime SumOverTime MinOverTime MaxOverTime StddevOverTime StdvarOverTime QuantileOverTime FirstOverTime LastOverTime AbsentOverTime LogRangeExpr Range OffsetExpr UnwrapExpr ConvOp BytesConv DurationConv DurationSecondsConv Grouping Labels VectorAggregationExpr VectorOp BinOpExpr BinOpModifier OnOrIgnoringModifier GroupingLabels GroupingLabelList GroupingLabel LabelName Add Sub Mul Div Mod Pow LiteralExpr LabelReplaceExpr VectorExpr\",\n  maxTerm: 166,\n  skippedNodes: [0,37],\n  repeatNodeCount: 0,\n  tokenData: \"5b~RvX^#ipq#iqr$^rs$qst%cuv%nxy%syz%xz{%}{|&S|}&X}!O&^!O!P(l!P!Q)l!Q!R)q!R![+X![!]2X!^!_2m!_!`2z!`!a3a!c!}3n!}#O4U#P#Q4Z#Q#R4`#R#S3n#S#T4e#T#o3n#o#p4q#p#q4v#q#r5]#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~#nY$R~X^#ipq#i#y#z#i$f$g#i#BY#BZ#i$IS$I_#i$I|$JO#i$JT$JU#i$KV$KW#i&FU&FV#i~$aQ!_!`$g#r#s$l~$lO!P~~$qO!R~~$tUOY$qZr$qrs%Ws#O$q#O#P%]#P~$q~%]O!O~~%`PO~$q~%hQu~OY%cZ~%c~%sO#z~~%xO$V~~%}O$W~~&SO#x~~&XO#v~~&^O$T~~&cP#w~}!O&f~&iQ#_#`&o#g#h'|~&rP#X#Y&u~&xP#X#Y&{~'OP#d#e'R~'UP}!O'X~'[P#X#Y'_~'bP#a#b'e~'hP#d#e'k~'nP#h#i'q~'tP#m#n'w~'|O!`~~(PP#h#i(S~(VP#f#g(Y~(]P#]#^(`~(cP#V#W(f~(iP#h#i'w~(oP!Q![(r~(wR!s~!Q![(r!g!h)Q#X#Y)Q~)TR{|)^}!O)^!Q![)d~)aP!Q![)d~)iP!s~!Q![)d~)qO#y~~)ve!s~!O!P(r!Q![+X!g!h,l!i!j-Z!m!n-Z!o!p-Z!r!s-Z!v!w-Z#U#V-O#W#X-d#X#Y/f#Z#[/x#[#]-{#_#`/x#a#b0R#d#e/x#g#h/T#h#i/x#k#l0d#l#m1m#m#n1O~+^d!s~!O!P(r!Q![+X!g!h,l!i!j-Z!m!n-Z!o!p-Z!r!s-Z!v!w-Z#U#V-O#W#X-d#X#Y/f#Z#[/x#[#]-{#_#`/x#a#b0R#d#e/x#g#h/T#h#i/x#k#l0d#m#n1O~,oT{|)^}!O)^!Q![)d!d!e-O#]#^-T~-TO!q~~-WP#U#V-O~-^Q!d!e-O#]#^-T~-iP!k~!Q![-l~-oS!Q![-l#[#]-{#a#b.a#g#h/T~.QP!k~!Q![.T~.WR!Q![.T#a#b.a#g#h/T~.fQ!k~!Q![.l#g#h/O~.oR!Q![.l#a#b.x#g#h/T~.{P#g#h/O~/TO!k~~/YP!k~!Q![/]~/`Q!Q![/]#a#b.x~/iT{|)^}!O)^!Q![)d#U#V-O#]#^-T~/{Q#U#V-O#]#^-T~0WS!k~!Q![.l#U#V-O#]#^-T#g#h/O~0iP!k~!Q![0l~0oT!Q![0l#W#X-d#[#]-{#a#b.a#g#h/T~1TP!k~!Q![1W~1ZU!Q![1W#W#X-d#[#]-{#a#b.a#g#h/T#k#l0d~1pR!Q![1y!c!i1y#T#Z1y~2OR!s~!Q![1y!c!i1y#T#Z1yP2^T|P!Q![2X![!]2X!c!}2X#R#S2X#T#o2X~2rP!m~!_!`2u~2zO!n~~3PQ}~!_!`3V#r#s3[~3[O!o~~3aO!Q~~3fP!j~!_!`3i~3nO!l~R3uT|P#uQ!Q![3n![!]2X!c!}3n#R#S3n#T#o3n~4ZO$h~~4`O$i~~4eO#{~~4hRO#S4e#S#T%W#T~4e~4vO$S~~4{Q!]~!_!`5R#r#s5W~5WO!X~~5]O!Y~~5bO$U~\",\n  tokenizers: [0, 1],\n  topRules: {\"LogQL\":[0,38]},\n  specialized: [{term: 44, get: (value, stack) => (specializeIdentifier(value) << 1)},{term: 44, get: (value, stack) => (extendIdentifier(value) << 1) | 1},{term: 44, get: value => spec_Identifier[value] || -1}],\n  tokenPrec: 0\n});\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst Json = 1,\n  Logfmt = 2,\n  Unpack = 3,\n  Pattern = 4,\n  Regexp = 5,\n  Unwrap = 6,\n  Ip = 7,\n  LabelFormat = 8,\n  LineFormat = 9,\n  LabelReplace = 10,\n  Vector = 11,\n  Offset = 12,\n  Bool = 13,\n  On = 14,\n  Ignoring = 15,\n  GroupLeft = 16,\n  GroupRight = 17,\n  Decolorize = 18,\n  Drop = 19,\n  Keep = 20,\n  By = 21,\n  Without = 22,\n  And = 23,\n  Or = 24,\n  Unless = 25,\n  Sum = 26,\n  Avg = 27,\n  Count = 28,\n  Max = 29,\n  Min = 30,\n  Stddev = 31,\n  Stdvar = 32,\n  Bottomk = 33,\n  Topk = 34,\n  Sort = 35,\n  Sort_Desc = 36,\n  LineComment = 37,\n  LogQL = 38,\n  Expr = 39,\n  LogExpr = 40,\n  Selector = 41,\n  Matchers = 42,\n  Matcher = 43,\n  Identifier = 44,\n  Eq = 45,\n  String = 46,\n  Neq = 47,\n  Re = 48,\n  Nre = 49,\n  PipelineExpr = 50,\n  PipelineStage = 51,\n  LineFilters = 52,\n  LineFilter = 53,\n  Filter = 54,\n  PipeExact = 55,\n  PipeMatch = 56,\n  FilterOp = 57,\n  OrFilter = 58,\n  Pipe = 59,\n  LogfmtParser = 60,\n  LogfmtParserFlags = 61,\n  ParserFlag = 62,\n  LabelParser = 63,\n  JsonExpressionParser = 64,\n  LabelExtractionExpressionList = 65,\n  LabelExtractionExpression = 66,\n  LogfmtExpressionParser = 67,\n  LabelFilter = 68,\n  IpLabelFilter = 69,\n  UnitFilter = 70,\n  DurationFilter = 71,\n  Gtr = 72,\n  Duration = 73,\n  Gte = 74,\n  Lss = 75,\n  Lte = 76,\n  Eql = 77,\n  BytesFilter = 78,\n  Bytes = 79,\n  NumberFilter = 80,\n  Number = 81,\n  LineFormatExpr = 82,\n  LabelFormatExpr = 83,\n  LabelsFormat = 84,\n  LabelFormatMatcher = 85,\n  DecolorizeExpr = 86,\n  DropLabelsExpr = 87,\n  DropLabels = 88,\n  DropLabel = 89,\n  KeepLabelsExpr = 90,\n  KeepLabels = 91,\n  KeepLabel = 92,\n  MetricExpr = 93,\n  RangeAggregationExpr = 94,\n  RangeOp = 95,\n  CountOverTime = 96,\n  Rate = 97,\n  RateCounter = 98,\n  BytesOverTime = 99,\n  BytesRate = 100,\n  AvgOverTime = 101,\n  SumOverTime = 102,\n  MinOverTime = 103,\n  MaxOverTime = 104,\n  StddevOverTime = 105,\n  StdvarOverTime = 106,\n  QuantileOverTime = 107,\n  FirstOverTime = 108,\n  LastOverTime = 109,\n  AbsentOverTime = 110,\n  LogRangeExpr = 111,\n  Range = 112,\n  OffsetExpr = 113,\n  UnwrapExpr = 114,\n  ConvOp = 115,\n  BytesConv = 116,\n  DurationConv = 117,\n  DurationSecondsConv = 118,\n  Grouping = 119,\n  Labels = 120,\n  VectorAggregationExpr = 121,\n  VectorOp = 122,\n  BinOpExpr = 123,\n  BinOpModifier = 124,\n  OnOrIgnoringModifier = 125,\n  GroupingLabels = 126,\n  GroupingLabelList = 127,\n  GroupingLabel = 128,\n  LabelName = 129,\n  Add = 130,\n  Sub = 131,\n  Mul = 132,\n  Div = 133,\n  Mod = 134,\n  Pow = 135,\n  LiteralExpr = 136,\n  LabelReplaceExpr = 137,\n  VectorExpr = 138;\n\nfunction getNodeFromQuery(query, nodeType) {\n  const nodes = [];\n  const tree = parser.parse(query);\n  tree.iterate({\n    enter: (node) => {\n      if (nodeType === undefined || nodeType === node.type.id) {\n        nodes.push(node.node);\n      }\n    },\n  });\n  return nodes[0];\n}\n\nfunction isLogsQuery(query) {\n  if (getNodeFromQuery(query, MetricExpr$1)) {\n    return false;\n  }\n  return true;\n}\n\nfunction indent(level) {\n  return '  '.repeat(level);\n}\n\nfunction indentMultiline(block, level) {\n  const lines = block.split('\\n');\n  return lines.map((line) => indent(level) + line).join('\\n');\n}\n\nfunction trimMultiline(block) {\n  const lines = block.split('\\n');\n  return lines.map((line) => line.trimEnd()).join('\\n');\n}\n\nfunction needsBrackets(node, queryType) {\n  const childNodeIsSame = node.firstChild?.type.id === queryType;\n  let addBrackets = false;\n\n  if (node.firstChild && childNodeIsSame) {\n    addBrackets = true;\n    node = node.firstChild;\n  }\n\n  return { addBrackets, newNode: node };\n}\n\nfunction iterateNode(node, lookingFor) {\n  const nodes = [];\n  let child = node.firstChild;\n\n  while (child) {\n    if (lookingFor.includes(child.type.id)) {\n      nodes.push(child);\n    }\n\n    nodes.push(...iterateNode(child, lookingFor));\n    child = child.nextSibling;\n  }\n\n  return nodes;\n}\n\nfunction buildResponse(pipelineType, lastPipelineType, formattedNode) {\n  if (lastPipelineType === pipelineType) {\n    return ` ${formattedNode}`;\n  }\n\n  return `\\n${indent(1)}${formattedNode}`;\n}\n\nfunction trimEnd(input, charactersToTrim) {\n  let endIndex = input.length - 1;\n  while (endIndex >= 0 && charactersToTrim.includes(input[endIndex])) {\n    endIndex--;\n  }\n  return input.substring(0, endIndex + 1);\n}\n\nconst formatLogExpr = (node, query) => {\n  const { addBrackets, newNode } = needsBrackets(node, LogExpr);\n  node = newNode;\n\n  const tree = parser.parse(query.substring(node.from, node.to));\n  let formatted = '';\n\n  tree.iterate({\n    enter: (ref) => {\n      const node = ref.node;\n\n      switch (node.type.id) {\n        case Selector:\n          formatted += formatSelector(node, query);\n          break;\n\n        case PipelineExpr:\n          node.parent?.type.id !== PipelineExpr && (formatted += formatPipelineExpr(node, query));\n          break;\n      }\n    },\n  });\n\n  return addBrackets ? '(' + formatted + ')' : formatted;\n};\n\nfunction formatSelector(node, query) {\n  const selector = query.substring(node.from, node.to);\n  const subtree = parser.parse(selector);\n  const labelNodes = [];\n  let response = '';\n\n  subtree.iterate({\n    enter: (ref) => {\n      const node = ref.node;\n      if (node.type.id === Matcher) {\n        labelNodes.push(node);\n      }\n    },\n  });\n\n  labelNodes.sort((a, b) => {\n    const labelNodeA = a.getChild(Identifier);\n    const labelNodeB = b.getChild(Identifier);\n\n    const labelValueA = labelNodeA && query.substring(labelNodeA.from, labelNodeA.to);\n    const labelValueB = labelNodeB && query.substring(labelNodeB.from, labelNodeB.to);\n\n    if (!labelValueA || !labelValueB) {\n      return 0;\n    }\n\n    if (labelValueA < labelValueB) {\n      return -1;\n    }\n\n    if (labelValueA > labelValueB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  labelNodes.forEach((node) => {\n    const labelNode = node.getChild(Identifier);\n    const operatorNode = labelNode ? labelNode.nextSibling : null;\n    const valueNode = node.getChild(String);\n\n    const label = labelNode ? query.substring(labelNode.from, labelNode.to) : null;\n    const operator = operatorNode ? query.substring(operatorNode.from, operatorNode.to) : null;\n    const value = valueNode ? query.substring(valueNode.from, valueNode.to) : null;\n\n    response += `${label}${operator}${value}, `;\n  });\n\n  return '{' + trimEnd(response, ', ') + '}';\n}\n\nfunction formatPipelineExpr(node, query) {\n  const pipelineExprNodes = [\n    LineFilter,\n    LabelParser,\n    LogfmtParser,\n    LabelFilter,\n    JsonExpressionParser,\n    LineFormatExpr,\n    LabelFormatExpr,\n    DecolorizeExpr,\n  ];\n  let lastPipelineType;\n  let response = '';\n\n  iterateNode(node, pipelineExprNodes).forEach((node) => {\n    switch (node.type.id) {\n      case LineFilter:\n        response += buildResponse(LineFilter, lastPipelineType, formatLineFilter(node, query));\n        lastPipelineType = LineFilter;\n        break;\n\n      case LabelParser:\n        response += buildResponse(LabelParser, lastPipelineType, formatLabelParser(node, query));\n        lastPipelineType = LabelParser;\n        break;\n\n      case LogfmtParser:\n        response += buildResponse(LogfmtParser, lastPipelineType, formatLabelParser(node, query));\n        lastPipelineType = LogfmtParser;\n        break;\n\n      case JsonExpressionParser:\n        response += buildResponse(JsonExpressionParser, lastPipelineType, formatJsonExpressionParser(node, query));\n        lastPipelineType = JsonExpressionParser;\n        break;\n\n      case LabelFilter:\n        response += buildResponse(LabelFilter, lastPipelineType, formatLabelFilter(node, query));\n        lastPipelineType = LabelFilter;\n        break;\n\n      case LineFormatExpr:\n        response += buildResponse(LineFormatExpr, lastPipelineType, formatLineFormatExpr(node, query));\n        lastPipelineType = LineFormatExpr;\n        break;\n\n      case LabelFormatExpr:\n        response += buildResponse(LabelFormatExpr, lastPipelineType, formatLabelFormatExpr(node, query));\n        lastPipelineType = LabelFormatExpr;\n        break;\n\n      case DecolorizeExpr:\n        response += buildResponse(DecolorizeExpr, lastPipelineType, formatDecolorizeExpr());\n        lastPipelineType = DecolorizeExpr;\n        break;\n    }\n  });\n\n  return response;\n}\n\nfunction formatLineFilter(node, query) {\n  const filterNode = node.getChild(Filter);\n  const filterOperationNode = node.getChild(FilterOp);\n  const stringNode = node.getChild(String);\n\n  const filter = filterNode && query.substring(filterNode.from, filterNode.to);\n  const string = stringNode && query.substring(stringNode.from, stringNode.to);\n\n  if (filterOperationNode) {\n    return `${filter} ip(${string})`;\n  }\n  return `${filter} ${string}`;\n}\n\nfunction formatLabelParser(node, query) {\n  const hasString = node.getChild(String);\n\n  if (hasString) {\n    const parserNode = node.getChild(Regexp) || node.getChild(Pattern);\n    const stringNode = node.getChild(String);\n\n    const parser = parserNode && query.substring(parserNode.from, parserNode.to);\n    const string = stringNode && query.substring(stringNode.from, stringNode.to);\n\n    return `| ${parser}${string}`;\n  }\n\n  const labelParser = query.substring(node.from, node.to);\n  return `| ${labelParser}`;\n}\n\nfunction formatJsonExpressionParser(node, query) {\n  const jsonExpressionNodes = iterateNode(node, [LabelExtractionExpression]);\n  let response = '';\n\n  jsonExpressionNodes.forEach((node) => {\n    const identifierNode = node.getChild(Identifier);\n    const valueNode = node.getChild(String);\n\n    const identifier = identifierNode && query.substring(identifierNode.from, identifierNode.to);\n    const value = valueNode && query.substring(valueNode.from, valueNode.to);\n\n    response += `${identifier}=${value}, `;\n  });\n\n  return `| json ${trimEnd(response, ', ')}`;\n}\n\nfunction formatLabelFilter(node, query) {\n  const selectedFilter =\n    node.getChild(Matcher) ||\n    node.getChild(IpLabelFilter) ||\n    node.getChild(NumberFilter) ||\n    node.getChild(UnitFilter)?.getChild(DurationFilter) ||\n    node.getChild(UnitFilter)?.getChild(BytesFilter);\n\n  if (!selectedFilter) {\n    return '';\n  }\n\n  const selectedFilterType = selectedFilter.type.id;\n\n  const identifierNode = selectedFilter.getChild(Identifier);\n  const operatorNode = identifierNode && identifierNode.nextSibling;\n  let valueNode;\n\n  if (selectedFilterType === DurationFilter) {\n    valueNode = selectedFilter.getChild(Duration);\n  } else if (selectedFilterType === BytesFilter) {\n    valueNode = selectedFilter.getChild(Bytes);\n  } else if (selectedFilterType === NumberFilter) {\n    valueNode = selectedFilter.getChild(Number);\n  } else {\n    valueNode = selectedFilter.getChild(String);\n  }\n\n  const identifier = identifierNode && query.substring(identifierNode.from, identifierNode.to);\n  const operator = operatorNode && query.substring(operatorNode.from, operatorNode.to);\n  const value = valueNode && query.substring(valueNode.from, valueNode.to);\n\n  if (selectedFilterType === IpLabelFilter) {\n    return `| ${identifier}${operator}ip(${value})`;\n  }\n\n  return `| ${identifier}${operator}${value}`;\n}\n\nfunction formatLineFormatExpr(node, query) {\n  const stringNode = node.getChild(String);\n  const string = stringNode && query.substring(stringNode.from, stringNode.to);\n  return `| line_format ${string}`;\n}\n\nfunction formatLabelFormatExpr(node, query) {\n  const labelFormatMatcherNodes = iterateNode(node, [LabelFormatMatcher]);\n  let response = '| label_format ';\n\n  labelFormatMatcherNodes.forEach((labelFormatMatcherNode) => {\n    let identifierNode;\n    let valueNode;\n\n    if (labelFormatMatcherNode.getChildren(Identifier).length === 2) {\n      [identifierNode, valueNode] = labelFormatMatcherNode.getChildren(Identifier);\n    } else {\n      identifierNode = labelFormatMatcherNode.getChild(Identifier);\n      valueNode = labelFormatMatcherNode.getChild(String);\n    }\n\n    const identifier = identifierNode && query.substring(identifierNode.from, identifierNode.to);\n    const value = valueNode && query.substring(valueNode.from, valueNode.to);\n\n    response += `${identifier}=${value}, `;\n  });\n\n  return trimEnd(response, ', ');\n}\n\nfunction formatDecolorizeExpr() {\n  return `| decolorize`;\n}\n\nconst formatMetricExpr = (node, query) => {\n  const { addBrackets, newNode } = needsBrackets(node, MetricExpr);\n  node = newNode;\n  let formatted = '';\n\n  const childNode = node.firstChild;\n  switch (childNode && childNode.type.id) {\n    case RangeAggregationExpr:\n      formatted = formatRangeAggregationExpr(node, query);\n      break;\n\n    case VectorAggregationExpr:\n      formatted = formatVectorAggregationExpr(node, query);\n      break;\n\n    case BinOpExpr:\n      formatted = formatBinOpExpr(node, query);\n      break;\n\n    case LiteralExpr:\n      formatted = formatLiteralExpr(node, query);\n      break;\n\n    case LabelReplaceExpr:\n      formatted = formatLabelReplaceExpr(node, query);\n      break;\n\n    case VectorExpr:\n      formatted = formatVectorExpr(node, query);\n      break;\n  }\n\n  return addBrackets ? '(' + formatted + ')' : formatted;\n};\n\nfunction formatRangeAggregationExpr(node, query) {\n  let response = '';\n\n  iterateNode(node, [RangeOp, Number, LogRangeExpr, Grouping]).forEach((node) => {\n    if (node.parent?.type.id !== RangeAggregationExpr) {\n      return;\n    }\n\n    switch (node.type.id) {\n      case RangeOp:\n        response += `${query.substring(node.from, node.to)}(\\n`;\n        break;\n\n      case Number:\n        response += `${indent(1) + query.substring(node.from, node.to)},\\n`;\n        break;\n\n      case LogRangeExpr:\n        response += formatLogRangeExpr(node, query);\n        break;\n\n      case Grouping:\n        response += formatGrouping(node, query);\n        break;\n    }\n  });\n\n  return response;\n}\n\nfunction formatLogRangeExpr(node, query) {\n  const nodes = [];\n  let selector = '';\n  let pipeline = '';\n  let range = '';\n  let offset = '';\n  let unwrap = '';\n\n  iterateNode(node, [Selector, Range, OffsetExpr, UnwrapExpr, PipelineExpr]).forEach((node) => {\n    if (node.parent?.type.id !== LogRangeExpr) {\n      return;\n    }\n\n    nodes.push(node);\n\n    switch (node.type.id) {\n      case Selector: {\n        let logExpr = query.substring(node.from, node.to);\n        selector += formatSelector({ ...node, from: 0, to: logExpr.length }, logExpr);\n        break;\n      }\n\n      case PipelineExpr:\n        pipeline += formatPipelineExpr(node, query);\n        break;\n\n      case Range:\n        range += query.substring(node.from, node.to);\n        break;\n\n      case OffsetExpr: {\n        const durationNode = node.getChild(Duration);\n        offset += ` offset ${durationNode ? query.substring(durationNode.from, durationNode.to) : ''}`;\n        break;\n      }\n\n      case UnwrapExpr:\n        iterateNode(node, [Identifier, ConvOp, LabelFilter]).forEach((node, _, arr) => {\n          switch (node.type.id) {\n            case Identifier: {\n              if (node.parent?.type.id !== UnwrapExpr) {\n                return;\n              }\n\n              const hasConvOp = arr.find((node) => node.type.id === ConvOp);\n\n              if (hasConvOp) {\n                return;\n              }\n\n              unwrap += `| unwrap ${query.substring(node.from, node.to)} `;\n              return;\n            }\n\n            case ConvOp: {\n              const identifierNode = arr.find((node) => node.type.id === Identifier);\n              const identifier = identifierNode ? query.substring(identifierNode.from, identifierNode.to) : '';\n              unwrap += `| unwrap ${query.substring(node.from, node.to)}(${identifier}) `;\n              return;\n            }\n\n            case LabelFilter:\n              unwrap += formatLabelFilter(node, query);\n              return;\n          }\n        });\n        break;\n    }\n  });\n\n  let response = '';\n  nodes.forEach((node, index, array) => {\n    const previousNode = array[index - 1];\n\n    if (node.type.id === Selector) {\n      response += indent(1) + selector;\n    }\n\n    if (node.type.id === PipelineExpr) {\n      response += indentMultiline(pipeline, 1);\n    }\n\n    if (node.type.id === Range) {\n      response += '\\n' + indent(1) + range;\n    }\n\n    if (node.type.id === OffsetExpr) {\n      response += offset;\n    }\n\n    if (node.type.id === UnwrapExpr) {\n      if (previousNode?.type.id !== OffsetExpr && previousNode?.type.id !== Range) {\n        response += '\\n' + indent(1) + unwrap;\n      } else {\n        response += ' ' + unwrap;\n      }\n    }\n  });\n\n  return (response += '\\n)');\n}\n\nfunction formatGrouping(node, query) {\n  let response = '';\n\n  const labels = iterateNode(node, [Identifier]).map((node) => {\n    return query.substring(node.from, node.to);\n  });\n\n  iterateNode(node, [By, Without]).forEach((node) => {\n    if (node.parent?.type.id !== Grouping) {\n      return;\n    }\n\n    switch (node.type.id) {\n      case By:\n        response = ` by (${labels.join(', ')}) `;\n        break;\n\n      case Without:\n        response = ` without (${labels.join(', ')}) `;\n        break;\n    }\n  });\n\n  return response;\n}\n\nfunction formatVectorAggregationExpr(node, query) {\n  let response = '';\n\n  iterateNode(node, [VectorOp, Number, MetricExpr, Grouping]).forEach((node, _, arr) => {\n    if (node.parent?.type.id !== VectorAggregationExpr) {\n      return;\n    }\n\n    switch (node.type.id) {\n      case VectorOp:\n        response += `${query.substring(node.from, node.to)}`;\n        break;\n\n      case Number:\n        response += `(\\n`;\n        response += `${indent(1) + query.substring(node.from, node.to)},\\n`;\n        break;\n\n      case MetricExpr: {\n        const hasNumber = arr.find((node) => node.type.id === Number && node.parent?.type.id === VectorAggregationExpr);\n        response += hasNumber ? '' : '(\\n';\n\n        const metricExpr = query.substring(node.from, node.to);\n        const metricNode = getNodeFromQuery(metricExpr, MetricExpr);\n        response += indentMultiline(formatMetricExpr(metricNode, metricExpr), 1);\n        response += '\\n)';\n        break;\n      }\n\n      case Grouping:\n        response += formatGrouping(node, query);\n        break;\n    }\n  });\n\n  return response;\n}\n\nfunction formatBinOpExpr(node, query) {\n  let operator;\n\n  const [leftExpr, rightExpr] = iterateNode(node, [Expr]).map((node, idx) => {\n    if (idx === 0) {\n      operator = query.substring(node.nextSibling?.from ?? 0, node.nextSibling?.to);\n    }\n\n    const expr = query.substring(node.from, node.to);\n    let expressionNode;\n\n    if (isLogsQuery(expr)) {\n      expressionNode = getNodeFromQuery(expr, LogExpr);\n      return formatLogExpr(expressionNode, expr);\n    } else {\n      expressionNode = getNodeFromQuery(expr, MetricExpr);\n      return formatMetricExpr(expressionNode, expr);\n    }\n  });\n\n  return leftExpr + '\\n' + operator + '\\n' + rightExpr;\n}\n\nfunction formatLiteralExpr(node, query) {\n  node = node.getChild(LiteralExpr) ?? node;\n  const addNode = node.getChild(Add);\n  const subNode = node.getChild(Sub);\n  const numberNode = node.getChild(Number);\n\n  if (!numberNode) {\n    return '';\n  }\n\n  if (addNode) {\n    return `+${query.substring(numberNode.from, numberNode.to)}`;\n  }\n\n  if (subNode) {\n    return `-${query.substring(numberNode.from, numberNode.to)}`;\n  }\n\n  return query.substring(numberNode.from, numberNode.to);\n}\n\nfunction formatLabelReplaceExpr(node, query) {\n  let response = 'label_replace(\\n';\n\n  iterateNode(node, [MetricExpr, String]).forEach((node) => {\n    if (node.parent?.type.id !== LabelReplaceExpr) {\n      return;\n    }\n\n    if (node.type.id === MetricExpr) {\n      const metricExpr = query.substring(node.from, node.to);\n      const metricNode = getNodeFromQuery(metricExpr, MetricExpr);\n      response += indentMultiline(formatMetricExpr(metricNode, metricExpr), 1) + ',\\n';\n    } else {\n      response += indent(1) + query.substring(node.from, node.to) + ',\\n';\n    }\n  });\n\n  return trimEnd(response, ',\\n') + '\\n)';\n}\n\nfunction formatVectorExpr(node, query) {\n  node = node.getChild(VectorExpr) ?? node;\n  const numberNode = node.getChild(Number);\n\n  if (!numberNode) {\n    return '';\n  }\n\n  return `vector(${query.substring(numberNode.from, numberNode.to)})`;\n}\n\n/**\n * @experimental This feature is subject to change or removal in future versions.\n */\nconst formatLokiQuery = (query) => {\n  const tree = parser.parse(query);\n  let formatted = '';\n\n  tree.iterate({\n    enter: (ref) => {\n      const node = ref.node;\n\n      if (node.parent?.type.id !== Expr || node.parent?.parent?.type.id === BinOpExpr) {\n        return;\n      }\n\n      switch (node.type.id) {\n        case MetricExpr:\n          formatted = formatMetricExpr(node, query);\n          return false;\n\n        case LogExpr:\n          formatted = formatLogExpr(node, query);\n          return false;\n      }\n    },\n  });\n\n  return trimMultiline(formatted);\n};\n\nexport { AbsentOverTime, Add, And, Avg, AvgOverTime, BinOpExpr, BinOpModifier, Bool, Bottomk, By, Bytes, BytesConv, BytesFilter, BytesOverTime, BytesRate, ConvOp, Count, CountOverTime, Decolorize, DecolorizeExpr, Div, Drop, DropLabel, DropLabels, DropLabelsExpr, Duration, DurationConv, DurationFilter, DurationSecondsConv, Eq, Eql, Expr, Filter, FilterOp, FirstOverTime, GroupLeft, GroupRight, Grouping, GroupingLabel, GroupingLabelList, GroupingLabels, Gte, Gtr, Identifier, Ignoring, Ip, IpLabelFilter, Json, JsonExpressionParser, Keep, KeepLabel, KeepLabels, KeepLabelsExpr, LabelExtractionExpression, LabelExtractionExpressionList, LabelFilter, LabelFormat, LabelFormatExpr, LabelFormatMatcher, LabelName, LabelParser, LabelReplace, LabelReplaceExpr, Labels, LabelsFormat, LastOverTime, LineComment, LineFilter, LineFilters, LineFormat, LineFormatExpr, LiteralExpr, LogExpr, LogQL, LogRangeExpr, Logfmt, LogfmtExpressionParser, LogfmtParser, LogfmtParserFlags, Lss, Lte, Matcher, Matchers, Max, MaxOverTime, MetricExpr, Min, MinOverTime, Mod, Mul, Neq, Nre, Number, NumberFilter, Offset, OffsetExpr, On, OnOrIgnoringModifier, Or, OrFilter, ParserFlag, Pattern, Pipe, PipeExact, PipeMatch, PipelineExpr, PipelineStage, Pow, QuantileOverTime, Range, RangeAggregationExpr, RangeOp, Rate, RateCounter, Re, Regexp, Selector, Sort, Sort_Desc, Stddev, StddevOverTime, Stdvar, StdvarOverTime, String, Sub, Sum, SumOverTime, Topk, UnitFilter, Unless, Unpack, Unwrap, UnwrapExpr, Vector, VectorAggregationExpr, VectorExpr, VectorOp, Without, formatLokiQuery, parser };\n","import { SyntaxNode } from \"@lezer/common\";\nimport { escapeRegExp } from 'lodash';\n\nimport { Filter, FilterOp, LineFilter, OrFilter, parser, PipeExact, PipeMatch, String } from \"@grafana/lezer-logql\"\n\nexport function getNodesFromQuery(query: string, nodeTypes?: number[]): SyntaxNode[] {\n  const nodes: SyntaxNode[] = [];\n  const tree = parser.parse(query);\n  tree.iterate({\n    enter: (node): false | void => {\n      if (nodeTypes === undefined || nodeTypes.includes(node.type.id)) {\n        nodes.push(node.node);\n      }\n    },\n  });\n  return nodes;\n}\n\nexport function getStringsFromLineFilter(filter: SyntaxNode): SyntaxNode[] {\n  const nodes: SyntaxNode[] = [];\n  let node: SyntaxNode | null = filter;\n  do {\n    const string = node.getChild(String);\n    if (string && !node.getChild(FilterOp)) {\n      nodes.push(string);\n    }\n    node = node.getChild(OrFilter);\n  } while (node != null);\n\n  return nodes;\n}\n\nexport function getHighlighterExpressionsFromQuery(input = ''): string[] {\n  const results = [];\n\n  const filters = getNodesFromQuery(input, [LineFilter]);\n\n  for (const filter of filters) {\n    const pipeExact = filter.getChild(Filter)?.getChild(PipeExact);\n    const pipeMatch = filter.getChild(Filter)?.getChild(PipeMatch);\n    const strings = getStringsFromLineFilter(filter);\n\n    if ((!pipeExact && !pipeMatch) || !strings.length) {\n      continue;\n    }\n\n    for (const string of strings) {\n      const filterTerm = input.substring(string.from, string.to).trim();\n      const backtickedTerm = filterTerm[0] === '`';\n      const unwrappedFilterTerm = filterTerm.substring(1, filterTerm.length - 1);\n\n      if (!unwrappedFilterTerm) {\n        continue;\n      }\n\n      let resultTerm = '';\n\n      // Only filter expressions with |~ operator are treated as regular expressions\n      if (pipeMatch) {\n        resultTerm = backtickedTerm ? unwrappedFilterTerm : unwrappedFilterTerm.replace(/\\\\\\\\/g, '\\\\');\n      } else {\n        // We need to escape this string so it is not matched as regular expression\n        resultTerm = escapeRegExp(unwrappedFilterTerm);\n      }\n\n      if (resultTerm) {\n        results.push(resultTerm);\n      }\n    }\n  }\n  return results;\n}\n","import { DataQueryResponse, DataFrame, isDataFrame, FieldType, QueryResultMeta, DataQueryError } from '@grafana/data';\n\nimport { getDerivedFields } from './getDerivedFields';\nimport { makeTableFrames } from './makeTableFrames';\nimport { getHighlighterExpressionsFromQuery } from './queryUtils';\nimport { dataFrameHasError } from './responseUtils';\nimport { DerivedFieldConfig, Query, QueryType } from './types';\n\nfunction isMetricFrame(frame: DataFrame): boolean {\n  return frame.fields.every((field) => field.type === FieldType.time || field.type === FieldType.number);\n}\n\n// returns a new frame, with meta shallow merged with its original meta\nfunction setFrameMeta(frame: DataFrame, meta: QueryResultMeta): DataFrame {\n  const { meta: oldMeta, ...rest } = frame;\n  // meta maybe be undefined, we need to handle that\n  const newMeta = { ...oldMeta, ...meta };\n  return {\n    ...rest,\n    meta: newMeta,\n  };\n}\n\nfunction processStreamFrame(\n  frame: DataFrame,\n  query: Query | undefined,\n  derivedFieldConfigs: DerivedFieldConfig[]\n): DataFrame {\n  const custom: Record<string, string> = {\n    ...frame.meta?.custom, // keep the original meta.custom\n  };\n\n  if (dataFrameHasError(frame)) {\n    custom.error = 'Error when parsing some of the logs';\n  }\n\n  const meta: QueryResultMeta = {\n    preferredVisualisationType: 'logs',\n    limit: query?.maxLines,\n    searchWords: query !== undefined ? getHighlighterExpressionsFromQuery(query.expr) : undefined,\n    custom,\n  };\n\n  const newFrame = setFrameMeta(frame, meta);\n  const derivedFields = getDerivedFields(newFrame, derivedFieldConfigs);\n  return {\n    ...newFrame,\n    fields: [...newFrame.fields, ...derivedFields],\n  };\n}\n\nfunction processStreamsFrames(\n  frames: DataFrame[],\n  queryMap: Map<string, Query>,\n  derivedFieldConfigs: DerivedFieldConfig[]\n): DataFrame[] {\n  return frames.map((frame) => {\n    const query = frame.refId !== undefined ? queryMap.get(frame.refId) : undefined;\n    return processStreamFrame(frame, query, derivedFieldConfigs);\n  });\n}\n\nfunction processMetricInstantFrames(frames: DataFrame[]): DataFrame[] {\n  return frames.length > 0 ? makeTableFrames(frames) : [];\n}\n\nfunction processMetricRangeFrames(frames: DataFrame[]): DataFrame[] {\n  const meta: QueryResultMeta = { preferredVisualisationType: 'graph' };\n  return frames.map((frame) => setFrameMeta(frame, meta));\n}\n\n// we split the frames into 3 groups, because we will handle\n// each group slightly differently\nfunction groupFrames(\n  frames: DataFrame[],\n  queryMap: Map<string, Query>\n): {\n  streamsFrames: DataFrame[];\n  metricInstantFrames: DataFrame[];\n  metricRangeFrames: DataFrame[];\n} {\n  const streamsFrames: DataFrame[] = [];\n  const metricInstantFrames: DataFrame[] = [];\n  const metricRangeFrames: DataFrame[] = [];\n\n  frames.forEach((frame) => {\n    if (!isMetricFrame(frame)) {\n      streamsFrames.push(frame);\n    } else {\n      const isInstantFrame = frame.refId != null && queryMap.get(frame.refId)?.queryType === QueryType.Instant;\n      if (isInstantFrame) {\n        metricInstantFrames.push(frame);\n      } else {\n        metricRangeFrames.push(frame);\n      }\n    }\n  });\n\n  return { streamsFrames, metricInstantFrames, metricRangeFrames };\n}\n\nfunction improveError(error: DataQueryError | undefined, queryMap: Map<string, Query>): DataQueryError | undefined {\n  if (error === undefined) {\n    return error;\n  }\n\n  const { refId, message } = error;\n  if (refId === undefined || message === undefined) {\n    return error;\n  }\n\n  const query = queryMap.get(refId);\n  if (query === undefined) {\n    return error;\n  }\n\n  if (message.includes('escape') && query.expr.includes('\\\\')) {\n    return {\n      ...error,\n      message: `${message}. Make sure that all special characters are escaped with \\\\. For more information on escaping of special characters visit LogQL documentation at https://docs.victoriametrics.com/victorialogs/logsql/.`,\n    };\n  }\n\n  return error;\n}\n\nexport function transformBackendResult(\n  response: DataQueryResponse,\n  queries: Query[],\n  derivedFieldConfigs: DerivedFieldConfig[],\n  maxLines: number\n): DataQueryResponse {\n  const { data, errors, ...rest } = response;\n\n  // in the typescript type, data is an array of basically anything.\n  // we do know that they have to be dataframes, so we make a quick check,\n  // this way we can be sure, and also typescript is happy.\n  const dataFrames = data.map((d) => {\n    if (!isDataFrame(d)) {\n      throw new Error('transformation only supports dataframe responses');\n    }\n\n    // for VictoriaLogs < v0.5.0, no \"limit\" for `/select/logsql/query`.\n    const limitExceeded = d.fields.some(f => f.values.length > maxLines)\n    if (limitExceeded) {\n      return {\n        ...d,\n        length: maxLines,\n        fields: d.fields.map(f => ({ ...f, values:  f.values.slice(0, maxLines) }))\n      }\n    }\n\n    return d;\n  });\n\n  const queryMap = new Map(queries.map((query) => [query.refId, query]));\n\n  const { streamsFrames, metricInstantFrames, metricRangeFrames } = groupFrames(dataFrames, queryMap);\n\n  const improvedErrors = errors && errors.map((error) => improveError(error, queryMap)).filter((e) => e !== undefined);\n\n  return {\n    ...rest,\n    errors: improvedErrors as DataQueryError[],\n    data: [\n      ...processMetricRangeFrames(metricRangeFrames),\n      ...processMetricInstantFrames(metricInstantFrames),\n      ...processStreamsFrames(streamsFrames, queryMap, derivedFieldConfigs),\n    ],\n  };\n}\n","import { DataFrame, Labels } from \"@grafana/data\";\n\nexport function dataFrameHasError(frame: DataFrame): boolean {\n  const labelSets: Labels[] = frame.fields.find((f) => f.name === 'labels')?.values ?? [];\n  return labelSets.some((labels) => labels.__error__ !== undefined);\n}\n","const REG_METACHARACTERS = /[*+?()|\\\\.\\[\\]{}^$]/g;\n\nexport function unescapeLabelValue(labelValue: string): string {\n  return labelValue.replace(/\\\\n/g, '\\n').replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\n}\n\nexport function isRegexSelector(selector?: string) {\n  return !!(selector && (selector.includes('=~') || selector.includes('!~')));\n}\n\nfunction escapeMetaRegexp(value: string): string {\n  return value.replace(REG_METACHARACTERS, '\\\\$&');\n}\n\nexport function escapeLabelValueInExactSelector(labelValue: string): string {\n  return labelValue.replace(/\\\\/g, '\\\\\\\\').replace(/\\n/g, '\\\\n').replace(/\"/g, '\\\\\"');\n}\n\nexport function escapeLabelValueInRegexSelector(labelValue: string): string {\n  return escapeLabelValueInExactSelector(escapeMetaRegexp(labelValue));\n}\n\nexport function escapeLabelValueInSelector(labelValue: string, selector?: string): string {\n  return isRegexSelector(selector)\n    ? escapeLabelValueInRegexSelector(labelValue)\n    : escapeLabelValueInExactSelector(labelValue);\n}\n","export function queryHasFilter(query: string, key: string, value: string): boolean {\n  return query.includes(`${key}:${value}`)\n}\n\nexport const removeLabelFromQuery = (query: string, key: string, value: string): string => {\n  const operators = ['AND', 'NOT']\n  const parts = query.split(' ')\n  const index = parts.findIndex((part) => part.includes(`${key}:${value}`))\n  const newParts = removeAtIndexAndBefore(parts, index, operators.includes(parts[index - 1]))\n  return newParts.join(' ')\n}\n\nexport const addLabelToQuery = (query: string, key: string, value: string, operator: string): string => {\n  return `${query} ${operator} ${key}:${value}`\n}\n\nconst removeAtIndexAndBefore = (arr: string[], index: number, removeBefore: boolean): string[] => {\n  if (index < 0 || index >= arr.length) {\n    return arr;\n  }\n\n  if (removeBefore) {\n    const isStart = index === 0;\n    arr.splice(isStart ? index : index - 1, isStart ? 1 : 2);\n  } else {\n    arr.splice(index, 1);\n  }\n\n  return arr;\n}\n","const varTypeFunc = [\n  (v: string) => `\\$${v}`,\n  (v: string, f?: string) => `[[${v}${f ? `:${f}` : ''}]]`,\n  (v: string, f?: string) => `\\$\\{${v}${f ? `:${f}` : ''}\\}`,\n];\n\nexport const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?]]|\\${(\\w+)(?:\\.([^:^}]+))?(?::([^}]+))?}/g;\n\nexport function returnVariables(expr: string) {\n  const replacer = (match: string, type: any, v: any, f: any) => varTypeFunc[parseInt(type, 10)](v, f)\n  return expr.replace(/__V_(\\d)__(.+?)__V__(?:__F__(\\w+)__F__)?/g, replacer);\n}\n\n\nexport function replaceVariables(expr: string) {\n  return expr.replace(variableRegex, (match, var1, var2, fmt2, var3, fieldPath, fmt3) => {\n    const fmt = fmt2 || fmt3;\n    let variable = var1;\n    let varType = '0';\n\n    if (var2) {\n      variable = var2;\n      varType = '1';\n    }\n\n    if (var3) {\n      variable = var3;\n      varType = '2';\n    }\n\n    return `__V_${varType}__` + variable + '__V__' + (fmt ? '__F__' + fmt + '__F__' : '');\n  });\n}\n","import { map as lodashMap } from 'lodash';\nimport { Observable } from \"rxjs\";\nimport { map } from 'rxjs/operators';\n\nimport {\n  AdHocVariableFilter,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  ScopedVars\n} from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv, TemplateSrv } from '@grafana/runtime';\n\nimport { transformBackendResult } from \"./backendResultTransformer\";\nimport QueryEditor from \"./components/QueryEditor/QueryEditor\";\nimport { escapeLabelValueInSelector, isRegexSelector } from \"./languageUtils\";\nimport { addLabelToQuery, queryHasFilter, removeLabelFromQuery } from \"./modifyQuery\";\nimport { replaceVariables, returnVariables } from \"./parsingUtils\";\nimport { Query, Options, ToggleFilterAction, QueryFilterOptions, FilterActionType } from './types';\n\nexport class VictoriaLogsDatasource\n  extends DataSourceWithBackend<Query, Options> {\n  maxLines: number;\n\n  constructor(\n    instanceSettings: DataSourceInstanceSettings<Options>,\n    private readonly templateSrv: TemplateSrv = getTemplateSrv()\n  ) {\n    super(instanceSettings);\n\n    const settingsData = instanceSettings.jsonData || {};\n    this.maxLines = parseInt(settingsData.maxLines ?? '0', 10) || 1000;\n    this.annotations = {\n      QueryEditor: QueryEditor,\n    };\n  }\n\n  query(request: DataQueryRequest<Query>): Observable<DataQueryResponse> {\n    const queries = request.targets.filter(q => q.expr).map((q) => {\n      // include time range in query if not already present\n      if (!/_time/.test(q.expr)) {\n        const timerange = `_time:[${request.range.from.toISOString()}, ${request.range.to.toISOString()}]`\n        q.expr = `${timerange} AND (${q.expr})`;\n      }\n      return { ...q, maxLines: q.maxLines ?? this.maxLines }\n    });\n\n    const fixedRequest: DataQueryRequest<Query> = {\n      ...request,\n      targets: queries,\n    };\n\n    return this.runQuery(fixedRequest);\n  }\n\n  runQuery(fixedRequest: DataQueryRequest<Query>) {\n    return super\n      .query(fixedRequest)\n      .pipe(\n        map((response) =>\n          transformBackendResult(response, fixedRequest.targets, [], this.maxLines)\n        )\n      );\n  }\n\n  toggleQueryFilter(query: Query, filter: ToggleFilterAction): Query {\n    let expression = query.expr ?? '';\n\n    if (!filter.options?.key || !filter.options?.value) {\n      return { ...query, expr: expression };\n    }\n\n    const isFilterFor = filter.type === FilterActionType.FILTER_FOR;\n    const isFilterOut = filter.type === FilterActionType.FILTER_OUT;\n    const value = escapeLabelValueInSelector(filter.options.value);\n    const hasFilter = queryHasFilter(expression, filter.options.key, value)\n    const operator = filter.type === FilterActionType.FILTER_FOR ? 'AND' : 'NOT';\n\n    if (hasFilter) {\n      expression = removeLabelFromQuery(expression, filter.options.key, value);\n    }\n\n    if ((isFilterFor && !hasFilter) || isFilterOut) {\n      expression = addLabelToQuery(expression, filter.options.key, value, operator);\n    }\n\n    return { ...query, expr: expression };\n  }\n\n  queryHasFilter(query: Query, filter: QueryFilterOptions): boolean {\n    let expression = query.expr ?? '';\n    return queryHasFilter(expression, filter.key, filter.value);\n  }\n\n  applyTemplateVariables(target: Query, scopedVars: ScopedVars, adhocFilters?: AdHocVariableFilter[]): Query {\n    const { __auto, __interval, __interval_ms, __range, __range_s, __range_ms, ...rest } = scopedVars || {};\n    const exprWithAdHoc = this.addAdHocFilters(target.expr, adhocFilters);\n\n    const variables = {\n      ...rest,\n      __interval: {\n        value: '$__interval',\n      },\n      __interval_ms: {\n        value: '$__interval_ms',\n      },\n    };\n    return {\n      ...target,\n      legendFormat: this.templateSrv.replace(target.legendFormat, rest),\n      expr: this.templateSrv.replace(exprWithAdHoc, variables, this.interpolateQueryExpr),\n    };\n  }\n\n  addAdHocFilters(queryExpr: string, adhocFilters?: AdHocVariableFilter[]) {\n    if (!adhocFilters) {\n      return queryExpr;\n    }\n\n    let expr = replaceVariables(queryExpr);\n\n    expr = adhocFilters.reduce((acc: string, filter: { key: string; operator: string; value: string }) => {\n      const { key, operator } = filter;\n      let { value } = filter;\n      if (isRegexSelector(operator)) {\n        value = regularEscape(value);\n      } else {\n        value = escapeLabelValueInSelector(value, operator);\n      }\n      return addLabelToQuery(acc, key, operator, value);\n    }, expr);\n\n    return returnVariables(expr);\n  }\n\n  interpolateQueryExpr(value: any, variable: any) {\n    if (!variable.multi && !variable.includeAll) {\n      return regularEscape(value);\n    }\n\n    if (typeof value === 'string') {\n      return specialRegexEscape(value);\n    }\n\n    return lodashMap(value, specialRegexEscape).join('|');\n  }\n}\n\nexport function regularEscape(value: any) {\n  if (typeof value === 'string') {\n    return value.replace(/'/g, \"\\\\\\\\'\");\n  }\n  return value;\n}\n\nexport function specialRegexEscape(value: any) {\n  if (typeof value === 'string') {\n    return regularEscape(value.replace(/\\\\/g, '\\\\\\\\\\\\\\\\').replace(/[$^*{}\\[\\]+?.()|]/g, '\\\\\\\\$&'));\n  }\n  return value;\n}\n","import { DataSourcePlugin } from '@grafana/data';\n\nimport QueryEditorByApp from './components/QueryEditor/QueryEditorByApp';\nimport ConfigEditor from './configuration/ConfigEditor';\nimport { VictoriaLogsDatasource } from './datasource';\n\nexport const plugin = new DataSourcePlugin(VictoriaLogsDatasource)\n  .setQueryEditor(QueryEditorByApp)\n  .setConfigEditor(ConfigEditor)\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__644__","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__545__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__980__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","ref","useRef","current","Components","Breadcrumbs","breadcrumb","title","TimePicker","openButton","fromField","toField","applyTimeRange","calendar","label","closeButton","absoluteTimeRangeTitle","DataSourcePermissions","form","roleType","rolePicker","permissionLevel","DataSource","TestData","QueryTab","scenarioSelectContainer","scenarioSelect","max","min","noise","seriesCount","spread","startValue","drop","DataSourceHttpSettings","urlInput","Jaeger","traceIDInput","Prometheus","configPage","exemplarsAddButton","internalLinkSwitch","exemplarMarker","Menu","MenuComponent","MenuGroup","MenuItem","SubMenu","container","icon","Panels","Panel","headerItems","item","menuItems","menu","containerByTitle","headerCornerInfo","mode","loadingBar","HoverWidget","dragIcon","Visualization","Graph","VisualizationTab","legendSection","Legend","legendItemAlias","name","showLegendSwitch","xAxis","labels","BarGauge","valueV2","PieChart","svgSlice","Text","Table","header","footer","VizLegend","seriesName","Drawer","General","expand","contract","close","rcContentWrapper","PanelEditor","content","OptionsPane","select","fieldLabel","type","DataPane","applyButton","toggleVizPicker","toggleVizOptions","toggleTableView","measureButton","PanelInspector","Data","Stats","Json","Query","refreshButton","jsonObjectKeys","Tab","active","RefreshPicker","runButton","intervalButton","runButtonV2","intervalButtonV2","queryInspectorButton","queryHistoryButton","addQuery","QueryHistory","queryText","QueryEditorRows","rows","QueryEditorRow","actionButton","refId","AlertTab","Alert","alert","severity","alertV2","TransformTab","newTransform","transformationEditor","transformationEditorDebugger","Transforms","card","Reduce","modeLabel","calculationsLabel","SpatialOperations","actionLabel","locationLabel","location","autoOption","coords","option","latitudeFieldLabel","longitudeFieldLabel","geohash","geohashFieldLabel","lookup","lookupFieldLabel","gazetteerFieldLabel","searchInput","NavBar","Configuration","button","Toggle","Reporting","NavMenu","NavToolbar","PageToolbar","tooltip","itemButton","QueryEditorToolbarItem","BackButton","backArrow","OptionsGroup","group","toggle","PluginVisualization","Select","input","singleValue","FieldConfigEditor","OverridesConfigEditor","FolderPicker","containerV2","ReadonlyFolderPicker","DataSourcePicker","inputV2","TimeZonePicker","WeekStartPicker","placeholder","TraceViewer","spanBar","QueryField","QueryBuilder","queryPatterns","labelSelect","valueSelect","matchOperatorSelect","ValuePicker","Search","section","sectionV2","items","itemsV2","cards","collapseFolder","sectionId","expandFolder","dashboardItem","dashboardItems","dashboardCard","folderHeader","folderName","folderContent","DashboardLinks","dropDown","link","LoadingIndicator","CallToActionCard","buttonV2","DataLinksContextMenu","singleLink","CodeEditor","DashboardImportPage","textarea","submit","ImportDashboardForm","PanelAlertTabContent","VisualizationPreview","ColorSwatch","DashboardRow","UserProfile","profileSaveButton","preferencesSaveButton","orgsTable","sessionsTable","FileUpload","inputField","fileNameSpan","DebugOverlay","wrapper","OrgRolePicker","AnalyticsToolbarButton","Variables","variableOption","Annotations","annotationsTypeInput","annotationsChoosePanelInput","selectors","pages","Login","url","username","password","skip","Home","delete","readOnly","saveAndTest","DataSources","dataSources","dataSourceName","EditDataSource","dataSourceUid","settings","AddDataSource","dataSourcePlugins","pluginName","dataSourcePluginsV2","ConfirmModal","AddDashboard","addNewPanel","addNewRow","addNewPanelLibrary","Dashboard","uid","DashNav","nav","navV2","publicDashboardTag","submenu","submenuItem","submenuItemLabels","submenuItemValueDropDownValueLinkTexts","submenuItemValueDropDownDropDown","submenuItemValueDropDownOptionTexts","annotationsWrapper","annotationLabel","annotationToggle","Settings","Actions","deleteDashBoard","sectionItems","saveDashBoard","saveAsDashBoard","timezone","List","addAnnotationCTA","addAnnotationCTAV2","NewAnnotation","panelFilterSelect","showInLabel","previewInDashboard","addVariableCTA","addVariableCTAV2","newButton","table","tableRowNameFields","variableName","tableRowDefinitionFields","tableRowArrowUpButtons","tableRowArrowDownButtons","tableRowDuplicateButtons","tableRowRemoveButtons","Edit","headerLink","modeLabelNew","modeLabelEdit","generalNameInput","generalNameInputV2","generalTypeSelect","generalTypeSelectV2","generalLabelInput","generalLabelInputV2","generalHideSelect","generalHideSelectV2","selectionOptionsMultiSwitch","selectionOptionsIncludeAllSwitch","selectionOptionsCustomAllInput","selectionOptionsCustomAllInputV2","previewOfValuesOption","submitButton","QueryVariable","queryOptionsDataSourceSelect","queryOptionsRefreshSelect","queryOptionsRefreshSelectV2","queryOptionsRegExInput","queryOptionsRegExInputV2","queryOptionsSortSelect","queryOptionsSortSelectV2","queryOptionsQueryInput","valueGroupsTagsEnabledSwitch","valueGroupsTagsTagsQueryInput","valueGroupsTagsTagsValuesQueryInput","ConstantVariable","constantOptionsQueryInput","constantOptionsQueryInputV2","DatasourceVariable","datasourceSelect","TextBoxVariable","textBoxOptionsQueryInput","textBoxOptionsQueryInputV2","CustomVariable","customValueInput","IntervalVariable","intervalsValueInput","marker","Dashboards","dashboards","SaveDashboardAsModal","newName","save","SaveDashboardModal","saveVariables","saveTimerange","SharePanelModal","linkToRenderedImage","ShareDashboardModal","shareButton","PublicDashboard","WillBePublicCheckbox","LimitedDSCheckbox","CostIncreaseCheckbox","PauseSwitch","EnableAnnotationsSwitch","CreateButton","DeleteButton","CopyUrlInput","CopyUrlButton","TemplateVariablesWarningAlert","UnsupportedDataSourcesWarningAlert","NoUpsertPermissionsWarningAlert","EnableTimeRangeSwitch","EmailSharingConfiguration","Container","ShareType","EmailSharingInput","EmailSharingInviteButton","EmailSharingList","DeleteEmail","ReshareLink","page","NotAvailable","pausedDescription","RequestViewAccess","recipientInput","Explore","graph","scrollView","SoloPanel","PluginsList","list","listItem","signatureErrorNotice","PluginPage","signatureInfo","disabledInfo","PlaylistForm","interval","itemDelete","BrowseDashbards","row","checkbox","FolderView","PublicDashboards","ListItem","linkButton","configButton","trashcanButton","UserListPage","tabs","allUsers","orgUsers","publicDashboardsUsers","users","org","admin","publicDashboards","UserListAdminPage","UsersListPage","UsersListPublicDashboardsPage","DashboardsListModal","components","options","codeLens","contextmenu","fixedOverflowWidgets","folding","fontSize","lineDecorationsWidth","lineNumbers","minimap","enabled","overviewRulerBorder","overviewRulerLanes","padding","top","bottom","renderLineHighlight","scrollbar","vertical","verticalScrollbarSize","horizontal","horizontalScrollbarSize","scrollBeyondLastLine","suggestFontSize","wordWrap","props","containerRef","onBlur","onRunQuery","initialValue","onRunQueryRef","useLatest","onBlurRef","styles","theme","css","shape","borderRadius","borderColor","typography","fontFamilyMonospace","getStyles","useTheme2","div","aria-label","className","ReactMonacoEditor","language","onMount","editor","monaco","onDidBlurEditorWidget","getValue","updateElementHeight","containerDiv","pixelHeight","getContentHeight","style","height","width","pixelWidth","clientWidth","layout","onDidContentSizeChange","addAction","id","keybindings","KeyMod","Shift","KeyCode","Enter","run","addCommand","CtrlCmd","KeyK","global","dispatchEvent","KeyboardEvent","metaKey","placeholderDecorators","range","Range","contents","isWholeLine","decorators","checkDecorators","model","getModel","newDecorators","getValueLength","deltaDecorations","onDidChangeModelContent","MonacoQueryFieldLazy","Suspense","fallback","Field","MonacoQueryFieldWrapper","lastRunValueRef","runQueryOnBlur","onChange","rest","handleRunQuery","ExtraFieldElement","query","history","dataTestId","data-testid","nextQuery","expr","buttonGroup","colors","border","medium","spacing","bodySmall","hint","text","disabled","datasource","data","app","useStyles2","QueryDirection","SupportingQueryType","QueryType","FilterActionType","QueryEditor","React","queries","dataIsStale","setDataIsStale","useState","result","queryType","getQueryWithDefaults","useEffect","QueryCodeEditor","isEqual","showExplain","CoreApp","Correlations","Button","variant","size","onClick","state","LoadingState","Loading","length","displayName","QueryEditorByApp","CloudAlerting","QueryEditorForAlerting","memo","AlertingSettings","onOptionsChange","InlineField","labelWidth","InlineSwitch","jsonData","manageAlerts","event","currentTarget","checked","tips","HelpfulLinks","h3","map","t","href","target","rel","QuerySettings","maxLines","onMaxLinedChange","Input","spellCheck","setMaxLines","isFunction","extendStatics","b","setPrototypeOf","__proto__","Array","p","__extends","TypeError","String","__","constructor","create","__values","s","iterator","m","i","next","done","__read","ar","push","error","__spreadArray","to","from","pack","arguments","l","slice","concat","ctorFunc","UnsubscriptionError","errors","instance","Error","stack","message","err","toString","join","arrRemove","arr","index","indexOf","splice","Subscription","initialTeardown","closed","_parentage","_finalizers","empty","unsubscribe","e_1","_a","e_2","_b","isArray","_parentage_1","_parentage_1_1","remove","e_1_1","return","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","e_2_1","add","teardown","_hasParent","_addParent","parent","includes","_removeParent","EMPTY","timeoutProvider","setTimeout","handler","timeout","args","_i","delegate","apply","clearTimeout","handle","noop","COMPLETE_NOTIFICATION","createNotification","kind","Subscriber","_super","destination","_this","isStopped","EMPTY_OBSERVER","complete","SafeSubscriber","handleStoppedNotification","nextNotification","_next","_error","_complete","_bind","bind","fn","thisArg","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","context_1","reportUnhandledError","notification","subscriber","onStoppedNotification","OperatorSubscriber","onNext","onComplete","onError","onFinalize","shouldUnsubscribe","closed_1","project","init","source","subscribe","lift","hasLift","liftedSource","fieldFromDerivedFieldConfig","derivedFieldConfigs","dataSourceSrv","getDataSourceSrv","dataLinks","reduce","acc","derivedFieldConfig","datasourceUid","dsSettings","getInstanceSettings","urlDisplayLabel","internal","datasourceName","FieldType","string","config","links","values","makeTableFrames","instantMetricFrames","framesWithRefId","filter","f","framesByRefId","groupBy","frame","entries","frames","tableTimeField","time","tableValueField","number","allLabelNames","Set","fields","field","keys","flat","labelFields","sort","labelName","filterable","forEach","timeField","find","valueField","timeArray","valueArray","x","meta","preferredVisualisationType","makeTableFrame","DefaultBufferLength","nextPropID","NodeProp","perNode","deserialize","match","RangeError","NodeType","closedBy","str","split","openedBy","isolate","contextHash","lookAhead","mounted","MountedTree","tree","overlay","parser","noProps","flags","define","spec","skipped","src","isTop","isSkipped","isError","isAnonymous","is","direct","node","groups","found","none","NodeSet","types","extend","newTypes","newProps","assign","CachedNode","WeakMap","CachedInnerNode","IterMode","Tree","children","positions","ch","test","JSON","stringify","cursor","TreeCursor","topNode","cursorAt","pos","side","scope","moveTo","set","_tree","TreeNode","resolve","resolveNode","resolveInner","resolveStack","inner","layers","scan","context","mount","root","iterStack","stackIterator","iterate","enter","leave","anon","IncludeAnonymous","c","entered","firstChild","nextSibling","propValues","balance","balanceRange","makeTree","build","buffer","nodeSet","maxBufferLength","reused","minRepeatType","FlatBufferCursor","takeNode","parentStart","minPos","inRepeat","depth","start","end","lookAheadAtStart","startPos","maxSize","fork","minStart","nodeSize","localSkipped","nodeStart","findBufferSize","Uint16Array","endPos","copyToBuffer","TreeBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","takeFlatNode","reverse","make","last","lookAheadProp","lastI","makeBalanced","nodes","nodeCount","stopAt","j","base","pop","pair","bufferStart","startIndex","topID","buildTree","childString","endIndex","findChild","dir","pick","checkSide","startI","endI","copy","len","Math","overlays","IgnoreOverlays","BaseNode","getChild","before","after","getChildren","matchContext","matchNodeContext","enterUnfinishedNodesBefore","childBefore","lastChild","prevSibling","_parent","super","nextChild","ExcludeBuffers","BufferNode","BufferContext","hasChild","IgnoreMounts","childAfter","rPos","nextSignificantParent","val","toTree","cur","child","externalSibling","heads","picked","newHeads","StackIterator","bufferNode","yieldNode","unshift","yieldBuf","yield","enterChild","sibling","atLastNode","move","prev","cache","mustLeave","some","nodeSizeCache","balanceType","mkTop","mkTree","total","maxChild","ceil","divide","offset","groupFrom","groupStart","groupSize","nextSize","only","Parser","startParse","fragments","ranges","StringInput","createParse","parse","advance","chunk","lineChunks","read","Stack","reducePos","score","bufferBase","curContext","_","cx","StackContext","pushState","action","dPrec","dynamicPrecedence","getGoto","minRepeatTerm","storeNode","reduceContext","lastBigReductionStart","bigReductionCount","lastBigReductionSize","count","stateFlag","baseStateID","term","isReduce","shift","nextState","maxNode","shiftContext","nextStart","nextEnd","useNode","updateContext","tracker","reuse","stream","reset","off","recoverByDelete","isNode","canShift","sim","SimulatedStack","stateSlot","hasAction","recoverByInsert","nextStates","best","v","forceReduce","validAction","backup","findForcedReduction","seen","explore","allActions","rDepth","forceAll","deadEnd","restart","sameState","other","dialectEnabled","dialectID","dialect","emitContext","hash","emitLookAhead","newCx","setLookAhead","strict","goto","StackBufferCursor","maybeNext","decodeArray","Type","array","out","charCodeAt","stop","digit","CachedToken","extended","mask","nullToken","InputStream","chunkOff","chunk2","chunk2Pos","token","rangeIndex","chunkPos","readNext","resolveOffset","assoc","clipPos","peek","idx","resolved","acceptToken","endOffset","acceptTokenTo","getChunk","nextChunk","setDone","TokenGroup","precTable","precOffset","groupMask","accEnd","allows","overrides","low","high","mid","readToken","tokenPrecTable","findOffset","tableData","tableOffset","iPrev","contextual","verbose","process","env","LOG","stackIDs","cutAt","fragment","safeFrom","safeTo","trees","nextFragment","fr","openStart","openEnd","nodeAt","TokenCache","tokens","mainToken","actions","tokenizers","getActions","actionIndex","main","tokenizer","updateCachedToken","addActions","eofTerm","getMainToken","specialized","specializers","putAction","Parse","recovering","nextStackID","minStackPos","stoppedAt","topTerm","stacks","bufferLength","parsedPos","stopped","stoppedTokens","newStacks","advanceStack","tok","finished","findFinished","console","log","stackID","stackToTree","getName","SyntaxError","runRecovery","maxRemaining","outer","strictCx","cxHash","cached","defaultReduce","localStack","advanceFully","pushStackDedup","restarted","tokenEnd","force","forceBase","insert","fromCodePoint","Dialect","LRParser","wrappers","version","nodeNames","repeatNodeCount","topTerms","topRules","nodeProps","setProp","nodeID","propSpec","skippedNodes","propSources","tokenArray","tokenData","specializerSpecs","getSpecializer","states","Uint32Array","stateData","maxTerm","dialects","dynamicPrecedences","tokenPrec","termNames","parseDialect","w","loose","groupTag","terminal","slot","flag","deflt","configure","info","external","contextTracker","wrap","hasWrappers","prec","part","Uint8Array","keywordTokens","json","logfmt","unpack","pattern","regexp","ip","label_format","line_format","label_replace","vector","bool","on","ignoring","group_left","group_right","unwrap","decolorize","keep","contextualKeywordTokens","by","without","and","or","unless","sum","avg","stddev","stdvar","bottomk","topk","sort_desc","spec_Identifier","count_over_time","rate","rate_counter","bytes_over_time","bytes_rate","avg_over_time","sum_over_time","min_over_time","max_over_time","stddev_over_time","stdvar_over_time","quantile_over_time","first_over_time","last_over_time","absent_over_time","bytes","duration","duration_seconds","toLowerCase","specializeIdentifier","extendIdentifier","LineFilter","Filter","PipeExact","PipeMatch","FilterOp","OrFilter","getStringsFromLineFilter","getHighlighterExpressionsFromQuery","results","filters","nodeTypes","getNodesFromQuery","pipeExact","pipeMatch","strings","filterTerm","substring","trim","backtickedTerm","unwrappedFilterTerm","resultTerm","replace","escapeRegExp","setFrameMeta","oldMeta","newMeta","processStreamsFrames","queryMap","custom","__error__","dataFrameHasError","newFrame","limit","searchWords","derivedFields","dataFrame","derivedFieldsGrouped","newFields","lineField","matcherType","intersectingKey","matcherRegex","logMatch","getDerivedFields","processStreamFrame","processMetricRangeFrames","transformBackendResult","response","dataFrames","isDataFrame","Map","streamsFrames","metricInstantFrames","metricRangeFrames","every","isMetricFrame","Instant","groupFrames","improvedErrors","improveError","REG_METACHARACTERS","isRegexSelector","selector","escapeLabelValueInExactSelector","labelValue","escapeLabelValueInSelector","escapeLabelValueInRegexSelector","queryHasFilter","addLabelToQuery","operator","varTypeFunc","variableRegex","VictoriaLogsDatasource","DataSourceWithBackend","request","targets","q","timerange","toISOString","fixedRequest","runQuery","pipe","toggleQueryFilter","expression","isFilterFor","FILTER_FOR","isFilterOut","FILTER_OUT","hasFilter","parts","findIndex","removeBefore","isStart","removeAtIndexAndBefore","removeLabelFromQuery","applyTemplateVariables","scopedVars","adhocFilters","__auto","__interval","__interval_ms","__range","__range_s","__range_ms","exprWithAdHoc","addAdHocFilters","variables","legendFormat","templateSrv","interpolateQueryExpr","queryExpr","var1","var2","fmt2","var3","fieldPath","fmt3","fmt","variable","varType","replaceVariables","regularEscape","parseInt","returnVariables","multi","includeAll","specialRegexEscape","lodashMap","instanceSettings","getTemplateSrv","settingsData","annotations","plugin","DataSourcePlugin","setQueryEditor","setConfigEditor","defaultUrl","dataSourceConfig","sigV4AuthToggleEnabled","sigV4AuthEnabled"],"sourceRoot":""}